(S (NP (DT The) (NNP Trellys) (NN project)) (VP (VBZ has) (VP (VBN produced) (NP (NP (JJ several) (NNS designs)) (PP (IN for) (NP (JJ practical) (ADJP (RB dependently) (VBN typed)) (NNS languages)))))) (. .))
(S (NP (DT These) (NNS languages)) (VP (VBP are) (VP (VP (VBN broken) (PP (IN into) (NP (CD two) (NNS fragments) (HYPH -) (NN a_logical_fragment))) (SBAR (SBAR (WHADVP (WRB where)) (S (NP (DT every) (NN term)) (VP (VBZ normalizes)))) (CC and) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADJP (JJ consistent)) (SBAR (WHADVP (WRB when)) (S (VP (VBN interpreted) (PP (IN as) (NP (DT a) (NN logic))))))))))) (, ,) (CC and) (VP (NP (NN a_programmatic_fragment)) (PP (IN with) (NP (NP (JJ general) (NN recursion)) (CC and) (NP (JJ other) (ADJP (JJ convenient) (CC but) (JJ unsound)) (NNS features))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (DT a) (JJ small) (NN example) (NN language)) (PP (IN in) (NP (DT this) (NN style)))) (. .))
(S (NP (PRP$ Our) (NN design)) (VP (VBZ allows) (NP (DT the) (NN programmer) (S (VP (TO to) (ADVP (RB explicitly)) (VP (VB mention) (CC and) (VB pass) (NP (NP (NN information)) (PP (IN between) (NP (DT the) (CD two) (NNS fragments))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (DT this) (NN feature)) (ADVP (RB substantially)) (VP (VP (VBZ complicates) (NP (DT the) (NN metatheory))) (CC and) (VP (VB present) (NP (DT a) (JJ new) (NN technique)))))) (, ,) (S (VP (VBG combining) (NP (DT the) (JJ traditional) (NML (NNP Girard) (HYPH -) (NNP Tait)) (NN method)) (PP (IN with) (NP (NML (NN step) (HYPH -) (VBN indexed)) (JJ logical) (NNS relations))))) (, ,) (SBAR (WHNP (WDT which)) (S (NP (PRP we)) (VP (VBP use) (S (VP (TO to) (VP (VB show) (NP (NN normalization)) (PP (IN for) (NP (DT the) (JJ logical) (NN fragment)))))))))) (. .))
