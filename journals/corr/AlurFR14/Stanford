(S (NP (PRP We)) (VP (VBP focus) (PP (IN on) (NP (-LRB- -LRB-) (NP (JJ partial)) (-RRB- -RRB-) (SBAR (S (VP (VBZ functions) (NP (DT that) (NN map) (NN input) (NNS strings)) (PP (IN to) (NP (NP (DT a) (NN monoid)) (PP (JJ such) (IN as) (NP (NP (DT the) (NN set)) (PP (IN of) (NP (NP (NP (NNS integers)) (PP (IN with) (NP (NN addition)))) (CC and) (NP (NP (DT the) (NN set)) (PP (IN of) (NP (NP (NN output) (NNS strings)) (PP (IN with) (NP (NN concatenation)))))))))))))))))) (. .))
(S (NP (NP (DT The) (NN notion)) (PP (IN of) (NP (NP (NN regularity)) (PP (IN for) (NP (JJ such) (NNS functions)))))) (VP (VBZ has) (VP (VBN been) (VP (VBN defined) (S (VP (VBG using) (NP (NP (NML (CD two) (HYPH -) (NN way)) (ADJP (JJ finite) (HYPH -) (NN state)) (NNS transducers)) (, ,) (NP (NP (-LRB- -LRB-) (NML (CD one) (HYPH -) (NN way)) (-RRB- -RRB-) (NN cost)) (NP (NN register) (NN automata))) (, ,) (CC and) (NP (ADJP (NP (NN MSO)) (HYPH -) (JJ definable)) (NN graph) (NNS transformations)))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP give) (S (NP (NP (DT an) (ADJP (UCP (ADJP (JJ algebraic)) (CC and) (NML (NN machine))) (HYPH -) (JJ independent)) (NN characterization)) (PP (IN of) (NP (DT this) (NN class)))) (ADJP (JJ analogous) (PP (IN to) (NP (NP (DT the) (NN definition)) (PP (IN of) (NP (JJ regular) (NNS languages))))))) (PP (IN by) (NP (JJ regular) (NNS expressions)))) (. .))
(S (SBAR (WHADVP (WRB When)) (S (NP (DT the) (NN monoid)) (VP (VBZ is) (ADJP (JJ commutative))))) (, ,) (NP (PRP we)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT every) (JJ regular) (NN function)) (VP (MD can) (VP (VP (VB be) (VP (VBN constructed) (PP (IN from) (NP (NP (JJ constant) (NNS functions)) (VP (VBG using) (NP (NP (DT the) (NNS combinators)) (PP (IN of) (NP (NP (NP (NN choice)) (, ,) (NP (NN split) (NN sum)) (, ,) (CC and) (NP (VBN iterated) (NN sum))) (, ,) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (NP (NP (NNS analogs)) (PP (IN of) (NP (NP (NN union)) (, ,) (NP (NP (NN concatenation)) (, ,) (CC and) (NP (NML (NN Kleene) (HYPH -))) (X (NFP *))) (, ,) (ADVP (RB respectively)))))))))))))))) (, ,) (CC but) (VP (VB enforce) (NP (NP (NP (JJ unique)) (-LRB- -LRB-) (CC or) (NP (JJ unambiguous)) (-RRB- -RRB-)) (VP (VBG parsing))))))))) (. .))
(S (NP (PRP$ Our) (JJ main) (NN result)) (VP (VBZ is) (PP (IN for) (NP (NP (NP (DT the) (JJ general) (NN case)) (PP (IN of) (NP (JJ non-commutative) (NNS monoids)))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (PP (IN of) (NP (NP (JJ particular) (NN interest)) (PP (IN for) (S (VP (VBG capturing) (NP (NML (NML (JJ regular) (NN string)) (HYPH -) (PP (IN to) (HYPH -) (NP (NN string)))) (NNS transformations)) (PP (IN for) (NP (NN document) (NN processing)))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT the) (VBG following) (JJ additional) (NNS combinators)) (VP (VBP suffice) (PP (IN for) (S (VP (VBG constructing) (NP (NP (NP (DT all) (JJ regular) (NNS functions)) (: :) (NP (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-)) (NP (NP (DT the) (ADJP (JJ left) (HYPH -) (JJ additive)) (NNS versions)) (PP (IN of) (NP (NN split) (NN sum)))) (CC and) (NP (NP (VBN iterated) (NN sum)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBP allow) (NP (NP (NNS transformations)) (PP (JJ such) (IN as) (NP (NN string) (NN reversal)))))))))) (: ;) (NP (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-)) (NP (NN sum)) (PP (IN of) (NP (NP (NNS functions)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (NP (NP (NNS transformations)) (PP (JJ such) (IN as) (NP (NP (NN copying)) (PP (IN of) (NP (NNS strings)))))))))))) (: ;) (CC and) (NP (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-)) (NP (NN function) (NN composition)) (, ,) (CC or) (NP (ADVP (RB alternatively)) (, ,) (NP (DT a) (JJ new) (NN concept)) (PP (IN of) (NP (NP (VBN chained) (NN sum)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (NP (NP (NN output) (NNS values)) (PP (IN from) (NP (JJ adjacent) (NNS blocks)))) (PP (IN to) (NP (NN mix)))))))))))))))))) (. .))
