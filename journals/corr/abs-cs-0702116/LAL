(S (NP (NNP Bedwyr)) (VP (VBZ is) (NP (NP (DT a) (NN generalization)) (PP (IN of) (NP (JJ logic) (NN programming))) (SBAR (WHNP (WDT that)) (S (VP (VBZ allows) (NP (NP (NN model) (VBG checking)) (ADVP (RB directly)) (PP (IN on) (NP (NP (JJ syntactic) (NNS expressions)) (VP (ADVP (RB possibly)) (VBG containing) (NP (NNS bindings))))))))))) (. .))
(S (NP (NP (DT This) (NN system)) (, ,) (VP (VBN written) (PP (IN in) (NP (NNP OCaml)))) (, ,)) (VP (VBZ is) (NP (NP (DT a) (JJ direct) (NN implementation)) (PP (IN of) (NP (NP (CD two) (JJ recent) (NNS advances)) (PP (IN in) (NP (NP (DT the) (NN theory)) (PP (IN of) (NP (JJ proof) (NN search))))))))) (. .))
(S (NP (DT The) (JJ first)) (VP (VBZ is) (VP (VBN centered) (PP (IN on) (NP (DT the) (NN fact) (SBAR (IN that) (S (NP (DT both) (NP (JJ finite) (NN success)) (CC and) (NP (JJ finite) (NN failure))) (VP (MD can) (VP (VB be) (VP (VBN captured) (PP (IN in) (NP (DT the) (NN sequent) (NN calculus))) (PP (IN by) (S (VP (VBG incorporating) (NP (NP (NN inference) (NNS rules)) (PP (IN for) (NP (NP (NNS definitions)) (SBAR (WHNP (WDT that)) (S (VP (VBP allow) (S (NP (VBN fixed) (NNS points)) (VP (TO to) (VP (VB be) (VP (VBN explored))))))))))))))))))))))) (. .))
(S (PP (IN As) (NP (DT a) (NN result))) (, ,) (NP (NP (NN proof) (NN search)) (PP (IN in) (NP (JJ such) (DT a) (JJ sequent) (NN calculus)))) (VP (MD can) (VP (VB capture) (NP (NP (JJ simple) (NN model) (VBG checking) (NNS problems)) (CONJP (RB as) (RB well) (IN as)) (NP (NP (MD may) (CC and) (MD must) (VB behavior)) (PP (IN in) (NP (JJ operational) (NNS semantics))))))) (. .))
(S (NP (DT These) (NNS features)) (VP (VBP allow) (NP (NP (VBG reasoning)) (ADVP (RB directly)) (PP (IN on) (NP (NP (NNS expressions)) (VP (VBG containing) (NP (NN bound) (NNS variables))))))) (. .))
