(S (NP (NNS Programs) (S (VP (TO to) (VP (VB solve) (NP (ADJP (RB so) (HYPH -) (VBN called)) (NN constraint) (NNS problems)))))) (VP (VBP are) (NP (NP (JJ complex) (NNS pieces)) (PP (IN of) (NP (NP (NN software)) (SBAR (WHNP (WDT which)) (S (VP (VBP require) (NP (JJ many) (NN design) (NNS decisions)) (S (VP (TO to) (VP (VB be) (VP (VBN made) (ADVP (RBR more) (CC or) (RBR less)) (ADVP (RB arbitrarily)) (PP (IN by) (NP (DT the) (NN implementer)))))))))))))) (. .))
(S (NP (DT These) (NNS decisions)) (VP (VBP affect) (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (DT the) (JJ finished) (NN solver)))) (ADVP (RB significantly))) (. .))
(S (SBAR (IN Once) (S (NP (DT a) (NN design) (NN decision)) (VP (VBZ has) (VP (VBN been) (VP (VBN made)))))) (, ,) (NP (PRP it)) (VP (MD can) (RB not) (ADVP (RB easily)) (VP (VB be) (VP (VBN reversed) (, ,) (SBAR (IN although) (S (NP (DT a) (JJ different) (NN decision)) (VP (MD may) (VP (VB be) (ADJP (ADJP (RBR more) (JJ appropriate)) (PP (IN for) (NP (DT a) (JJ particular) (NN problem))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP investigate) (S (VP (VBG using) (NP (NN machine) (NN learning)) (S (VP (TO to) (VP (VB make) (NP (DT these) (NNS decisions)) (ADVP (RB automatically)) (PP (VBG depending) (PP (IN on) (NP (DT the) (NN problem) (S (VP (TO to) (VP (VB solve) (PP (IN with) (NP (DT the) (NN alldifferent) (NN constraint))) (PP (IN as) (NP (DT an) (NN example))))))))))))))) (. .))
(S (NP (PRP$ Our) (NN system)) (VP (VBZ is) (ADJP (JJ capable) (PP (IN of) (S (VP (VBG making) (NP (NP (JJ non-trivial) (, ,) (ADJP (JJ multi-level)) (NNS decisions)) (SBAR (WHNP (WDT that)) (S (VP (VBP improve) (PP (IN over) (S (ADVP (RB always)) (VP (VBG making) (NP (DT a) (NN default) (NN choice)))))))))))))) (. .))
