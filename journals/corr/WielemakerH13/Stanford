(S (NP (NP (NP (NP (NNP Prolog) (POS 's)) (NN support)) (PP (IN for) (NP (NP (JJ dynamic) (NN programming)) (, ,) (NP (NN meta) (NN programming)) (CC and) (NP (NN text) (NN processing))))) (VP (VBG using) (NP (NN context) (JJ free) (NNS grammars)))) (VP (VBP make) (S (NP (DT the) (NN language)) (ADJP (RB highly) (JJ suitable) (PP (IN for) (S (VP (VP (VBG defining) (NP (ADJP (NN domain) (JJ specific)) (NNS languages)) (PRN (-LRB- -LRB-) (NP (NN DSL)) (-RRB- -RRB-))) (CONJP (RB as) (RB well) (IN as)) (VP (VBG analysing) (, ,) (VBG refactoring) (CC or) (VBG generating) (NP (NP (NN expression) (NNS states)) (PP (IN in) (NP (JJ other) (-LRB- -LRB-) (NN programming) (-RRB- -RRB-) (NNS languages))))))))))) (. .))
(S (INTJ (UH Well)) (NP (JJ known) (NNS DSLs)) (VP (VBP are) (NP (NP (DT the) (NNP DCG) (-LRB- -LRB-) (NP (JJ Definite) (NN Clause) (NN Grammar)) (-RRB- -RRB-) (NN notation)) (CC and) (NP (NP (NN constraint) (NNS languages)) (PP (JJ such) (IN as) (NP (NN CHR)))))) (. .))
(S (NP (DT These) (NNS extensions)) (VP (VP (VBP use) (NP (NNP Prolog) (NN operator) (NNS declarations))) (CC and) (VP (NP (NP (DT the)) (-LRB- {) (NFP ...) (-RRB- })) (ADJP (NN notation) (SBAR (S (VP (TO to) (VP (VB realise) (NP (DT a) (JJ good) (NN syntax))))))))) (. .))
(S (SBAR (WHADVP (WRB When)) (S (NP (NP (JJ external) (NNS languages)) (, ,) (PP (JJ such) (IN as) (NP (NP (NN HTML)) (, ,) (NP (NN SQL)) (CC or) (NP (NNP JavaScript))))) (VP (VBP enter) (NP (DT the) (NN picture))))) (, ,) (NP (NNS operators)) (ADVP (RB no) (RB longer)) (VP (VB satisfy) (PP (IN for) (NP (NP (VBG embedding) (NNS snippets)) (PP (IN of) (NP (NP (DT these) (NNS languages)) (PP (IN into) (NP (DT a) (NNP Prolog) (NN source) (NN file)))))))) (. .))
(S (PP (IN In) (NP (NN addition))) (, ,) (NP (NNP Prolog)) (VP (VBZ has) (NP (NP (JJ poor) (NN support)) (PP (IN for) (S (VP (VBG quoting) (NP (JJ long) (NN text) (NNS fragments))))))) (. .))
(S (NP (NNP Haskell)) (VP (VBD introduced) (S (NP (JJ quasi) (NN quotationsto)) (VP (VB resolve) (NP (DT this) (NN problem))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (S (NP (PRP we)) (ADJP (`` `) (JJ ported) ('' ')) (S (NP (NP (DT the) (NNP Haskell) (NN mechanism)) (PP (IN for) (NP (NP (JJ quasi)) (VP (VBG quoting) (PP (IN to) (NP (NNP Prolog))))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (DT this)) (VP (MD can) (VP (VB be) (VP (VBN done) (ADVP (RB cleanly))))))))) (CC and) (S (NP (NP (DT that) (NN quasi)) (VP (VBG quoting))) (VP (MD can) (VP (VB solve) (NP (DT the) (ADJP (RB above) (VBN mentioned)) (NNS problems))))) (. .))
