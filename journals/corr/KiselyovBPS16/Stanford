(S (S (NP (NNP Stream) (NN processing)) (VP (VBZ is) (ADJP (JJ mainstream) (PRN (-LRB- -LRB-) (ADVP (RB again)) (-RRB- -RRB-))))) (: :) (S (NP (ADJP (RB Widely) (HYPH -) (VBN used)) (NN stream) (NNS libraries)) (VP (VBP are) (ADVP (RB now)) (ADJP (JJ available) (PP (PP (IN for) (NP (NP (RB virtually) (DT all) (JJ modern) (NN OO)) (CC and) (NP (JJ functional) (NNS languages)))) (, ,) (PP (IN from) (NP (NP (NNP Java)) (PP (IN to) (NP (NNP C#))))))) (PP (IN to) (NP (NNP Scala))) (PP (IN to) (NP (NNP OCaml))) (PP (IN to) (NP (NNP Haskell))))) (. .))
(S (CC Yet) (NP (NN expressivity) (CC and) (NN performance)) (VP (VBP are) (ADVP (RB still)) (VP (VBG lacking))) (. .))
(S (PP (IN For) (NP (NN instance))) (, ,) (NP (NP (DT the) (ADJP (ADJP (JJ popular)) (, ,) (ADJP (RB well) (HYPH -) (VBN optimized))) (NNP Java)) (NP (CD 8) (NNS streams))) (VP (VP (VBP do) (RB not) (VP (VB support) (NP (DT the) (NN zip) (NN operator)))) (CC and) (VP (VBP are) (ADVP (RB still)) (ADJP (ADJP (NP (NP (DT an) (NN order)) (PP (IN of) (NP (NN magnitude)))) (JJR slower)) (PP (IN than) (NP (ADJP (NN hand) (HYPH -) (VBN written)) (NNS loops)))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT the) (JJ first) (NN approach)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBZ represents) (NP (NP (DT the) (JJ full) (NN generality)) (PP (IN of) (NP (NN stream) (NN processing))))) (CC and) (VP (VBZ eliminates) (NP (NNS overheads))))))) (, ,) (PP (IN via) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NN staging)))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (DT an) (ADJP (RB unusually) (JJ rich)) (JJ semantic) (NN model)) (PP (IN of) (NP (NN stream) (NN interaction))))))) (. .))
(S (NP (PRP We)) (VP (VBP support) (NP (NP (DT any) (NML (NML (NML (NN combination)) (PP (IN of) (S (VP (VP (VBG zipping)) (, ,) (VP (VBG nesting)))))) (-LRB- -LRB-) (CC or) (NML (JJ flat) (HYPH -) (NN mapping)) (-RRB- -RRB-))) (, ,) (NP (NN sub-ranging)) (, ,) (NP (NN filtering)) (, ,) (NP (NML (NML (NN mapping)) (HYPH -) (PP (IN of))) (NN finite)) (CC or) (NP (JJ infinite) (NNS streams)))) (. .))
(S (NP (PRP$ Our) (NN model)) (VP (VBZ captures) (NP (NNS idiosyncrasies)) (SBAR (IN that) (S (NP (DT a) (NN programmer)) (VP (VBZ uses) (PP (IN in) (S (VP (VBG optimizing) (NP (NP (NP (NN stream) (NNS pipelines)) (, ,) (PP (JJ such) (IN as) (NP (NN rate) (NNS differences)))) (CC and) (NP (NP (DT the) (NN choice)) (PP (IN of) (NP (NP (DT a) (`` ")) (PP (IN for) (`` ") (NP (FW vs.)) ('' ")))))) (PP (IN while) (`` ") (NP (NNS loops)))))))))) (. .))
(S (NP (PRP$ Our) (NN approach)) (VP (VP (VBZ delivers) (NP (NML (NML (NML (NN hand)) (HYPH -) (VP (VBN written))) (HYPH -) (ADJP (JJ like))) (NN code))) (, ,) (CC but) (VP (ADVP (RB automatically)))) (. .))
(S (NP (PRP It)) (ADVP (RB explicitly)) (VP (VBZ avoids) (NP (DT the) (NN reliance)) (PP (IN on) (NP (NP (NML (JJ black) (HYPH -) (NN box)) (NNS optimizers)) (CC and) (NP (ADJP (RB sufficiently) (HYPH -) (JJ smart)) (NNS compilers)))) (, ,) (S (VP (VBG offering) (NP (NP (JJS highest)) (, ,) (UCP (ADJP (VBN guaranteed)) (CC and) (NML (JJ portable) (NN performance))))))) (. .))
(S (NP (PRP$ Our) (NN approach)) (VP (VBZ relies) (PP (IN on) (NP (NP (NML (JJ high) (HYPH -) (NN level)) (NNS concepts)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADVP (RB then)) (ADVP (RB readily)) (VP (VBN mapped) (PP (IN into) (NP (DT an) (NN implementation)))))))))) (. .))
(S (S (ADVP (RB Accordingly)) (, ,) (PRN (S (NP (PRP we)) (VP (VBP have) (NP (NP (CD two) (JJ distinct) (NNS implementations)) (: :) (NP (DT an) (NML (NN OCaml) (NN stream)) (NN library)))))) (, ,) (VP (VBD staged) (PP (IN via) (NP (NNP MetaOCaml))))) (, ,) (CC and) (S (NP (NP (DT a) (NNP Scala) (NN library)) (PP (IN for) (NP (DT the) (NNP JVM)))) (, ,) (VP (VBD staged) (PP (IN via) (NP (NNP LMS))))) (. .))
(S (PP (IN In) (NP (DT both) (NNS cases))) (, ,) (NP (PRP we)) (VP (VBP derive) (NP (NP (NNS libraries)) (ADJP (ADJP (JJR richer)) (CC and) (ADVP (RB simultaneously)) (ADJP (NP (QP (JJ many) (NNS tens) (IN of) (NNS times))) (JJR faster) (PP (IN than) (NP (JJ past) (NN work))))))) (. .))
(S (NP (PRP We)) (ADVP (RB greatly)) (VP (VBP exceed) (PP (IN in) (NP (NN performance))) (NP (NP (DT the) (JJ standard) (NN stream) (NNS libraries)) (ADJP (JJ available) (PP (IN in) (NP (NNP Java) (, ,) (NNP Scala) (CC and) (NNP OCaml))))) (, ,) (PP (VBG including) (NP (NP (DT the) (ADJP (RB well) (HYPH -) (VBN optimized)) (NNP Java)) (NP (CD 8) (NNS streams))))) (. .))
