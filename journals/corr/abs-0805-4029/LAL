(S (NP (NP (NNP Concurrent) (NNP ML) (POS 's)) (NNS events) (CC and) (NN event) (NNS combinators)) (VP (VBP facilitate) (NP (NP (JJ modular) (NN concurrent) (VBG programming)) (PP (IN with) (NP (JJ first-class) (NN synchronization) (NNS abstractions))))) (. .))
(S (NP (NP (DT A) (JJ standard) (NN implementation)) (PP (IN of) (NP (DT these) (NNS abstractions)))) (VP (NNS relies) (PP (IN on) (NP (NP (ADJP (RB fairly) (JJ complex)) (NNS manipulations)) (PP (IN of) (NP (NP (JJ first-class) (NNS continuations)) (PP (IN in) (NP (DT the) (JJ underlying) (NN language)))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT a) (JJ lightweight) (NN implementation)) (PP (IN of) (NP (DT these) (NNS abstractions))) (PP (IN in) (NP (NP (NNP Concurrent) (NNP Haskell)) (, ,) (NP (NP (DT a) (NN language)) (SBAR (WHNP (WDT that)) (S (ADVP (RB already)) (VP (VBZ provides) (NP (JJ first-order) (NN message) (NN passing)))))))))) (. .))
(SINV (PP (IN At) (NP (NP (DT the) (NN heart)) (PP (IN of) (NP (PRP$ our) (NN implementation))))) (VP (VBZ is)) (NP (DT a) (JJ new) (VBN distributed) (NN synchronization) (NN protocol)) (. .))
