(UCP (NP (JJ Concurrent) (NP (NNP ML) (POS 's)) (NNS events)) (CC and) (S (NP (NN event) (NNS combinators)) (VP (VBP facilitate) (NP (NP (JJ modular) (JJ concurrent) (NN programming)) (PP (IN with) (NP (NML (JJ first) (HYPH -) (NN class)) (NN synchronization) (NNS abstractions)))))) (. .))
(S (NP (NP (DT A) (JJ standard) (NN implementation)) (PP (IN of) (NP (DT these) (NNS abstractions)))) (VP (VBZ relies) (PRT (RP on)) (NP (NP (ADJP (RB fairly) (JJ complex)) (NNS manipulations)) (PP (IN of) (NP (NP (NML (JJ first) (HYPH -) (NN class)) (NNS continuations)) (PP (IN in) (NP (DT the) (JJ underlying) (NN language))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT a) (JJ lightweight) (NN implementation)) (PP (IN of) (NP (NP (NP (DT these) (NNS abstractions)) (PP (IN in) (NP (JJ Concurrent) (NNP Haskell)))) (, ,) (NP (NP (DT a) (NN language)) (SBAR (WHNP (WDT that)) (S (ADVP (RB already)) (VP (VBZ provides) (NP (NML (JJ first) (HYPH -) (NN order)) (NN message) (NN passing)))))))))) (. .))
(S (PP (IN At) (NP (NP (DT the) (NN heart)) (PP (IN of) (NP (PRP$ our) (NN implementation))))) (VP (VBZ is) (NP (DT a) (JJ new) (VBN distributed) (NN synchronization) (NN protocol))) (. .))
