(S (NP (PRP We)) (VP (VBP demonstrate) (SBAR (IN that) (S (NP (DT a) (NN dependency) (NN parser)) (VP (MD can) (VP (VB be) (VP (VBN built) (S (VP (VBG using) (NP (NP (DT a) (NN credit) (NN assignment) (NN compiler)) (SBAR (WHNP (WDT which)) (S (VP (VBZ removes) (NP (NP (DT the) (NN burden)) (PP (IN of) (S (VP (VBG worrying) (PP (IN about) (NP (JJ low-level) (NN machine) (VBG learning) (NNS details))))))) (PP (IN from) (NP (DT the) (NN parser) (NN implementation))))))))))))))) (. .))
(S (NP (DT The) (NN result)) (VP (VBZ is) (NP (NP (DT a) (JJ simple) (NN parser)) (SBAR (WHNP (WDT which)) (S (VP (ADVP (RB robustly)) (VBZ applies) (PP (TO to) (NP (JJ many) (NNS languages)))))) (SBAR (WHNP (WDT that)) (S (VP (VBZ provides) (NP (JJ similar) (ADJP (JJ statistical) (CC and) (JJ computational)) (NN performance)) (PP (IN with) (NP (JJ best-to-date) (JJ transition-based) (NN parsing) (NNS approaches))) (, ,) (SBAR (IN while) (S (VP (VBG avoiding) (NP (NP (JJ various) (NNS downsides)) (PP (VBG including) (NP (NP (NN randomization)) (, ,) (NP (JJ extra) (NN feature) (NNS requirements)) (, ,) (CC and) (NP (NN custom) (NN learning) (NN algorithms))))))))))))) (. .))
