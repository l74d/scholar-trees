(S (NP (DT This) (NN paper)) (VP (VBZ is) (VP (VBN concerned) (PP (IN with) (NP (NP (DT the) (JJ computational) (NN complexity)) (PP (IN of) (NP (NN equivalence) (CC and) (NN minimisation))) (PP (IN for) (NP (NP (NN automata)) (PP (IN with) (NP (NN transition) (NNS weights))) (PP (IN in) (NP (NP (DT the) (NN field) (NNP Q)) (PP (IN of) (NP (JJ rational) (NNS numbers))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP use) (NP (NP (JJ polynomial) (NN identity) (NN testing)) (CC and) (NP (DT the) (NNP Isolation) (NNP Lemma))) (S (VP (TO to) (VP (VB obtain) (NP (NN complexity) (NNS bounds))))) (, ,) (S (VP (VBG focussing) (PP (IN on) (NP (NP (DT the) (NN class) (NNP NC)) (PP (IN of) (NP (NP (NNS problems)) (PP (IN within) (NP (NNP P))) (ADJP (JJ solvable) (PP (IN in) (NP (JJ polylogarithmic) (JJ parallel) (NN time))))))))))) (. .))
(S (PP (IN For) (NP (JJ finite) (JJ Q-weighted) (NNS automata))) (, ,) (NP (PRP we)) (VP (VBP give) (NP (NP (DT a) (JJ randomised) (NNP NC) (NN procedure)) (SBAR (WHNP (IN that)) (S (VP (DT either) (VP (NNS outputs) (SBAR (WDT that) (S (NP (CD two) (NNS automata)) (VP (VBP are) (ADJP (JJ equivalent)))))) (CC or) (VP (VBZ returns) (NP (NP (DT a) (NN word)) (SBAR (WHPP (IN on) (WHNP (WDT which))) (S (NP (PRP they)) (VP (VBP differ))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP give) (NP (NP (NP (DT an) (NNP NC) (NN procedure)) (PP (IN for) (S (VP (VBG deciding) (SBAR (IN whether) (S (NP (DT a) (VBN given) (NN automaton)) (VP (VBZ is) (ADJP (JJ minimal))))))))) (, ,) (CONJP (RB as) (RB well) (IN as)) (NP (NP (DT a) (JJ randomised) (NNP NC) (NN procedure)) (SBAR (WHNP (WDT that)) (S (VP (VBZ minimises) (NP (DT an) (NN automaton)))))))) (. .))
(S (NP (PRP We)) (VP (VBP consider) (NP (NP (JJ probabilistic) (NN automata)) (PP (IN with) (NP (NNS rewards))) (, ,) (ADJP (JJ similar) (PP (TO to) (NP (NNP Markov) (NNP Decision) (NNP Processes)))))) (. .))
(S (PP (IN For) (NP (DT these) (NN automata))) (NP (PRP we)) (VP (VBP consider) (NP (NP (NP (CD two) (NNS notions)) (PP (IN of) (NP (NN equivalence)))) (: :) (NP (NP (NN expectation) (NN equivalence)) (CC and) (NP (NN distribution) (NN equivalence))))) (. .))
(S (NP (DT The) (JJ former)) (VP (VBZ requires) (SBAR (IN that) (S (NP (CD two) (NNS automata)) (VP (VBP have) (NP (NP (DT the) (JJ same) (VBN expected) (NN reward)) (PP (IN on) (NP (DT each) (NN input) (NN word))))))) (, ,) (SBAR (IN while) (S (NP (DT the) (JJ latter)) (VP (VBZ requires) (SBAR (IN that) (S (NP (DT each) (NN input) (NN word)) (VP (VB induce) (NP (NP (DT the) (JJ same) (NN distribution)) (PP (IN on) (NP (NNS rewards))) (PP (IN in) (NP (DT each) (NN automaton))))))))))) (. .))
(S (PP (IN For) (NP (DT both) (NNS notions))) (NP (PRP we)) (VP (VBP give) (NP (NP (NNS algorithms)) (PP (IN for) (S (VP (VBG deciding) (NP (NN equivalence)) (PP (IN by) (NP (NP (NN reduction)) (PP (TO to) (NP (NP (NN equivalence)) (PP (IN of) (NP (JJ Q-weighted) (NNS automata)))))))))))) (. .))
(S (ADVP (RB Finally)) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (DT the) (NN equivalence) (NN problem)) (PP (IN for) (NP (NNP Q-weighted) (ADJP (RB visibly) (JJ pushdown)) (NN automata)))) (VP (VBZ is) (ADJP (JJ logspace) (NN equivalent) (PP (TO to) (NP (DT the) (JJ polynomial) (NN identity) (VBG testing) (NN problem)))))))) (. .))
