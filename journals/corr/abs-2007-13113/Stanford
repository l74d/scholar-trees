(S (NP (JJS Most) (NN memory) (NNS sanitizers)) (VP (VBP work) (PP (IN by) (S (VP (VBG instrumenting) (NP (DT the) (NN program)) (PP (IN at) (S (VP (VB compile) (NP (NN time))))))))) (. .))
(S (NP (EX There)) (VP (VBP are) (ADVP (RB only)) (NP (NP (DT a) (NN handful)) (PP (IN of) (NP (NP (NN memory) (NNS sanitizers)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB sanitize) (NP (DT a) (JJ binary) (NN program)) (PP (IN without) (NP (NN source) (NN code))))))))))) (. .))
(S (NP (NP (JJS Most)) (SBAR (S (VP (VP (VBP are) (ADJP (NP (NN location)) (HYPH -) (VBN based))) (, ,) (CC and) (VP (VBP are) (ADVP (RB therefore)) (ADJP (JJ unable) (S (VP (TO to) (VP (VB detect)))))))))) (VP (VBZ overflows) (PP (IN of) (NP (JJ global) (NNS variables) (CC or) (NNS variables))) (PP (IN on) (NP (DT the) (NN stack)))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP introduce) (NP (NP (DT an) (ADJP (NP (NN identity)) (HYPH -) (VBN based)) (NN memory) (NN sanitizer)) (PP (IN for) (NP (NP (JJ binary) (NN AArch64) (NNS programs)) (SBAR (WHNP (WDT which)) (S (VP (VBZ does) (RB not) (VP (VB need) (NP (NN access)) (PP (IN to) (NP (DT the) (NN source) (NN code))))))))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (ADJP (JJ able) (S (VP (TO to) (VP (VB detect) (SBAR (S (VP (VBZ overflows) (PP (IN of) (NP (NP (NN stack) (HYPH -) (CC and) (JJ global) (NNS variables)) (SBAR (IN if) (S (NP (DT the) (NN user)) (VP (VP (VBZ provides) (NP (NP (DT some) (NML (NNS annotations) (CC or) (NN DWARF)) (VBG debugging) (NN information)) (SBAR (S (VP (VBZ is) (ADJP (JJ available))))))) (, ,) (CONJP (RB as) (RB well) (IN as)) (VP (ADVP (RB dynamically)) (VBN allocated) (NP (NN memory)))))))))))))))) (. .))
