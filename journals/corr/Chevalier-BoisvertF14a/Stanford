(SINV (ADVP (RB Dynamically)) (VP (VBN typed) (NP (NP (NN programming) (NNS languages)) (PP (JJ such) (IN as) (NP (NNP JavaScript) (CC and) (NNP Python))))) (VP (VBP defer)) (NP (NP (NN type)) (VP (VBG checking) (S (VP (TO to) (VP (VB run) (NP (NN time))))))) (. .))
(S (PP (IN In) (NP (NN order) (S (VP (TO to) (VP (VB maximize) (NP (NN performance))))))) (, ,) (NP (NML (JJ dynamic) (NN language)) (NNP VM) (NNS implementations)) (VP (MD must) (VP (VB attempt) (S (VP (TO to) (VP (VB eliminate) (NP (JJ redundant) (NML (JJ dynamic) (NN type)) (NNS checks))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NML (NN type) (NN inference)) (NNS analyses)) (VP (VP (VBP are) (ADJP (RB often) (JJ costly))) (CC and) (VP (VBP involve) (NP (NP (NNS tradeoffs)) (PP (IN between) (NP (NP (NN compilation) (NN time)) (CC and) (NP (VBG resulting) (NN precision))))))) (. .))
(S (NP (DT This)) (VP (VBZ has) (NP (NN lead)) (PP (IN to) (NP (NP (DT the) (NN creation)) (PP (IN of) (NP (ADJP (RB increasingly) (JJ complex)) (JJ multi-tiered) (NNP VM) (NNS architectures)))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ introduces) (NP (NP (JJ lazy) (JJ basic) (NN block) (NN versioning)) (, ,) (NP (NP (DT a) (JJ simple) (NML (NN JIT) (NN compilation)) (NN technique)) (SBAR (WHNP (WDT which)) (S (ADVP (RB effectively)) (VP (VBZ removes) (NP (JJ redundant) (NN type) (NNS checks)) (PP (IN from) (NP (JJ critical) (NN code) (NNS paths))))))))) (. .))
(S (NP (DT This) (JJ novel) (NN approach)) (ADVP (RB lazily)) (VP (VBZ generates) (NP (NP (ADJP (NN type) (HYPH -) (VBN specialized)) (NNS versions)) (PP (IN of) (NP (NP (JJ basic) (NNS blocks)) (PP (IN on) (HYPH -) (NP (DT the) (HYPH -) (NN fly)))))) (PP (IN while) (S (VP (VBG propagating) (NP (ADJP (NP (NN context)) (HYPH -) (JJ dependent)) (NN type) (NN information)))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ does) (RB not) (VP (VB require) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (JJ costly) (NN program) (NNS analyses)))))) (, ,) (VP (VBZ is) (RB not) (VP (VBN restricted) (PP (IN by) (NP (NP (DT the) (NN precision) (NNS limitations)) (PP (IN of) (NP (JJ traditional) (NN type) (NNS analyses))))))) (CC and) (VP (VBZ avoids) (NP (NP (DT the) (NN implementation) (NN complexity)) (PP (IN of) (NP (JJ speculative) (NN optimization) (NNS techniques)))))) (. .))
(S (NP (PRP We)) (VP (VBP have) (VP (VBN implemented) (NP (NP (JJ intraprocedural) (JJ lazy) (JJ basic) (NN block)) (VP (VBG versioning) (PP (IN in) (NP (DT a) (NML (NNP JavaScript) (NNP JIT)) (NN compiler))))))) (. .))
(S (NP (DT This) (NN approach)) (VP (VBZ is) (PP (VBN compared) (PP (IN with) (NP (DT a) (ADJP (NP (JJ classical) (NN flow)) (HYPH -) (VBN based)) (NN type) (NN analysis))))) (. .))
(S (NP (NP (NNP Lazy)) (NP (JJ basic) (NN block) (NN versioning))) (VP (VBZ performs) (ADVP (RB as) (RB well) (CC or) (RB better)) (PP (IN on) (NP (DT all) (NNS benchmarks)))) (. .))
(S (PP (IN On) (ADJP (JJ average))) (, ,) (NP (NP (CD 71) (NN %)) (PP (IN of) (NP (NN type) (NNS tests)))) (VP (VBP are) (VP (VBN eliminated) (, ,) (S (VP (VBG yielding) (NP (NP (NNS speedups)) (PP (IN of) (NP (QP (RB up) (IN to) (CD 50)) (NN %)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NN implementation)) (VP (VBZ generates) (NP (ADJP (RBR more) (JJ efficient)) (NN machine) (NN code)) (PP (IN than) (NP (NP (NNP TraceMonkey)) (, ,) (NP (NP (DT a) (VBG tracing) (NN JIT) (NN compiler)) (PP (IN for) (NP (NNP JavaScript))) (, ,) (PP (IN on) (NP (JJ several) (NNS benchmarks)))))))))) (. .))
(S (NP (NP (DT The) (NN combination)) (PP (IN of) (NP (NP (NN implementation) (NN simplicity)) (, ,) (NP (JJ low) (JJ algorithmic) (NN complexity)) (CC and) (NP (JJ good) (NN run) (NN time) (NN performance))))) (VP (VBZ makes) (NP (JJ basic) (NN block)) (S (VP (VBG versioning) (NP (ADJP (JJ attractive) (PP (IN for) (NP (NN baseline) (NN JIT)))) (NNS compilers))))) (. .))
