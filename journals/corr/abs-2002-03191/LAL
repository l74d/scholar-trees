(S (NP (NP (DT The) (NN class)) (PP (IN of) (NP (NP (JJ omega) (NNS languages)) (VP (VBN recognized) (PP (IN by) (NP (NP (NP (JJ deterministic) (NN parity) (NNS acceptors)) (PRN (-LRB- -LRB-) (NP (NNP DPAs)) (-RRB- -RRB-))) (CC or) (NP (NP (JJ deterministic) (NNP Muller) (NNS acceptors)) (PRN (-LRB- -LRB-) (NP (NNP DMAs)) (-RRB- -RRB-))))))))) (VP (VBZ is) (ADVP (RB exactly)) (NP (DT the) (JJ regular) (NN omega) (NNS languages))) (. .))
(S (NP (DT The) (NN inclusion) (NN problem)) (VP (VBZ is) (NP (NP (DT the) (JJ following)) (: :) (S (PP (VBN given) (NP (NP (CD two) (NNS acceptors)) (NP (NNP A1) (CC and) (NNP A2)))) (, ,) (VP (VP (NN determine) (SBAR (IN whether) (S (NP (NP (DT the) (NN language)) (VP (VBN recognized) (PP (IN by) (NP (NNP A1))))) (VP (VBZ is) (NP (NP (DT a) (NN subset)) (PP (IN of) (NP (NP (DT the) (NN language)) (VP (VBN recognized) (PP (IN by) (NP (NNP A2))))))))))) (, ,) (CC and) (VP (SBAR (IN if) (RB not)) (, ,) (VB return) (NP (NP (DT an) (ADJP (RB ultimately) (JJ periodic)) (JJ omega) (NN word)) (VP (VBN accepted) (PP (IN by) (NP (NP (NNP A1)) (CC but) (RB not) (NP (NNP A2))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP describe) (NP (NP (JJ polynomial) (NN time) (NN algorithms)) (SBAR (S (VP (TO to) (VP (VB solve) (NP (DT this) (NN problem)) (PP (PP (IN for) (NP (CD two) (NNP DPAs))) (CC and) (PP (IN for) (NP (CD two) (NNP DMAs)))))))))) (. .))
(S (NP (NNS Corollaries)) (VP (VBP include) (NP (NP (NP (JJ polynomial) (NN time) (NN algorithms)) (SBAR (S (VP (TO to) (VP (VB solve) (NP (NP (DT the) (NN equivalence) (NN problem)) (PP (IN for) (NP (NNP DPAs) (CC and) (NNP DMAs))))))))) (, ,) (CC and) (ADVP (RB also)) (NP (NP (DT the) (NN inclusion) (CC and) (NN equivalence) (NNS problems)) (PP (IN for) (NP (JJ deterministic) (NNP Buechi) (CC and) (JJ coBuechi) (NNS acceptors)))))) (. .))
