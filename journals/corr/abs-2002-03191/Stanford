(S (NP (NP (DT The) (NN class)) (PP (IN of) (NP (NP (JJ omega) (NNS languages)) (VP (VBN recognized) (PP (IN by) (NP (NP (NP (JJ deterministic) (NN parity) (NNS acceptors)) (-LRB- -LRB-) (NP (NNS DPAs)) (-RRB- -RRB-)) (CC or) (NP (NP (JJ deterministic) (NNP Muller) (NNS acceptors)) (-LRB- -LRB-) (NP (NNS DMAs)) (-RRB- -RRB-)))))))) (VP (VBZ is) (ADVP (RB exactly)) (NP (DT the) (JJ regular) (JJ omega) (NNS languages))) (. .))
(S (S (NP (DT The) (NN inclusion) (NN problem)) (VP (VBZ is) (NP (DT the) (VBG following)))) (: :) (S (S (NP (VBN given) (NML (CD two) (NNS acceptors)) (NML (NN A1) (CC and) (NN A2))) (, ,) (VP (VB determine) (SBAR (IN whether) (S (NP (NP (DT the) (NN language)) (VP (VBN recognized) (PP (IN by) (NP (NN A1))))) (VP (VBZ is) (NP (NP (DT a) (NN subset)) (PP (IN of) (NP (NP (DT the) (NN language)) (VP (VBN recognized) (PP (IN by) (NP (NN A2)))))))))))) (, ,) (CC and) (S (SBAR (IN if) (FRAG (RB not))) (, ,) (VP (VB return) (NP (NP (DT an) (NML (ADVP (RB ultimately))) (JJ periodic) (JJ omega) (NN word)) (VP (VBN accepted) (PP (IN by) (NP (NML (NN A1) (CONJP (CC but) (RB not)) (NN A2))))))))) (. .))
(S (NP (PRP We)) (VP (VBP describe) (NP (JJ polynomial) (NN time) (NNS algorithms)) (S (VP (TO to) (VP (VB solve) (NP (DT this) (NN problem)) (PP (PP (IN for) (NP (CD two) (NNS DPAs))) (CC and) (PP (IN for) (NP (CD two) (NNS DMAs)))))))) (. .))
(S (NP (NNS Corollaries)) (VP (VBP include) (NP (JJ polynomial) (NN time) (NNS algorithms)) (S (VP (TO to) (VP (VB solve) (NP (NP (NP (DT the) (NN equivalence) (NN problem)) (PP (IN for) (NP (NNS DPAs) (CC and) (NNS DMAs)))) (, ,) (CONJP (CC and) (RB also)) (NP (NP (DT the) (NML (NN inclusion) (CC and) (NN equivalence)) (NNS problems)) (PP (IN for) (NP (JJ deterministic) (NML (NNP Buechi) (CC and) (NNP coBuechi)) (NNS acceptors))))))))) (. .))
