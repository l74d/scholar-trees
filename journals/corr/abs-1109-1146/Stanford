(S (NP (PRP We)) (VP (VBP develop) (NP (NP (DT a) (JJ novel) (VBN distributed) (NN algorithm)) (PP (IN for) (NP (DT the) (JJ minimum) (NN cut) (NN problem))))) (. .))
(S (NP (PRP We)) (ADVP (RB primarily)) (VP (VBP aim) (PP (IN at) (S (VP (VBG solving) (NP (JJ large) (JJ sparse) (NNS problems)))))) (. .))
(S (S (VP (VBG Assuming) (SBAR (S (NP (NP (NNS vertices)) (PP (IN of) (NP (DT the) (NN graph)))) (VP (VBP are) (VP (VBN partitioned) (PP (IN into) (NP (JJ several) (NNS regions))))))))) (, ,) (NP (DT the) (NN algorithm)) (VP (VBZ performs) (NP (NP (NN path) (NNS augmentations)) (PP (IN inside) (NP (NP (DT the) (NNS regions) (CC and) (NNS updates)) (PP (IN of) (NP (DT the) (NN push) (HYPH -) (NN relabel) (NN style))))) (PP (IN between) (NP (DT the) (NNS regions))))) (. .))
(S (S (NP (NP (DT The) (NN interaction)) (PP (IN between) (NP (NNS regions)))) (VP (VBZ is) (VP (VBN considered) (S (ADJP (JJ expensive)))))) (-LRB- -LRB-) (S (NP (NNS regions)) (VP (VBP are) (VP (VP (VBN loaded) (PP (IN into) (NP (DT the) (NML (NML (NN memory) (CD one)) (HYPH -) (PP (IN by) (HYPH -) (NP (CD one))))))) (CC or) (VP (VBN located) (PP (IN on) (NP (NP (JJ separate) (NNS machines)) (PP (IN in) (NP (DT a) (NN network))))))))) (-RRB- -RRB-) (. .))
(S (NP (DT The) (NN algorithm)) (VP (VBZ works) (PP (IN in) (S (NP (NNS sweeps)) (HYPH -) (VP (VBZ passes) (PRT (RP over)) (NP (DT all) (NNS regions)))))) (. .))
(S (VP (VB Let) (NP ($ $) (CD B$)) (VP (VB be) (NP (NP (DT the) (NN set)) (PP (IN of) (NP (NNS vertices) (NN incident)))) (PP (IN to) (NP (NP (NN inter-region) (NNS edges)) (PP (IN of) (NP (DT the) (NN graph))))))) (. .))
(FRAG (S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (ADJP (JJ sequential) (CC and) (JJ parallel)) (NNS versions)) (PP (IN of) (NP (NP (DT the) (NN algorithm)) (SBAR (WHNP (WDT which)) (S (VP (VBP terminate) (PP (IN in) (ADVP (IN at) (RBS most))) (NP (NP ($ $) (CD 2)) (HYPH |) (NP (NN B)) (HYPH |) (NP (SYM ^) (CD 2))))))))))) (FRAG (NP (CD +1)) (NP ($ $)) (NP (NNS sweeps))) (. .))
(S (NP (NP (DT The) (VBG competing) (NN algorithm)) (PP (IN by) (NP (NNP Delong) (CC and) (NNP Boykov)))) (VP (VBZ uses) (NP (NN push) (HYPH -) (NN relabel) (NNS updates)) (PP (IN inside) (NP (NNS regions)))) (. .))
(S (PP (IN In) (NP (NP (DT the) (NN case)) (PP (IN of) (NP (DT a) (VBN fixed) (NN partition))))) (NP (PRP we)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT this) (NN algorithm)) (VP (VBZ has) (NP (NP (DT a) (JJ tight) (NN $) (NN O) (PRN (-LRB- -LRB-) (NP (NN n) (SYM ^) (CD 2)) (-RRB- -RRB-))) (FRAG (NP ($ $)) (VP (VBN bound) (PP (IN on) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NNS sweeps))))))))))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (NP ($ $)) (NP (NN n)) (NP ($ $))) (VP (VBZ is) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NNS vertices)))))))) (. .))
(S (NP (PRP We)) (VP (VBD tested) (NP (NP (JJ sequential) (NNS versions)) (PP (IN of) (NP (DT the) (NNS algorithms)))) (PP (IN on) (NP (NP (NNS instances)) (PP (IN of) (NP (NN maxflow) (NNS problems))))) (PP (IN in) (NP (NN computer) (NN vision)))) (. .))
(S (ADVP (RB Experimentally)) (, ,) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NP (NNS sweeps)) (VP (VBN required) (PP (IN by) (NP (DT the) (JJ new) (NN algorithm))))))) (VP (VBZ is) (ADJP (ADJP (RB much) (JJR lower)) (PP (IN than) (PP (IN for) (NP (NP (DT the) (NNP Delong)) (CC and) (NP (NP (NNP Boykov) (POS 's)) (NN variant))))))) (. .))
