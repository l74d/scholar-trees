(S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (NP (CD two) (ADJP (RB conceptually) (JJ simple)) (NNS methods)) (PP (IN for) (S (VP (VBG parallelizing) (NP (DT a) (NNP Parallel) (NNP Tempering) (NNP Monte) (NNP Carlo) (NN simulation)) (PP (IN in) (NP (NP (DT a) (JJ distributed) (NN volunteer) (VBG computing) (NN context)) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (NP (NNS computers)) (VP (VBG belonging) (PP (TO to) (NP (DT the) (JJ general) (NN public))))) (VP (VBP are) (VP (VBN used)))))))))))) (. .))
(S (NP (DT The) (JJ first) (NN method)) (VP (VBZ uses) (NP (JJ conventional) (NN multi-threading))) (. .))
(S (NP (DT The) (JJ second) (NN method)) (VP (VBZ uses) (NP (NP (NNP CUDA)) (, ,) (NP (DT a) (NNS graphics) (NN card) (VBG computing) (NN system)))) (. .))
(S (S (NP (NNP Parallel) (NNP Tempering)) (VP (VBZ is) (VP (VBN described)))) (, ,) (CC and) (S (NP (NP (NNS challenges)) (PP (JJ such) (IN as) (NP (NP (JJ parallel) (JJ random) (NN number) (NN generation)) (CC and) (NP (NP (NN mapping)) (PP (IN of) (NP (NNP Monte) (NNP Carlo) (NNS chains))) (PP (TO to) (NP (JJ different) (NNS threads))))))) (VP (VBP are) (VP (VBN explained)))) (. .))
(S (SBAR (IN While) (S (NP (NP (JJ conventional) (NN multi-threading)) (PP (IN on) (NP (NNP CPUs)))) (VP (VBZ is) (ADJP (JJ well-established))))) (, ,) (NP (NNP GPGPU) (VBG programming) (NNS techniques) (CC and) (NNS technologies)) (VP (VP (VBP are) (ADVP (RB still)) (VP (VBG developing))) (CC and) (VP (JJ present) (NP (NP (JJ several) (NNS challenges)) (, ,) (PP (JJ such) (IN as) (NP (NP (DT the) (JJ effective) (NN use)) (PP (IN of) (NP (NP (DT a) (ADJP (RB relatively) (JJ large)) (NN number)) (PP (IN of) (NP (NNS threads)))))))))) (. .))
(S (S (VP (VBG Having) (NP (NN multiple) (NNS chains)) (PP (IN in) (NP (NNP Parallel) (NNP Tempering))))) (VP (VBZ allows) (NP (NN parallelization)) (PP (IN in) (NP (NP (DT a) (NN manner)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (JJ similar) (PP (TO to) (NP (DT the) (JJ serial) (NN algorithm)))))))))) (. .))
(S (S (NP (NNP Volunteer) (VBG computing)) (VP (NNS introduces) (NP (JJ important) (NNS constraints)) (PP (TO to) (NP (JJ high) (NN performance) (NN computing))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (DT both) (NNS versions)) (PP (IN of) (NP (DT the) (NN application)))) (VP (VBP are) (ADJP (JJ able) (S (VP (TO to) (VP (VB adapt) (NP (PRP themselves)) (PP (TO to) (NP (NP (DT the) (ADJP (NN varying) (CC and) (JJ unpredictable)) (VBG computing) (NNS resources)) (PP (IN of) (NP (NP (NNS volunteers) (POS â€º)) (NNS computers))))) (, ,) (SBAR (IN while) (S (VP (VBG leaving) (S (NP (DT the) (NNS machines)) (ADJP (VBP responsive) (RB enough) (SBAR (S (VP (TO to) (VP (VB use))))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (JJ present) (NP (NP (NNS experiments)) (SBAR (S (VP (TO to) (VP (VB show) (NP (NP (DT the) (JJ scalable) (NN performance)) (PP (IN of) (NP (DT these) (CD two) (NNS approaches)))))))))) (, ,) (CC and) (VP (VBP indicate) (SBAR (IN that) (S (NP (NP (DT the) (NN efficiency)) (PP (IN of) (NP (DT the) (NNS methods)))) (VP (VBZ increases) (PP (IN with) (NP (JJR bigger) (NN problem) (NNS sizes)))))))) (. .))
