(S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (CD two) (ADJP (RB conceptually) (JJ simple)) (NNS methods)) (PP (IN for) (S (VP (VBG parallelizing) (NP (DT a) (JJ Parallel) (VBG Tempering) (NML (NNP Monte) (NNP Carlo)) (NN simulation))))) (PP (IN in) (NP (DT a) (VBN distributed) (NN volunteer) (NN computing) (NN context))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (NP (NNS computers)) (VP (VBG belonging) (PP (IN to) (NP (DT the) (JJ general) (NN public))))) (VP (VBP are) (VP (VBN used)))))) (. .))
(S (NP (DT The) (JJ first) (NN method)) (VP (VBZ uses) (NP (JJ conventional) (NN multi-threading))) (. .))
(S (NP (DT The) (JJ second) (NN method)) (VP (VBZ uses) (NP (NP (NNP CUDA)) (, ,) (NP (DT a) (NML (NNS graphics) (NN card)) (NN computing) (NN system)))) (. .))
(S (S (NP (JJ Parallel) (NN Tempering)) (VP (VBZ is) (VP (VBN described)))) (, ,) (CC and) (S (NP (NP (NNS challenges)) (PP (JJ such) (IN as) (NP (NP (JJ parallel) (NML (NML (JJ random) (NN number) (NN generation)) (CC and) (NML (NML (NN mapping)) (PP (IN of) (NP (NNP Monte) (NNP Carlo))))) (NNS chains)) (PP (IN to) (NP (JJ different) (NNS threads)))))) (VP (VBP are) (VP (VBN explained)))) (. .))
(S (SBAR (IN While) (S (NP (NP (JJ conventional) (NN multi-threading)) (PP (IN on) (NP (NNS CPUs)))) (VP (VBZ is) (ADJP (RB well) (HYPH -) (VBN established))))) (, ,) (NP (NNP GPGPU) (NN programming) (NNS techniques) (CC and) (NNS technologies)) (VP (VBP are) (ADVP (RB still)) (NP (NP (ADJP (VBG developing) (CC and) (JJ present)) (JJ several) (NNS challenges)) (, ,) (PP (JJ such) (IN as) (NP (NP (DT the) (JJ effective) (NN use)) (PP (IN of) (NP (NP (DT a) (ADJP (RB relatively) (JJ large)) (NN number)) (PP (IN of) (NP (NNS threads))))))))) (. .))
(S (S (VP (VBG Having) (NP (JJ multiple) (NNS chains)) (PP (IN in) (NP (JJ Parallel) (NN Tempering))))) (VP (VBZ allows) (NP (NN parallelization)) (PP (IN in) (NP (NP (DT a) (NN manner)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (JJ similar) (PP (IN to) (NP (DT the) (JJ serial) (NN algorithm)))))))))) (. .))
(S (S (NP (NNP Volunteer) (NN computing)) (VP (VBZ introduces) (NP (JJ important) (NNS constraints)) (PP (IN to) (NP (NML (JJ high) (NN performance)) (NN computing))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (DT both) (NNS versions)) (PP (IN of) (NP (DT the) (NN application)))) (VP (VBP are) (ADJP (JJ able) (S (VP (TO to) (VP (VB adapt) (NP (PRP themselves)) (PP (IN to) (NP (NP (DT the) (VBG varying)) (CC and) (NP (NP (JJ unpredictable) (NN computing) (NNS resources)) (PP (IN of) (NP (NP (NNS volunteers) (POS ')) (NNS computers)))))) (, ,) (PP (IN while) (S (VP (VBG leaving) (NP (NP (DT the) (NNS machines)) (ADJP (JJ responsive) (JJ enough))) (S (VP (TO to) (VP (VB use)))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP present) (NP (NNS experiments)) (S (VP (TO to) (VP (VB show) (NP (NP (DT the) (ADJP (JJ scalable)) (NN performance)) (PP (IN of) (NP (DT these) (CD two) (NNS approaches)))))))) (, ,) (CC and) (VP (VBP indicate) (SBAR (IN that) (S (NP (NP (DT the) (NN efficiency)) (PP (IN of) (NP (DT the) (NNS methods)))) (VP (VBZ increases) (PP (IN with) (NP (JJR bigger) (NN problem) (NNS sizes)))))))) (. .))
