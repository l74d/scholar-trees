(S (NP (DT The) (NNP Why3) (NX (NNP IDE)) (CC and) (NX (NN verification) (NN system))) (VP (VBZ facilitates) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NP (DT a) (JJ wide) (NN range)) (PP (IN of) (NP (NNP Satisfiability) (NNP Modulo) (NNP Theories) (PRN (-LRB- -LRB-) (NP (NNP SMT)) (-RRB- -RRB-)) (NNS solvers)))))) (PP (IN through) (NP (DT a) (JJ driver-based) (NN architecture)))) (. .))
(S (NP (PRP We)) (VP (JJ present) (NP (NP (NNP Where4)) (: :) (NP (NP (DT a) (JJ portfolio-based) (NN approach)) (SBAR (S (VP (TO to) (VP (VB discharge) (NP (NNP Why3) (NN proof) (NNS obligations))))))))) (. .))
(S (NP (PRP We)) (VP (VBP use) (NP (NP (JJ data) (NN analysis)) (CC and) (NP (NN machine) (VBG learning) (NNS techniques))) (PP (IN on) (NP (NP (JJ static) (NNS metrics)) (VP (VBN derived) (PP (IN from) (NP (NN program) (NN source) (NN code))))))) (. .))
(S (NP (PRP$ Our) (NN approach)) (VP (NNS benefits) (NP (NN software) (NNS engineers)) (PP (IN by) (S (VP (VBG providing) (NP (NP (DT a) (JJ single) (NN utility)) (SBAR (S (VP (TO to) (VP (VB delegate) (NP (NN proof) (NNS obligations)) (PP (TO to) (NP (NP (DT the) (NNS solvers)) (ADJP (RBS most) (JJ likely) (S (VP (TO to) (VP (VB return) (NP (DT a) (JJ useful) (NN result))))))))))))))))) (. .))
(S (NP (PRP It)) (VP (VBZ does) (NP (DT this)) (PP (IN in) (NP (DT a) (JJ time-efficient) (NN way))) (S (VP (VBG using) (NP (VBG existing) (NNP Why3) (CC and) (VB solver) (NNS installations)))) (: -) (PP (IN without) (S (VP (VBG requiring) (NP (NP (JJ low-level) (NN knowledge)) (PP (IN about) (NP (NNP SMT) (NN solver) (NN operation)))) (PP (IN from) (NP (DT the) (NN user))))))) (. .))
