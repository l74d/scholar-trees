(S (NP (NP (NP (NNS Algorithms)) (PP (IN for) (S (ADVP (RB efficiently)) (VP (VBG finding) (NP (JJ optimal) (JJ alphabetic) (NN decision) (NNS trees)))))) (: --) (PP (JJ such) (IN as) (NP (DT the) (NML (NNP Hu) (HYPH -) (NNP Tucker)) (NN algorithm))) (: --)) (VP (VBP are) (ADJP (ADJP (RB well) (VBN established)) (CC and) (ADJP (RB commonly) (VBN used)))) (. .))
(S (ADVP (RB However)) (, ,) (NP (JJ such) (NNS algorithms)) (ADVP (RB generally)) (VP (VBP assume) (SBAR (IN that) (S (NP (NP (DT the) (NN cost)) (PP (IN per) (NP (NN decision)))) (VP (VBZ is) (ADJP (ADJP (JJ uniform)) (CC and) (ADJP (ADVP (RB thus)) (JJ independent) (PP (IN of) (NP (NP (DT the) (NN outcome)) (PP (IN of) (NP (DT the) (NN decision))))))))))) (. .))
(S (NP (NP (DT The) (JJ few) (NNS algorithms)) (PP (IN without) (NP (DT this) (NN assumption)))) (ADVP (RB instead)) (VP (VB use) (NP (CD one) (NN cost)) (SBAR (IN if) (S (NP (DT the) (NN decision) (NN outcome)) (VP (VP (VBZ is) (`` ``) (ADJP (ADJP (JJR less)) (PP (IN than))) ('' '')) (CC and) (VP (NP (DT another) (NN cost)) (ADVP (RB otherwise))))))) (. .))
(S (PP (IN In) (NP (NN practice))) (, ,) (NP (CC neither) (NP (NN assumption))) (VP (VBZ is) (ADJP (JJ accurate) (PP (IN for) (NP (NP (NN software)) (VP (VBN optimized) (PP (IN for) (NP (NP (NN today) (POS 's)) (NNS microprocessors)))))))) (. .))
(S (NP (JJ Such) (NN software)) (ADVP (RB generally)) (VP (VBZ has) (NP (NP (CD one) (NN cost)) (PP (IN for) (NP (NP (DT the) (ADJP (RBR more) (JJ likely)) (NN decision) (NN outcome)) (CC and) (NP (NP (DT a) (JJR greater) (NN cost)) (: --) (RRC (ADVP (RB often)) (ADJP (RB far) (JJR greater))) (: --)))) (PP (IN for) (NP (DT the) (ADJP (RBR less) (JJ likely)) (NN decision) (NN outcome))))) (. .))
(S (NP (NP (DT This) (NN problem)) (CC and) (NP (NNS generalizations))) (ADVP (RB thereof)) (VP (VBP are) (ADVP (RB thus)) (ADJP (JJ applicable)) (PP (IN to) (NP (NP (NP (NML (JJ hard) (NN coding)) (NN static) (NN decision) (NN tree) (NNS instances)) (PP (IN in) (NP (NN software)))) (, ,) (ADVP (FW e.g.)))) (, ,) (PP (PP (IN for) (S (VP (VBG optimizing) (NP (NN program) (NNS bottlenecks))))) (CC or) (PP (IN for) (S (VP (VBG compiling) (NP (NN switch) (NNS statements))))))) (. .))
(S (S (NP (DT An) (NML (NN O) (PRN (-LRB- -LRB-) (NP (NN n) (SYM ^) (CD 3)) (-RRB- -RRB-))) (HYPH -) (NN time) (NML (NN O) (PRN (-LRB- -LRB-) (NP (NN n) (SYM ^) (CD 2)) (-RRB- -RRB-)) (HYPH -) (NN space)) (JJ dynamic) (NN programming) (NN algorithm)) (VP (MD can) (VP (VB solve) (NP (DT this) (JJ optimal) (JJ binary) (NN decision) (NN tree) (NN problem))))) (, ,) (CC and) (S (NP (DT this) (NN approach)) (VP (VBZ has) (NP (NP (JJ many) (NNS generalizations)) (SBAR (WHNP (WDT that)) (S (VP (VBP optimize) (PP (IN for) (NP (NP (DT the) (NN behavior)) (PP (IN of) (NP (NNS processors))))) (PP (IN with) (NP (NP (JJ predictive) (NN branch) (NNS capabilities)) (, ,) (NP (DT both) (NN static)) (CC and) (NP (NN dynamic)))))))))) (. .))
(S (NP (NP (NNS Solutions)) (PP (IN to) (NP (DT this) (NN formulation)))) (VP (VBP are) (ADVP (RB often)) (ADVP (RBR faster)) (PP (IN in) (NP (NN practice))) (PP (IN than) (NP (NP (`` ``) (JJ optimal) ('' '') (NN decision) (NNS trees)) (SBAR (IN as) (S (VP (VBN formulated) (PP (IN in) (NP (DT the) (NN literature))))))))) (. .))
(S (NP (JJ Different) (NN search) (NNS paradigms)) (VP (MD can) (ADVP (RB sometimes)) (VP (VB yield) (NP (ADJP (RB even) (JJR better)) (NN performance)))) (. .))
