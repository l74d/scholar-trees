(S (NP (JJ Static) (NN code) (NN analysis)) (VP (VBZ is) (NP (DT a) (JJ powerful) (NN approach) (S (VP (TO to) (VP (VB detect) (NP (NP (NN quality) (NNS deficiencies)) (PP (JJ such) (IN as) (NP (NP (NN performance) (NNS bottlenecks)) (, ,) (NP (NN safety) (NNS violations)) (CC or) (NP (NN security) (NNS vulnerabilities))))) (ADVP (RB already)) (PP (IN during) (NP (NP (DT a) (NN software) (NN system) (POS 's)) (NN implementation)))))))) (. .))
(S (RB Yet) (, ,) (SBAR (IN as) (S (NP (JJ current) (NN software) (NNS systems)) (VP (VBP continue) (S (VP (TO to) (VP (VB grow))))))) (, ,) (NP (JJ current) (NML (NN static) (HYPH -) (NN analysis)) (NNS systems)) (ADVP (RBR more) (RB frequently)) (VP (VBP face) (NP (NP (DT the) (NN problem)) (PP (IN of) (NP (JJ insufficient) (NN scalability))))) (. .))
(S (NP (PRP We)) (VP (VBP argue) (SBAR (IN that) (S (NP (DT this)) (VP (VBZ is) (PP (PP (ADVP (RB mainly)) (IN due) (IN to) (NP (NP (DT the) (NN fact)) (SBAR (IN that) (S (NP (JJ current) (NN static) (NNS analyses)) (VP (VBP are) (VP (VBN implemented) (ADVP (RB fully)) (ADVP (RB manually)))))))) (, ,) (PP (ADVP (RB often)) (IN in) (NP (NP (NML (JJ general) (HYPH -) (NN purpose)) (NN programming) (NNS languages)) (PP (JJ such) (IN as) (NP (NNP Java) (CC or) (NNP C))))) (, ,) (CC or) (PP (IN in) (NP (NP (JJ declarative) (NNS languages)) (PP (JJ such) (IN as) (NP (NNP Datalog)))))))))) (. .))
(S (NP (DT This) (NN design) (NN choice)) (VP (VBZ predefines) (NP (NP (DT the) (NN way)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (DT the) (NN static) (NN analysis)) (VP (VP (VBZ evaluates)) (, ,) (CC and) (VP (VBZ limits) (NP (NP (DT the) (NNS optimizations) (CC and) (NNS extensions)) (SBAR (S (NP (NP (NN static) (HYPH -) (NN analysis)) (NP (NNS designers))) (VP (MD can) (VP (VB apply)))))))))))) (. .))
(S (S (VP (TO To) (VP (VB boost) (NP (NN scalability)) (PP (IN to) (NP (DT a) (JJ new) (NN level)))))) (, ,) (NP (PRP we)) (VP (VBP propose) (PP (IN to) (NP (NN fuse) (NN static) (HYPH -) (NN analysis))) (PP (IN with) (NP (NML (RB just) (HYPH -) (RB in)) (HYPH -) (NN time) (HYPH -) (NN optimization) (NN technology))) (, ,) (S (VP (VBG introducing) (PP (IN for) (NP (DT the) (JJ first) (NN time))) (NP (NP (NN static) (NNS analyses)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (ADJP (VBN managed)) (CC and) (ADJP (RB inherently) (NN self) (HYPH -) (JJ adaptive)))))))))) (. .))
(S (NP (DT Those) (NNS analyses)) (ADVP (RB automatically)) (VP (VBP adapt) (S (NP (PRP themselves)) (VP (TO to) (VP (VB yield) (NP (NP (DT a) (NML (NN performance) (HYPH /) (NN precision)) (NN tradeoff)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (JJ optimal) (PP (IN with) (NP (NN respect)))) (PP (PP (IN to) (NP (DT the) (VBN analyzed) (NN software) (NN system))) (CC and) (PP (IN to) (NP (NP (DT the) (NN analysis)) (ADVP (PRP itself))))))))))))) (. .))
(S (NP (NN Self) (HYPH -) (NN adaptivity)) (VP (VBZ is) (VP (VP (VBN enabled) (PP (PP (IN by) (NP (NP (DT the) (JJ novel) (NN idea)) (PP (IN of) (S (VP (VBG designing) (NP (DT a) (JJ dedicated) (JJ intermediate) (NN representation))))))) (, ,) (RB not) (PP (IN for) (NP (DT the) (VBN analyzed) (NN program))))) (CC but) (VP (PP (IN for) (NP (DT the) (NN analysis))) (NP (PRP itself))))) (. .))
(S (NP (DT This) (NN representation)) (VP (VBZ allows) (UCP (PP (IN for) (NP (NP (DT an) (JJ automatic) (NN optimization) (CC and) (NN adaptation)) (PP (IN of) (NP (DT the) (NN analysis) (NN code))))) (, ,) (CC both) (ADVP (RB ahead) (HYPH -) (PP (IN of) (NP (NP (HYPH -) (NN time) (PRN (-LRB- -LRB-) (PP (IN through) (NP (NP (NN static) (NN analysis)) (PP (IN of) (NP (DT the) (NN static) (NN analysis))))) (-RRB- -RRB-))) (CONJP (RB as) (RB well) (IN as)) (NP (NML (RB just) (HYPH -) (RB in)) (HYPH -) (NN time))))) (PP (IN during) (NP (NP (DT the) (NN analysis) ('' ') (NN execution)) (, ,) (NP (ADJP (JJ similar) (PP (IN to) (NP (NML (RB just) (HYPH -) (RB in)) (HYPH -) (NN time)))) (NNS compilers)))))) (. .))
