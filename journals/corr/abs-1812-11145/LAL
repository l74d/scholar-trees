(S (SBAR (WHADVP (WRB When)) (S (VP (VBG programming) (NP (NN network) (NNS functions))))) (, ,) (NP (NP (NNS changes)) (PP (IN within) (NP (DT a) (NN packet)))) (VP (NN tend) (S (VP (TO to) (VP (VB have) (NP (NP (NNS consequences)) (: â€”) (NP (NP (NNP -side) (NNS effects)) (SBAR (WHNP (WDT which)) (S (VP (MD must) (VP (VB be) (VP (VBN accounted) (IN for) (PP (IN by) (NP (NN network) (NNS programmers) (CC or) (NNS administrators))) (PP (IN via) (NP (NP (JJ arbitrary) (NN logic)) (CC and) (NP (NP (DT an) (JJ innate) (NN understanding)) (PP (IN of) (NP (NNS dependencies))))))))))))))))) (. .))
(S (NP (NP (NNS Examples)) (PP (IN of) (NP (DT this)))) (VP (NN include) (S (VP (VP (VBG updating) (NP (NNS checksums)) (SBAR (WHADVP (WRB when)) (S (NP (NP (DT a) (NN packet) (POS 's)) (NNS contents)) (VP (VBZ has) (VP (VBN been) (VP (VBN modified))))))) (CC or) (VP (VBG adjusting) (NP (NP (DT a) (NN payload) (NN length) (NN field)) (PP (IN of) (NP (DT a) (NNP IPv6) (NN header)))) (SBAR (IN if) (S (NP (DT another) (NN header)) (VP (VBZ is) (VP (VBN added) (CC or) (VBN updated) (PP (IN within) (NP (DT a) (NN packet))))))))))) (. .))
(S (SBAR (IN While) (S (NP (JJ static-typing)) (VP (NNS captures) (NP (NP (VBP interface) (NNS specifications)) (CC and) (SBAR (WHADVP (WRB how)) (S (NP (JJ packet) (NNS contents)) (VP (MD should) (VP (VB behave))))))))) (, ,) (NP (PRP it)) (VP (VBZ does) (RB not) (VP (VB enforce) (NP (NP (JJ precise) (NNS invariants)) (PP (IN around) (NP (JJ runtime) (NNS dependencies))) (PP (IN like) (NP (NP (DT the) (NNS examples)) (ADVP (IN above))))))) (. .))
(S (ADVP (RB Instead)) (, ,) (PP (IN during) (NP (NP (DT the) (NN design) (NN phase)) (PP (IN of) (NP (NN network) (NNS functions))))) (, ,) (NP (NNS programmers)) (VP (MD should) (VP (VB be) (VP (VBN given) (NP (NP (DT an) (JJR easier) (NN way)) (SBAR (S (VP (TO to) (VP (VB specify) (NP (NNS checks)) (ADVP (RP up) (RB front))))))) (, ,) (PP (DT all) (IN without) (S (VP (VBG having) (S (VP (TO to) (VP (VP (VB account) (PP (IN for))) (CC and) (VP (VB keep) (NP (NN track)) (PP (IN of))) (NP (DT these) (NNS consequences)) (PP (IN at) (NP (NP (ADJP (DT each) (CC and) (DT every)) (NN step)) (PP (IN during) (NP (DT the) (NN development) (NN cycle)))))))))))))) (. .))
(S (PP (IN In) (NP (NP (VBG keeping)) (PP (IN with) (NP (DT this) (NN view))))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT a) (JJ unique) (NN approach)) (PP (IN for) (S (VP (VBG adding) (CC and) (VBG generating) (NP (NP (DT both) (NP (JJ static) (NNS checks)) (CC and) (NP (JJ dynamic) (NNS contracts))) (PP (IN for) (S (VP (VBG specifying) (CC and) (VBG checking) (NP (NN packet) (NN processing) (NNS operations))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP develop) (NP (PRP$ our) (NN technique)) (PP (IN within) (NP (NP (DT an) (VBG existing) (NN framework)) (VP (VBN called) (S (NP (NNP NetBricks))))))) (CC and) (VP (VB demonstrate) (SBAR (WHADVP (WRB how)) (S (NP (PRP$ our) (NN approach)) (VP (NNS simplifies) (CC and) (NNS checks) (NP (NP (JJ common) (JJ dependent) (NN packet) (CC and) (NN header) (NN processing) (NN logic)) (SBAR (WHNP (IN that)) (S (NP (JJ other) (NNS systems)) (VP (VBP take) (PP (IN for) (S (VP (VBN granted)))))))) (, ,) (PP (DT all) (IN without) (S (VP (VBG adding) (NP (JJ much) (NN overhead)) (PP (IN during) (NP (NN development))))))))))) (. .))
