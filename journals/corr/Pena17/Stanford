(S (NP (DT This) (NN paper)) (VP (VBZ is) (NP (NP (DT a) (NN tutorial)) (VP (VBG introducing) (NP (NP (DT the) (VBG underlying) (NN technology)) (CC and) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NP (DT the) (NML (NN tool) (NN Liquid)) (NNP Haskell)) (, ,) (NP (NP (DT a) (NML (NML (NN type) (HYPH -) (NN checker)) (PP (IN for) (NP (DT the) (JJ functional) (NN language)))) (NNP Haskell)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB help) (NP (NNS programmers)) (S (VP (TO to) (VP (VB verify) (NP (NP (JJ non-trivial) (NNS properties)) (PP (IN of) (NP (PRP$ their) (NNS programs)))) (PP (IN with) (NP (DT a) (JJ low) (NN effort)))))))))))))))))) (. .))
(S (NP (DT The) (JJ first) (NNS sections)) (VP (VBP introduce) (NP (NP (DT the) (NN technology)) (PP (IN of) (NP (NN Liquid) (NNS Types)))) (PP (IN by) (S (VP (VP (VBG explaining) (NP (PRP$ its) (NNS principles))) (CC and) (VP (VBG summarizing) (SBAR (WHADVP (WRB how)) (S (NP (PRP$ its) (NML (NN type) (NN inference)) (NN algorithm)) (VP (VBZ manages) (S (VP (TO to) (VP (VB prove) (NP (NNS properties))))))))))))) (. .))
(S (NP (DT The) (JJ remaining) (NNS sections)) (VP (VP (VBP present) (NP (NP (DT a) (NN selection)) (PP (IN of) (NP (NNP Haskell) (NNS examples))))) (CC and) (VP (VB show) (NP (NP (DT the) (NN kind)) (PP (IN of) (NP (NP (NNS properties)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB be) (VP (VBN proved) (PP (IN with) (NP (DT the) (NN system))))))))))))) (. .))
