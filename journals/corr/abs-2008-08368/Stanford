(S (NP (PRP We)) (VP (VBP introduce) (FRAG (FRAG (NP (NP (DT a) (NN relaxation)) (PP (IN of) (NP (NP (DT the) (NN problem)) (, ,) (ADVP (RB namely))))) (, ,) (NP (NP (QP ($ $) (CD k)) (NML (NML ($ $)) (HYPH -) (NML (NNP Disjonit))) (NNP Shortest) (NNPS Paths)) (PP (IN with) (NP (NN Congestion))))) (, -) (FRAG (NP ($ $)) (NP (SYM c)) (NP ($ $)))) (SBAR (WHADVP (WRB where)) (S (NP (DT every) (NN vertex)) (VP (VBZ is) (VP (VBN allowed) (PP (IN to) (NP (NP (NN route)) (ADVP (IN up) (PP (IN to) (NP (NP ($ $)) (SYM c) (NP ($ $))))) (NP (NNS paths))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN work))) (NP (PRP we)) (VP (VBP provide) (NP (DT a) (JJ simple) (NN algorithm)) (S (VP (TO to) (VP (VB solve) (NP (NP (QP (DT the) ($ $) (CD k)) (NML (NML ($ $)) (HYPH -) (NML (NNP Disjonit))) (NNP Shortest) (NNPS Paths)) (PP (IN with) (NP (NP (NN Congestion)) (, -) (NP (NP ($ $)) (SYM c) (NP ($ $))))) (X (NP (NP (NN problem)) (PP (IN in) (NP (NN time)))) (NP (NP ($ $)) (SBAR (S (NP (LST (LS f)) (NP (-LRB- -LRB-) (NN k) (-RRB- -RRB-)))))) (NP (NP (NP (NN n) (SYM ^)) (-LRB- {) (NP (NN O) (PRN (-LRB- -LRB-) (NP (CD k) (SYM -) (NN c)) (-RRB- -RRB-))) (-RRB- })) (NP (NP ($ $)) (PP (IN on) (NP (NNS DAGs))))))))))) (. .))
(FRAG (S (PP (IN Along) (NP (DT this) (NN way))) (, ,) (NP (PRP we)) (ADVP (RB significantly)) (VP (VBP simplify) (NP (NP (DT the) (NN argument)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (VP (VBN used) (PP (IN in) (NP (NP (DT the) (JJ previous) (NN work)) (PP (IN for) (NP ($ $) (CD k)))))))))))) (FRAG (FRAG (NP (NML (NML ($ $)) (HYPH -) (NN Disjoint)) (NNPS Paths)) (PP (IN with) (NP (NN Congestion)))) (, -) (FRAG (NP (NP ($ $)) (SYM c) (NP ($ $))) (PP (IN by) (NP (NNP Amiri))) (ADVP (FW et) (FW al.)))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP discuss) (NP (NP (NP (DT the) (NN hardness)) (PP (IN of) (NP (NN problem)))) (CC and) (NP (NP (JJ open) (NNS problems)) (PP (IN in) (NP (DT this) (NN area)))))) (. .))
