(S (NP (VBG Pumping) (NN lemmas)) (VP (VBP are) (VP (VBN created) (S (VP (TO to) (VP (VB prove) (SBAR (IN that) (S (NP (VBN given) (NNS languages)) (VP (VBP are) (RB not) (VP (JJ belong) (PP (TO to) (NP (JJ certain) (NN language) (NNS classes)))))))))))) (. .))
(S (NP (EX There)) (VP (VBP are) (NP (NP (JJ several) (VBN known) (VBG pumping) (NN lemmas)) (PP (IN for) (NP (NP (NP (DT the) (JJ whole) (NN class)) (CC and) (NP (DT some) (JJ special) (NNS classes))) (PP (IN of) (NP (DT the) (JJ context-free) (NNS languages))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP prove) (NP (NP (JJ new) (, ,) (JJ interesting) (NN pumping) (NN lemmas)) (PP (IN for) (NP (JJ special) (ADJP (JJ linear) (CC and) (JJ context-free)) (NN language) (NNS classes))))) (. .))
(S (NP (NP (DT Some)) (PP (IN of) (NP (PRP them)))) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB pump) (NP (JJ regular) (NNS languages)) (PP (IN in) (NP (CD two) (NN place))) (ADVP (RB simultaneously)))))))) (. .))
(S (NP (JJ Other) (NN lemma)) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB pump) (NP (JJ context-free) (NNS languages)) (PP (IN in) (NP (JJ arbitrary) (JJ many) (NNS places))))))))) (. .))
