(S (NP (NP (DT An) (ADJP (RB increasingly) (JJ large)) (NN number)) (PP (IN of) (NP (NN HPC) (NNS systems)))) (VP (VBP rely) (PP (IN on) (NP (NP (JJ heterogeneous) (NNS architectures)) (VP (VBG combining) (NP (JJ traditional) (JJ multi-core) (NNS CPUs)) (PP (IN with) (NP (NN power) (JJ efficient) (NNS accelerators))))))) (. .))
(S (NP (NP (NNP Designing) (JJ efficient) (NNS applications)) (PP (IN for) (NP (DT these) (NNS systems)))) (VP (VBZ has) (VP (VBN been) (ADJP (JJ troublesome) (PP (IN in) (NP (DT the) (NN past)))) (SBAR (IN as) (S (NP (NNS accelerators)) (VP (MD could) (ADVP (RB usually)) (VP (VB be) (VP (VBN programmed) (S (VP (VBG using) (NP (JJ specific) (VBG programming) (NNS languages)) (S (VP (VBG threatening) (NP (NN maintainability) (, ,) (NN portability) (CC and) (NN correctness))))))))))))) (. .))
(S (NP (JJ Several) (JJ new) (NN programming) (NNS environments)) (VP (VBP try) (S (VP (TO to) (VP (VB tackle) (NP (DT this) (NN problem)))))) (. .))
(S (PP (IN Among) (NP (PRP them))) (, ,) (NP (NN OpenACC)) (VP (VBZ offers) (NP (NP (DT a) (NML (JJ high) (HYPH -) (NN level)) (NN approach)) (VP (VBN based) (PP (IN on) (NP (NN compiler) (NN directive) (NNS clauses))) (S (VP (TO to) (VP (VB mark) (NP (NP (NNS regions)) (PP (IN of) (NP (VBG existing) (NML (NP (NNP C)) (, ,) (NP (NNP C++)) (CC or) (NP (NNP Fortran))) (NNS codes)))) (S (VP (TO to) (VP (VB run) (PP (IN on) (NP (NNS accelerators)))))))))))) (. .))
(S (S (NP (DT This) (NN approach)) (ADVP (RB directly)) (VP (VBZ addresses) (NP (NN code) (NN portability)) (, ,) (S (VP (VBG leaving) (PP (IN to) (NP (NNS compilers))) (NP (NP (DT the) (NN support)) (PP (IN of) (NP (DT each) (JJ different) (NN accelerator)))))))) (, ,) (CC but) (S (S (NP (PRP one)) (VP (VBZ has) (S (VP (TO to) (ADVP (RB carefully)) (VP (VB assess) (NP (NP (DT the) (JJ relative) (NNS costs)) (PP (IN of) (NP (JJ portable) (NNS approaches))))))))) (CC versus) (S (VP (VBG computing) (NP (NN efficiency))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP address) (NP (RB precisely) (DT this) (NN issue)) (, ,) (S (VP (VBG using) (PP (IN as) (NP (DT a) (NN test) (HYPH -) (NN bench))) (NP (DT a) (ADJP (ADVP (RB massively)) (JJ parallel)) (NML (NNP Lattice) (NNP Boltzmann)) (NN algorithm))))) (. .))
(S (NP (PRP We)) (ADVP (RB first)) (VP (VBP describe) (NP (NP (PRP$ our) (JJ multi-node) (NN implementation) (CC and) (NN optimization)) (PP (IN of) (NP (DT the) (NN algorithm)))) (, ,) (S (VP (VBG using) (NP (NP (NN OpenACC)) (CC and) (NP (NNP MPI)))))) (. .))
(S (NP (PRP We)) (VP (FRAG (ADVP (RB then)) (NP (NP (NP (NN benchmark)) (NP (NP (DT the) (NN code)) (PP (IN on) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (NNS processors)))))) (, ,) (PP (VBG including) (NP (JJ traditional) (NNS CPUs) (CC and) (NNS GPUs))) (, ,) (CC and) (NP (NP (NML (S (VP (VB make) (NP (JJ accurate) (NN performance) (NNS comparisons)) (PP (IN with) (NP (JJ other) (NNP GPU)))))) (NNS implementations)) (PP (IN of) (NP (DT the) (JJ same) (NN algorithm))))) (VP (VBG using) (NP (NNP CUDA) (CC and) (NNP OpenCL)))))) (. .))
(S (NP (PRP We)) (VP (FRAG (ADVP (RB also)) (NP (NP (NP (NNS asses)) (NP (DT the) (NN performance) (NN impact))) (VP (VBN associated) (PP (IN to) (NP (NP (JJ portable) (NN programming)) (, ,) (CC and) (NP (DT the) (JJ actual) (NN portability)) (CC and) (NP (NP (ADJP (NP (NP (NN performance) (HYPH -) (NN portability)) (PP (IN of) (NP (NN OpenACC)))) (HYPH -) (VBN based)) (NNS applications)) (PP (IN across) (NP (JJ several) (NML (NML (NN state)) (HYPH -) (PP (IN of) (HYPH -) (NP (DT the) (HYPH -) (NN art)))) (NNS architectures)))))))))) (. .))
