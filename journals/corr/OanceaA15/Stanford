(S (ADVP (RB Nowadays)) (, ,) (NP (NP (DT the) (NN paradigm)) (PP (IN of) (NP (JJ parallel) (NN computing)))) (VP (VBZ is) (VP (VBG changing))) (. .))
(S (S (NP (NNP CUDA)) (VP (VBZ is) (ADVP (RB now)) (NP (NP (DT a) (JJ popular) (NN programming) (NN model)) (PP (IN for) (NP (NP (JJ general) (NN purpose) (NNS computations)) (PP (IN on) (NP (NNS GPUs)))))))) (CC and) (S (NP (NP (DT a) (JJ great) (NN number)) (PP (IN of) (NP (NNS applications)))) (VP (VBD were) (ADJP (JJ ported) (PP (IN to) (NP (NP (NNP CUDA)) (VP (VBG obtaining) (NP (NP (NNS speedups)) (PP (IN of) (NP (NP (NNS orders)) (PP (IN of) (NP (NP (NN magnitude)) (VP (VBG comparing) (PP (IN to) (NP (VBN optimized) (NN CPU) (NNS implementations))))))))))))))) (. .))
(S (NP (NN Hybrid)) (VP (VBZ approaches) (SBAR (IN that) (S (S (VP (VB combine) (NP (DT the) (NN message)) (S (VP (VBG passing) (NP (NN model)) (PP (IN with) (NP (NP (DT the) (VBN shared) (NN memory) (NN model)) (PP (IN for) (NP (JJ parallel) (NN computing))))))))) (VP (VBP are) (NP (NP (DT a) (NN solution)) (PP (IN for) (NP (ADJP (RB very) (JJ large)) (NNS applications)))))))) (. .))
(S (NP (PRP We)) (VP (VBD considered) (NP (NP (DT a) (JJ heterogeneous) (NN cluster)) (SBAR (WHNP (WDT that)) (S (VP (VBZ combines) (S (NP (NP (DT the) (NN CPU)) (CC and) (NP (NN GPU) (NNS computations))) (VP (VBG using) (NP (NNP MPI) (CC and) (NNP CUDA)) (PP (IN for) (S (VP (VBG developing) (NP (DT a) (NML (JJ high) (NN performance)) (JJ linear) (NN algebra) (NN library)))))))))))) (. .))
(NP (NP (NP (PRP$ Our) (NN library) (NNS deals)) (PP (IN with) (NP (JJ large) (NML (JJ linear) (NNS systems)) (NNS solvers)))) (SBAR (IN because) (S (NP (PRP they)) (VP (VBP are) (NP (NP (DT a) (JJ common) (NN problem)) (PP (IN in) (NP (NP (DT the) (NNS fields)) (PP (IN of) (NP (NN science) (CC and) (NN engineering))))))))) (. .))
(S (NP (NP (JJ Direct) (NNS methods)) (PP (IN for) (S (VP (VBG computing) (NP (NP (DT the) (NN solution)) (PP (IN of) (NP (JJ such) (NNS systems)))))))) (VP (MD can) (VP (VB be) (ADJP (RB very) (JJ expensive) (PP (IN due) (PP (IN to) (NP (NP (NML (JJ high) (NN memory)) (NNS requirements)) (CC and) (NP (JJ computational) (NN cost)))))))) (. .))
(S (NP (DT An) (JJ efficient) (NN alternative)) (VP (VBP are) (NP (NP (JJ iterative) (NNS methods)) (SBAR (WHNP (WDT which)) (S (VP (VBZ computes) (NP (NP (RB only) (DT an) (NN approximation)) (PP (IN of) (NP (DT the) (NN solution))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP present) (NP (NP (DT an) (NN implementation)) (PP (IN of) (NP (NP (DT a) (NN library)) (SBAR (WHNP (WDT that)) (S (VP (VBZ uses) (NP (NP (DT a) (JJ hybrid) (NN model)) (PP (IN of) (NP (NP (NN computation)) (VP (VBG using) (NP (NNP MPI) (CC and) (NNP CUDA)) (S (VP (VBG implementing) (NP (DT both) (ADJP (JJ direct) (CC and) (JJ iterative)) (NML (JJ linear) (NNS systems)) (NNS solvers))))))))))))))) (. .))
(S (NP (PRP$ Our) (NN library)) (VP (VBZ implements) (NP (NP (ADJP (NP (NML (NNP LU) (CC and) (NNP Cholesky)) (NN factorization)) (VBN based)) (NNS solvers)) (CC and) (NP (NP (DT some)) (PP (IN of) (NP (NP (DT the) (JJ non-stationary) (JJ iterative) (NNS methods)) (VP (VBG using) (NP (DT the) (NML (NNP MPI) (HYPH /) (NNP CUDA)) (NN combination)))))))) (. .))
(S (NP (PRP We)) (VP (VBD compared) (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (PRP$ our) (NML (NNP MPI) (HYPH /) (NNP CUDA)) (NN implementation)))) (PP (IN with) (NP (NP (JJ classic) (NNS programs)) (VP (VBN written) (S (VP (TO to) (VP (VB be) (VP (VBN run) (PP (IN on) (NP (DT a) (JJ single) (NN CPU))))))))))) (. .))
