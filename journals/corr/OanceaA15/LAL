(S (ADVP (NNS Nowadays)) (, ,) (NP (NP (DT the) (NN paradigm)) (PP (IN of) (NP (JJ parallel) (NN computing)))) (VP (VBZ is) (VP (VBG changing))) (. .))
(S (S (NP (NNP CUDA)) (VP (VBZ is) (ADVP (RB now)) (NP (NP (DT a) (JJ popular) (NN programming) (NN model)) (PP (IN for) (NP (NP (JJ general) (JJ purpose) (NNS computations)) (PP (IN on) (NP (NNP GPUs)))))))) (CC and) (S (NP (NP (DT a) (JJ great) (NN number)) (PP (IN of) (NP (NNS applications)))) (VP (VBD were) (VP (VBN ported) (PP (TO to) (NP (NNP CUDA))) (S (VP (VBG obtaining) (NP (NP (NNS speedups)) (PP (IN of) (NP (NP (NNS orders)) (PP (IN of) (NP (NN magnitude))))) (VP (VBG comparing) (PP (TO to) (NP (VBN optimized) (NNP CPU) (NNS implementations)))))))))) (. .))
(S (NP (NP (JJ Hybrid) (NNS approaches)) (SBAR (WHNP (WDT that)) (S (VP (VBP combine) (NP (DT the) (NN message) (VBG passing) (NN model)) (PP (IN with) (NP (NP (DT the) (JJ shared) (NN memory) (NN model)) (PP (IN for) (NP (JJ parallel) (NN computing))))))))) (VP (VBP are) (NP (NP (DT a) (NN solution)) (PP (IN for) (NP (ADJP (RB very) (JJ large)) (NNS applications))))) (. .))
(S (NP (PRP We)) (VP (VBD considered) (NP (NP (DT a) (JJ heterogeneous) (NN cluster)) (SBAR (WHNP (WDT that)) (S (VP (VBZ combines) (NP (DT the) (NNP CPU) (CC and) (NNP GPU) (NNS computations)) (S (VP (VBG using) (NP (NNP MPI) (CC and) (NNP CUDA)) (PP (IN for) (S (VP (VBG developing) (NP (DT a) (JJ high) (NN performance) (JJ linear) (JJ algebra) (NN library)))))))))))) (. .))
(S (NP (PRP$ Our) (JJ library)) (VP (NNS deals) (PP (IN with) (NP (JJ large) (JJ linear) (NNS systems) (NNS solvers))) (SBAR (IN because) (S (NP (PRP they)) (VP (VBP are) (NP (DT a) (JJ common) (NN problem)) (PP (IN in) (NP (NP (DT the) (NNS fields)) (PP (IN of) (NP (NN science) (CC and) (NN engineering))))))))) (. .))
(S (NP (NP (JJ Direct) (NNS methods)) (PP (IN for) (S (VP (VBG computing) (NP (NP (DT the) (NN solution)) (PP (IN of) (NP (JJ such) (NNS systems)))))))) (VP (MD can) (VP (VB be) (ADJP (RB very) (JJ expensive)) (PP (JJ due) (PP (TO to) (NP (JJ high) (NX (NX (NN memory) (NNS requirements)) (CC and) (NX (JJ computational) (NN cost)))))))) (. .))
(S (NP (DT An) (JJ efficient) (NN alternative)) (VP (VBP are) (NP (NP (JJ iterative) (NNS methods)) (SBAR (WHNP (WDT which)) (S (VP (VBZ computes) (NP (NP (RB only) (DT an) (NN approximation)) (PP (IN of) (NP (DT the) (NN solution))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBD present) (NP (NP (DT an) (NN implementation)) (PP (IN of) (NP (NP (DT a) (NN library)) (SBAR (WHNP (WDT that)) (S (VP (VBZ uses) (NP (NP (DT a) (JJ hybrid) (NN model)) (PP (IN of) (NP (NN computation)))) (S (VP (VBG using) (NP (NP (NNP MPI) (CC and) (NNP CUDA)) (VP (VBG implementing) (NP (DT both) (JJ direct) (CC and) (JJ iterative) (JJ linear) (NNS systems) (NNS solvers))))))))))))) (. .))
(S (NP (PRP$ Our) (JJ library)) (VP (NNS implements) (NP (NP (NNP LU) (CC and) (NNP Cholesky) (ADJP (NN factorization) (VBN based)) (NNS solvers)) (CC and) (NP (NP (DT some)) (PP (IN of) (NP (NP (DT the) (JJ non-stationary) (JJ iterative) (NNS methods)) (VP (VBG using) (NP (DT the) (NNP MPI/CUDA) (NN combination)))))))) (. .))
(S (NP (PRP We)) (VP (VBN compared) (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (PRP$ our) (NNP MPI/CUDA) (NN implementation)))) (PP (IN with) (NP (NP (JJ classic) (NNS programs)) (VP (VBN written) (S (VP (TO to) (VP (VB be) (VP (VBN run) (PP (IN on) (NP (DT a) (JJ single) (NNP CPU))))))))))) (. .))
