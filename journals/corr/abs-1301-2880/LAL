(S (NP (PRP We)) (VP (VBP give) (NP (NP (NP (DT an) (NNP FPRAS)) (PP (IN for) (NP (NP (NNP Holant) (NNS problems)) (PP (IN with) (NP (NP (NN parity) (NNS constraints)) (CC and) (NP (JJ not-all-equal) (NNS constraints))))))) (, ,) (NP (NP (DT a) (NN generalisation)) (PP (IN of) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG counting) (NP (NNS sink-free-orientations)))))))))) (. .))
(S (NP (DT The) (NN approach)) (VP (VBZ combines) (NP (NP (DT a) (NN sampler)) (PP (IN for) (NP (NP (NNS near-assignments)) (PP (IN of) (NP (`` ``) (JJ windable) ('' '') (NNS functions))))) (PRN (: —) (S (VP (VBG using) (NP (NP (DT the) (JJ cycle-unwinding) (JJ canonical) (NNS paths) (NN technique)) (PP (IN of) (NP (NNP Jerrum) (CC and) (NNP Sinclair)))))) (: —))) (PP (IN with) (NP (NP (DT a) (NN bound)) (PP (IN on) (NP (NP (DT the) (NN weight)) (PP (IN of) (NP (NNS near-assignments)))))))) (. .))
(S (S (NP (DT The) (NN proof)) (VP (VBZ generalises) (PP (TO to) (NP (NP (DT a) (JJR larger) (NN class)) (PP (IN of) (NP (NNP Holant) (NNS problems))))))) (: ;) (S (NP (PRP we)) (VP (VP (VBP characterise) (NP (DT this) (NN class))) (CC and) (VP (NN show) (SBAR (IN that) (S (NP (PRP it)) (VP (MD can) (RB not) (VP (VB be) (VP (VBN extended) (PP (IN by) (NP (NN expressibility) (NNS reductions))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB then)) (VP (VP (VB ask) (SBAR (IN whether) (S (NP (NN windability)) (VP (VBZ is) (ADJP (JJ equivalent) (PP (TO to) (NP (NP (NN expressibility)) (PP (IN by) (NP (NP (NNS matchings) (NNS circuits)) (PRN (-LRB- -LRB-) (NP (NP (DT an) (NN analogue)) (PP (IN of) (NP (NNS matchgates)))) (-RRB- -RRB-))))))))))) (, ,) (CC and) (VP (VB give) (NP (DT a) (JJ positive) (NN answer)) (PP (IN for) (NP (NP (NNS functions)) (PP (IN of) (NP (NN arity) (CD three))))))) (. .))
