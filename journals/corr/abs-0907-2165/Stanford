(S (NP (NP (DT A) (NN tournament) (NN T)) (SYM =) (NP (-LRB- -LRB-) (NP (NN V)) (, ,) (NP (NN A)) (-RRB- -RRB-))) (VP (VBZ is) (NP (NP (DT a) (ADJP (JJ directed)) (NN graph)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (EX there)) (VP (VBZ is) (ADVP (RB exactly)) (NP (NP (CD one) (NN arc)) (PP (IN between) (NP (NP (DT every) (NN pair)) (PP (IN of) (NP (JJ distinct) (NNS vertices))))))))))) (. .))
(S (PP (VBN Given) (NP (NP (DT a) (NN digraph)) (PP (IN on) (NP (NP (NN n) (NNS vertices)) (CC and) (NP (DT an) (NN integer) (NN parameter) (NN k)))))) (, ,) (NP (DT the) (NML (NNP Feedback) (NNP Arc)) (NNP Set) (NN problem)) (VP (VBZ asks) (SBAR (IN whether) (S (NP (DT the) (VBN given) (NN digraph)) (VP (VBZ has) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (CD k) (NNS arcs)) (SBAR (WHNP (WP$ whose) (NML (NN removal))) (S (VP (VBZ results) (PP (IN in) (NP (DT an) (JJ acyclic) (NN digraph))))))))))))) (. .))
(S (NP (NP (DT The) (NML (NNP Feedback) (NNP Arc)) (NNP Set) (NN problem)) (VP (VBN restricted) (PP (IN to) (NP (NNS tournaments))))) (VP (VBZ is) (VP (VBN known) (PP (IN as) (NP (DT the) (NML (NN k) (HYPH -) (NN Feedback)) (NML (NML (NNP Arc) (NNP Set)) (PP (IN in) (NP (NNS Tournaments))) (PRN (-LRB- -LRB-) (ADJP (NP (CD k) (SYM -)) (JJ FAST)) (-RRB- -RRB-))) (NN problem))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP obtain) (S (NP (NP (DT a) (JJ linear) (NN vertex) (NN kernel)) (PP (IN for) (NP (QP (CD k) (SYM -))))) (ADJP (JJ FAST)))) (. .))
(S (NP (DT That)) (VP (VBZ is) (, ,) (SBAR (S (NP (PRP we)) (VP (VBP give) (NP (DT a) (JJ polynomial) (NN time)) (NP (NP (NN algorithm)) (SBAR (WHNP (WDT which)) (S (VP (VBN given) (NP (NP (DT an) (NN input) (NN instance) (NN T)) (PP (IN to) (NP (QP (CD k) (SYM -))))) (NP (ADJP (JJ FAST) (SBAR (S (VP (VBZ obtains) (NP (DT an) (JJ equivalent) (NN instance)))))) (NN T)))))) ('' ') (PP (IN on) (NP (NML (NN O) (-LRB- -LRB-) (NN k) (-RRB- -RRB-)) (NNS vertices))))))) (. .))
(S (PP (IN In) (NP (NN fact))) (, ,) (PP (VBN given) (NP (NP (DT any) (VBN fixed) (NN e)) (PP (SYM >) (NP (CD 0))))) (, ,) (NP (DT the) (VBN kernelized) (NN instance)) (VP (VBZ has) (PP (IN at) (NP (NP (RBS most)) (-LRB- -LRB-) (NP (NP (CD 2)) (SYM +) (NP (LST (LS e) (-RRB- -RRB-)) (NP (NN k) (NNS vertices))))))) (. .))
(S (NP (PRP$ Our) (NN result)) (VP (VBZ improves) (S (NP (NP (DT the) (JJ previous) (VBN known) (ADJP (VBN bound) (PP (IN of) (NP (NP (NN O) (PRN (-LRB- -LRB-) (NP (CD k) (SYM ^) (CD 2)) (-RRB- -RRB-))) (PP (IN on) (NP (DT the) (NN kernel)))))) (NN size)) (PP (IN for) (NP (QP (CD k) (SYM -))))) (ADJP (JJ FAST)))) (. .))
(S (NP (PRP$ Our) (NN kernelization) (NN algorithm)) (VP (VP (VBZ solves) (NP (DT the) (NN problem)) (PP (IN on) (NP (NP (DT a) (NN subclass)) (PP (IN of) (NP (NP (NNS tournaments)) (PP (IN in) (NP (JJ polynomial) (NN time)))))))) (CC and) (VP (VBZ uses) (S (NP (NP (DT a) (ADJP (VBN known) (JJ polynomial)) (NN time) (NN approximation) (NN scheme)) (PP (IN for) (NP (QP (CD k) (SYM -))))) (ADJP (JJ FAST))))) (. .))
