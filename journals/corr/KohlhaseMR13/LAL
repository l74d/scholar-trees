(S (S (VP (ADVP (RB Broadly)) (NN speaking))) (, ,) (NP (EX there)) (VP (VP (VBP are) (NP (NP (CD two) (NNS kinds)) (PP (IN of) (NP (NP (JJ semantics-aware) (JJ assistant) (NNS systems)) (PP (IN for) (NP (NNS mathematics))))))) (: :) (S (S (NP (NN proof) (NNS assistants)) (VP (VP (VBP express) (NP (DT the) (JJ semantic)) (PP (IN in) (NP (JJ logic)))) (CC and) (VP (JJ emphasize) (NP (NN deduction))))) (, ,) (CC and) (S (NP (NN computer) (VBP algebra) (NNS systems)) (VP (VP (VB express) (NP (DT the) (NNS semantics)) (PP (IN in) (NP (VBG programming) (NNS languages)))) (CC and) (VP (VB emphasize) (NP (NN computation))))))) (. .))
(S (S (VP (VBG Combining) (NP (NP (DT the) (JJ complementary) (NNS strengths)) (PP (IN of) (NP (DT both) (NNS approaches)))) (SBAR (IN while) (S (VP (VBG mending) (NP (PRP$ their) (JJ complementary) (NNS weaknesses))))))) (VP (VBZ has) (VP (VBN been) (NP (NP (DT an) (JJ important) (NN goal)) (PP (IN of) (NP (DT the) (JJ mechanized) (NNS mathematics) (NN community)))) (PP (IN for) (NP (DT some) (NN time))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP pick) (PRT (RP up)) (PP (IN on) (NP (NP (DT the) (NN idea)) (PP (IN of) (NP (NN biform) (NNS theories)))))) (CC and) (VP (VB interpret) (NP (PRP it)) (PP (IN in) (NP (NP (DT the) (NNP MMTt/OMDoc) (NN framework)) (SBAR (WHNP (WDT which)) (S (VP (VP (VBD introduced) (NP (DT the) (NNS foundations-as-theories) (NN approach))) (, ,) (CC and) (VP (MD can) (ADVP (RB thus)) (VP (VB represent) (NP (DT both) (NP (NNS logics)) (CC and) (NP (VBG programming) (NNS languages))) (PP (IN as) (NP (NNS theories)))))))))))) (. .))
(S (NP (DT This)) (VP (VBZ yields) (NP (NP (DT a) (JJ formal) (, ,) (JJ modular) (NN framework)) (PP (IN of) (NP (NN biform) (NN theory) (NN graphs))) (SBAR (WHNP (WDT which)) (S (VP (VBP mixes) (NP (NP (NNS specifications) (CC and) (NNS implementations)) (VP (VP (VBG sharing) (NP (DT the) (NN module) (NN system))) (CC and) (VP (VBG typing) (NP (NN information)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (VBN automated) (NN knowledge) (NN management) (NN work) (VBZ flows)) (SBAR (WHNP (IN that)) (S (VP (VP (NN interface) (PP (TO to) (NP (VBG existing) (NN specification/programming) (NNS tools)))) (CC and) (VP (VB enable) (NP (NP (DT an) (NNP OpenMath) (NNP Machine)) (, ,) (SBAR (WHNP (WDT that)) (S (VP (VBZ operationalizes) (NP (NN biform) (NNS theories)) (, ,) (S (VP (VBG evaluating) (NP (NNS expressions)) (PP (IN by) (S (VP (ADVP (RB exhaustively)) (VBG applying) (NP (NP (DT the) (NNS implementations)) (PP (IN of) (NP (DT the) (JJ respective) (NNS operators))))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP evaluate) (NP (DT the) (JJ new) (NN biform) (NN framework)) (PP (IN by) (S (VP (VBG adding) (NP (NNS implementations)) (PP (TO to) (NP (DT the) (NNP OpenMath) (NN standard) (NN content) (NNS dictionaries))))))) (. .))
