(S (PP (IN In) (NP (JJ recent) (NNS years))) (, ,) (NP (NP (NNS languages)) (PP (IN like) (NP (NNP Haskell)))) (VP (VBP have) (VP (VBN seen) (NP (NP (DT a) (JJ dramatic) (NN surge)) (PP (IN of) (NP (NP (JJ new) (NNS features)) (SBAR (WHNP (WDT that)) (S (ADVP (RB significantly)) (VP (VBZ extends) (NP (NP (DT the) (ADJP (JJ expressive)) (NN power)) (PP (IN of) (NP (PRP$ their) (NN type) (NNS systems)))))))))))) (. .))
(S (PP (IN With) (NP (DT these) (NNS features))) (, ,) (NP (NP (DT the) (NN challenge)) (PP (IN of) (NP (NP (JJ kind) (NN inference)) (PP (IN for) (NP (NN datatype) (NNS declarations)))))) (VP (VP (VBZ has) (VP (VBN presented) (NP (PRP itself)))) (CC and) (VP (VB become) (NP (DT a) (JJ worthy) (NN research) (NN problem)) (PP (IN on) (NP (PRP$ its) (JJ own))))) (. .))
(NP (NP (DT This) (NN paper) (NNS studies)) (ADVP (RB kind) (ADVP (RB inference)) (PP (IN for) (NP (NNS datatypes)))) (. .))
(S (S (VP (VBN Inspired) (PP (IN by) (NP (NP (JJ previous) (NN research)) (PP (IN on) (NP (NN type) (HYPH -) (NN inference))))))) (, ,) (NP (PRP we)) (VP (VBP offer) (NP (NP (JJ declarative) (NNS specifications)) (PP (IN for) (SBAR (WHNP (WP what)) (S (NP (NN datatype) (NNS declarations)) (VP (MD should) (VP (VB be) (VP (VBN accepted))))))) (, ,) (PP (DT both) (PP (IN for) (NP (NN Haskell98))) (CC and) (PP (IN for) (NP (NP (DT a) (ADJP (RBR more) (JJ advanced)) (NN system)) (SBAR (S (NP (PRP we)) (VP (VBP call) (NP (NNP PolyKinds))))))) (, ,) (PP (VBN based) (PP (IN on) (NP (NP (DT the) (NNS extensions)) (PP (IN in) (NP (JJ modern) (NNP Haskell))) (, ,) (PP (VBG including) (NP (NP (DT a) (JJ limited) (NN form)) (PP (IN of) (NP (JJ dependent) (NNS types))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP believe) (NP (DT these) (NNS formulations)) (S (VP (TO to) (VP (VB be) (UCP (ADJP (JJ novel)) (CC and) (PP (IN without) (NP (NN precedent))) (, ,) (PP (ADVP (RB even)) (IN for) (NP (NN Haskell98)))))))) (. .))
(S (NP (DT These) (NNS specifications)) (VP (VBP are) (VP (VBN complemented) (PP (IN with) (NP (JJ implementable) (JJ algorithmic) (NNS versions))))) (. .))
(S (NP (PRP We)) (VP (VBP study) (NP (NP (NN soundness)) (, ,) (NP (NN completeness)) (CC and) (NP (NP (DT the) (NN existence)) (PP (IN of) (NP (NP (JJ principal) (NNS kinds)) (PP (IN in) (NP (DT these) (NNS systems))))))) (, ,) (S (VP (VBG proving) (NP (NP (DT the) (NNS properties)) (SBAR (WHADVP (WRB where)) (S (NP (PRP they)) (VP (VBP hold)))))))) (. .))
(S (NP (DT This) (NN work)) (VP (MD can) (VP (VB serve) (PP (IN as) (NP (DT a) (NN guide))) (PP (DT both) (PP (IN to) (NP (NP (NN language) (NNS designers)) (SBAR (WHNP (WP who)) (S (VP (VBP wish) (S (VP (TO to) (VP (VB formalize) (NP (PRP$ their) (NN datatype) (NNS declarations)))))))))) (CC and) (RB also) (PP (IN to) (NP (NP (NNS implementors)) (ADJP (JJ keen) (S (VP (TO to) (VP (VB have) (NP (NP (JJ principled) (NN inference)) (PP (IN of) (NP (JJ principal) (NNS types))))))))))))) (. .))
(S (NP (NP (DT This) (JJ technical) (NN supplement)) (PP (IN to) (NP (NP (JJ Kind) (NN Inference)) (PP (IN for) (NP (NNP Datatypes)))))) (VP (VBZ serves) (S (VP (TO to) (VP (VB expand) (PP (IN upon) (NP (NP (DT the) (NN text)) (PP (IN in) (NP (DT the) (JJ main) (NN paper))))))))) (. .))
(S (NP (PRP It)) (VP (VBZ contains) (NP (NP (JJ detailed) (NN typing) (NNS rules)) (, ,) (NP (NNS proofs)) (, ,) (CC and) (NP (NP (NNS connections)) (PP (IN to) (NP (DT the) (NNP Glasgow) (NNP Haskell) (NNP Compiler))))) (PRN (-LRB- -LRB-) (NP (NNP GHC)) (-RRB- -RRB-))) (. .))
