(S (NP (NP (NNP Constraint) (NNP Logic) (NNP Programming)) (PRN (-LRB- -LRB-) (NP (NNP CLP)) (-RRB- -RRB-))) (VP (VBZ is) (NP (NP (DT a) (NN language) (NN scheme)) (PP (IN for) (S (VP (VBG combining) (NP (NP (CD two) (JJ declarative) (NN paradigms)) (: :) (NP (NP (NN constraint) (NN solving)) (CC and) (NP (JJ logic) (NN programming))))))))) (. .))
(S (NP (NP (JJ Concurrent) (NNP Constraint) (NNP Programming)) (PRN (-LRB- -LRB-) (NP (NNP CCP)) (-RRB- -RRB-))) (VP (VBZ is) (NP (NP (DT a) (JJ declarative) (NN model)) (PP (IN for) (NP (NN concurrency))) (SBAR (WHADVP (WRB where)) (S (NP (NNS agents)) (VP (JJ interact) (PP (IN by) (S (VP (VBG telling) (CC and) (VBG asking) (NP (NP (NNS constraints)) (PP (IN in) (NP (DT a) (VBN shared) (NN store)))))))))))) (. .))
(S (PP (IN In) (NP (DT a) (JJ previous) (NN paper))) (, ,) (NP (PRP we)) (VP (VBD developed) (NP (NP (DT a) (NN framework)) (PP (IN for) (NP (NP (JJ dynamic) (NN slicing)) (PP (IN of) (NP (NNP CCP))))) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN user)) (ADVP (JJ first)) (VP (VBZ identifies) (SBAR (IN that) (S (NP (DT a) (PRN (-LRB- -LRB-) (JJ partial) (-RRB- -RRB-)) (NN computation)) (VP (VBZ is) (ADJP (JJ wrong)))))))))) (. .))
(S (ADVP (RB Then)) (, ,) (NP (PRP she)) (VP (VBZ marks) (PRN (-LRB- -LRB-) (NNS selects) (-RRB- -RRB-)) (NP (NP (DT some) (NNS parts)) (PP (IN of) (NP (DT the) (JJ final) (NN state))) (VP (NN corresponding) (PP (TO to) (NP (NP (DT the) (NX (NX (NNS data) (PRN (-LRB- -LRB-) (NNS constraints) (-RRB- -RRB-))) (CC and) (NX (VBZ processes)))) (SBAR (WHNP (IN that)) (S (NP (PRP she)) (VP (VBZ wants) (S (VP (TO to) (VP (VB study) (ADVP (JJR more) (NN deeply))))))))))))) (. .))
(S (S (NP (NP (DT An) (JJ automatic) (NN process)) (PP (IN of) (NP (VBG slicing)))) (VP (NNS begins))) (, ,) (CC and) (S (NP (DT the) (JJ partial) (NN computation)) (VP (VBZ is) (VP (`` ``) (VBN depurated) ('' '') (PP (IN by) (S (VP (VBG removing) (NP (JJ irrelevant) (NN information)))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP give) (NP (CD two) (JJ major) (NNS contributions))) (. .))
(S (ADVP (RB First)) (, ,) (NP (PRP we)) (VP (VBP extend) (NP (DT the) (NN framework)) (PP (TO to) (NP (NNP CLP))) (, ,) (S (ADVP (RB thus)) (VP (VBG generalizing) (NP (DT the) (JJ previous) (NN work))))) (. .))
(S (ADVP (JJ Second)) (, ,) (NP (PRP we)) (VP (VBP provide) (NP (NP (DT an) (NN assertion) (NN language)) (ADJP (JJ suitable) (PP (IN for) (NP (DT both) (, ,) (NNP CCP) (CC and) (NNP CLP)))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (S (NP (DT the) (NN user)) (VP (TO to) (VP (VB specify) (NP (NP (DT some) (NNS properties)) (PP (IN of) (NP (NP (DT the) (NNS computations)) (PP (IN in) (NP (PRP$ her) (NN program)))))))))))))) (. .))
(S (SBAR (IN If) (S (NP (NP (DT a) (NN state)) (PP (IN in) (NP (DT a) (NN computation)))) (VP (VBZ does) (RB not) (VP (VB satisfy) (NP (DT an) (NN assertion)))))) (ADVP (RB then)) (S (NP (DT some) (`` ``) (JJ wrong) ('' '') (NN information)) (VP (VBZ is) (VP (VBN identified)))) (CC and) (S (NP (DT an) (JJ automatic) (NN slicing) (NN process)) (VP (MD can) (VP (VB start)))) (. .))
(S (NP (DT This) (NN way)) (NP (PRP we)) (VP (VBP make) (NP (NP (CD one) (NN step)) (ADVP (RBR further)) (PP (NNS towards) (S (VP (VBG automatizing) (NP (DT the) (NN slicing) (NN process))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NN framework)) (VP (MD can) (VP (VB be) (VP (VBN integrated) (PP (IN with) (NP (DT the) (JJ previous) (JJ semi-automatic) (CD one))) (, ,) (S (VP (VBG giving) (NP (DT the) (NN user)) (NP (JJR more) (NNS choices) (CC and) (NN flexibility)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (PP (IN by) (NP (NP (NNS means)) (PP (IN of) (NP (NNS examples) (CC and) (VBZ experiments))))) (NP (NP (DT the) (NN usefulness)) (PP (IN of) (NP (PRP$ our) (NN approach))))) (. .))
