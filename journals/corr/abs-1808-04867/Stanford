(S (NP (NP (NN Constraint) (NN Logic) (NN Programming)) (-LRB- -LRB-) (NP (NN CLP)) (-RRB- -RRB-)) (VP (VBZ is) (NP (NP (DT a) (NN language) (NN scheme)) (PP (IN for) (S (VP (VBG combining) (NP (NP (CD two) (JJ declarative) (NNS paradigms)) (: :) (NP (NP (NN constraint) (NN solving)) (CC and) (NP (NN logic) (NN programming))))))))) (. .))
(S (NP (JJ Concurrent) (NN Constraint) (NN Programming) (PRN (-LRB- -LRB-) (NP (NNP CCP)) (-RRB- -RRB-))) (VP (VBZ is) (NP (NP (DT a) (JJ declarative) (NN model)) (PP (IN for) (NP (NP (NN concurrency)) (SBAR (WHADVP (WRB where)) (S (NP (NNS agents)) (VP (VBP interact) (PP (IN by) (S (VP (VBG telling) (CC and) (VBG asking) (NP (NP (NNS constraints)) (PP (IN in) (NP (DT a) (VBN shared) (NN store)))))))))))))) (. .))
(S (PP (IN In) (NP (DT a) (JJ previous) (NN paper))) (, ,) (NP (PRP we)) (VP (VBD developed) (NP (DT a) (NN framework)) (PP (IN for) (NP (NP (JJ dynamic) (NN slicing)) (PP (IN of) (NP (NNP CCP))))) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN user) (JJ first)) (VP (VBZ identifies) (SBAR (IN that) (S (NP (DT a) (-LRB- -LRB-) (JJ partial) (-RRB- -RRB-) (NN computation)) (VP (VBZ is) (ADJP (JJ wrong))))))))) (. .))
(S (ADVP (RB Then)) (, ,) (NP (PRP she)) (VP (VP (VBZ marks) (NP (SBAR (-LRB- -LRB-) (S (VP (VBZ selects))) (-RRB- -RRB-)) (NP (NP (NP (DT some) (NNS parts)) (PP (IN of) (NP (NP (DT the) (JJ final) (NN state)) (VP (VBG corresponding) (PP (IN to) (NP (DT the) (NNS data))))))) (-LRB- -LRB-) (NP (NNS constraints)) (-RRB- -RRB-)))) (CC and) (VP (VBZ processes) (SBAR (IN that) (S (NP (PRP she)) (VP (VBZ wants) (S (VP (TO to) (VP (VB study) (ADVP (RBR more) (RB deeply)))))))))) (. .))
(S (S (NP (NP (DT An) (JJ automatic) (NN process)) (PP (IN of) (NP (NN slicing)))) (VP (VBZ begins))) (, ,) (CC and) (S (NP (DT the) (JJ partial) (NN computation)) (VP (VBZ is) (VP (`` ") (VBN depurated) ('' ") (PP (IN by) (S (VP (VBG removing) (NP (ADJP (JJ irrelevant)) (NN information)))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP give) (NP (CD two) (JJ major) (NNS contributions))) (. .))
(S (ADVP (RB First)) (, ,) (NP (PRP we)) (VP (VBP extend) (NP (DT the) (NN framework)) (PP (IN to) (NP (NNP CLP))) (, ,) (S (ADVP (RB thus)) (VP (VBG generalizing) (NP (DT the) (JJ previous) (NN work))))) (. .))
(S (ADVP (RB Second)) (, ,) (NP (PRP we)) (VP (VBP provide) (S (NP (DT an) (NN assertion) (NN language)) (ADJP (JJ suitable) (PP (IN for) (NP (NP (ADVP (CC both)) (, ,) (NNP CCP) (CC and) (NNP CLP)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (NP (DT the) (NN user) (S (VP (TO to) (VP (VB specify) (NP (NP (DT some) (NNS properties)) (PP (IN of) (NP (NP (DT the) (NNS computations)) (PP (IN in) (NP (PRP$ her) (NN program)))))))))))))))))) (. .))
(S (S (SBAR (IN If) (S (NP (NP (DT a) (NN state)) (PP (IN in) (NP (DT a) (NN computation)))) (VP (VBZ does) (RB not) (VP (VB satisfy) (NP (DT an) (NN assertion)))))) (ADVP (RB then)) (NP (DT some) (`` ") (JJ wrong) ('' ") (NN information)) (VP (VBZ is) (VP (VBN identified)))) (CC and) (S (NP (DT an) (JJ automatic) (NN slicing) (NN process)) (VP (MD can) (VP (VB start)))) (. .))
(S (NP (DT This) (NN way)) (NP (PRP we)) (VP (VBP make) (PP (ADVP (NP (CD one) (NN step)) (RBR further)) (IN towards) (S (VP (VBG automatizing) (NP (DT the) (NN slicing) (NN process)))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NN framework)) (VP (MD can) (VP (VB be) (VP (VBN integrated) (PP (IN with) (NP (DT the) (JJ previous) (JJ semi-automatic) (NN one))) (, ,) (S (VP (VBG giving) (NP (ADVP (NP (DT the) (NN user)) (RBR more)) (NP (NNS choices)) (CC and) (NP (NN flexibility))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (PP (IN by) (NP (NP (NNS means)) (PP (IN of) (NP (NNS examples) (CC and) (NNS experiments))))) (NP (NP (DT the) (NN usefulness)) (PP (IN of) (NP (PRP$ our) (NN approach))))) (. .))
