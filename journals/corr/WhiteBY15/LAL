(S (NP (PRP We)) (VP (VBP present) (NP (NP (JJ modular) (NNS implicits)) (, ,) (NP (NP (DT an) (NN extension)) (PP (TO to) (NP (DT the) (NNP OCaml) (NN language))) (PP (IN for) (NP (NP (JJ ad-hoc) (NN polymorphism)) (VP (VBN inspired) (PP (IN by) (NP (NP (NNP Scala) (NNS implicits)) (CC and) (NP (JJ modular) (NN type) (NNS classes)))))))))) (. .))
(S (NP (JJ Modular) (NNS implicits)) (VP (VP (VBP are) (VP (VBN based) (PP (IN on) (NP (JJ type-directed) (JJ implicit) (NN module) (NNS parameters))))) (, ,) (CC and) (VP (VB elaborate) (ADVP (RB straightforwardly)) (PP (IN into) (NP (NP (NNP OCaml) (POS 's)) (JJ first-class) (NNS functors))))) (. .))
(S (S (VP (VBG Basing) (NP (DT the) (NN design)) (PP (IN on) (NP (NP (NNP OCaml) (POS 's)) (NNS modules))))) (VP (VBZ leads) (PP (TO to) (NP (NP (DT a) (NN system)) (SBAR (WHNP (WDT that)) (S (VP (ADVP (RB naturally)) (VBZ supports) (NP (NP (JJ many) (NNS features)) (PP (IN from) (NP (JJ other) (NNS languages)))) (PP (IN with) (NP (JJ systematic) (JJ ad-hoc) (NN overloading))) (, ,) (PP (VBG including) (NP (NP (NN inheritance)) (, ,) (NP (NN instance) (NNS constraints)) (, ,) (NP (NN constructor) (NNS classes)) (CC and) (NP (VBN associated) (NNS types)))))))))) (. .))
