(S (NP (PRP We)) (VP (VBP propose) (NP (NP (NNS Chunks) (CC and) (NNP Tasks)) (, ,) (NP (NP (DT a) (JJ parallel) (NN programming) (NN model)) (VP (VBN built) (PP (IN on) (NP (NP (NNS abstractions)) (PP (IN for) (NP (DT both) (NNS data) (CC and) (NN work))))))))) (. .))
(S (NP (DT The) (NN application) (NN programmer)) (VP (VBZ specifies) (SBAR (WHADVP (WRB how)) (S (NP (NNS data) (CC and) (NN work)) (VP (MD can) (VP (VB be) (VP (VBN split) (PP (IN into) (NP (NP (JJR smaller) (NNS pieces) (, ,) (NNS chunks) (CC and) (NNS tasks)) (, ,) (ADVP (RB respectively)))))))))) (. .))
(S (NP (DT The) (NNP Chunks) (CC and) (NNP Tasks) (JJ library)) (VP (VBD maps) (NP (DT the) (NNS chunks) (CC and) (NNS tasks)) (PP (TO to) (NP (JJ physical) (NNS resources)))) (. .))
(S (PP (IN In) (NP (DT this) (NN way))) (NP (PRP we)) (VP (VBP seek) (S (VP (TO to) (VP (VB combine) (NP (JJ user) (NN friendliness)) (PP (IN with) (NP (JJ high) (NN performance))))))) (. .))
(S (NP (DT An) (NN application) (NN programmer)) (VP (MD can) (VP (VB express) (NP (DT a) (JJ parallel) (NN algorithm)) (S (VP (VBG using) (NP (DT a) (JJ few) (JJ simple) (NN building) (NNS blocks)))) (, ,) (S (VP (VBG defining) (NP (NP (NNS data) (CC and) (NN work) (NNS objects)) (CC and) (NP (PRP$ their) (NNS relationships))))))) (. .))
(S (S (NP (DT No) (JJ explicit) (NN communication) (NNS calls)) (VP (VBP are) (VP (VBN needed)))) (: ;) (S (NP (NP (DT the) (NN distribution)) (PP (IN of) (NP (DT both) (NN work) (CC and) (NNS data)))) (VP (VBZ is) (VP (VBN handled) (PP (IN by) (NP (DT the) (NNP Chunks) (CC and) (NNP Tasks) (NN library)))))) (. .))
(S (NP (DT This)) (VP (VBZ makes) (S (NP (NP (JJ efficient) (NN implementation)) (PP (IN of) (NP (NP (JJ complex) (NNS applications)) (SBAR (WHNP (WDT that)) (S (VP (VBP require) (NP (NP (JJ dynamic) (NN distribution)) (PP (IN of) (NP (NN work) (CC and) (NNS data)))))))))) (ADJP (JJR easier)))) (. .))
(S (PP (IN At) (NP (DT the) (JJ same) (NN time))) (, ,) (NP (NNP Chunks) (CC and) (NNP Tasks)) (VP (NNS imposes) (NP (NP (NNS restrictions)) (PP (IN on) (NP (NP (NNS data) (NN access)) (CC and) (NP (NN task) (NNS dependencies)))) (SBAR (WHNP (WDT that)) (S (VP (VBZ facilitates) (NP (NP (DT the) (NN development)) (PP (IN of) (NP (JJ high) (NN performance) (VBD parallel) (FRAG (WHADVP (RB back) (VBZ ends))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP discuss) (NP (NP (NP (DT the) (JJ fundamental) (NNS abstractions)) (VP (VBG underlying) (NP (DT the) (NN programming) (NN model)))) (, ,) (CONJP (RB as) (RB well) (IN as)) (NP (NN performance) (CC and) (NN fault) (NN resilience) (NNS considerations)))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VP (VBD present) (NP (NP (DT a) (NN pilot) (NNP C++) (JJ library) (NN implementation)) (PP (IN for) (NP (NP (NNS clusters)) (PP (IN of) (NP (NN multicore) (NNS machines))))))) (CC and) (VP (VB demonstrate) (NP (NP (PRP$ its) (NN performance)) (PP (IN for) (NP (NN sparse) (VBD blocked) (JJ matrix-matrix) (NN multiplication)))))) (. .))
