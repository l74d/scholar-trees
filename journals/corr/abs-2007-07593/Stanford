(S (NP (PRP We)) (VP (VBP introduce) (NP (NP (NP (ADJP (RB partially) (JJ observable)) (JJ concurrent) (NN Kleene)) (NP (NN algebra) (-LRB- -LRB-) (NN POCKA) (-RRB- -RRB-))) (, ,) (NP (NP (DT an) (JJ algebraic) (NN framework)) (RRC (PP (IN to) (NP (NN reason) (RB about))) (NP (JJ concurrent) (NNS programs)) (PP (IN with) (NP (NN control) (NNS structures))) (, ,) (PP (JJ such) (IN as) (NP (NNS conditionals) (CC and) (NNS loops))))))) (. .))
(S (NP (NN POCKA)) (VP (VBZ enables) (NP (NN reasoning)) (PP (IN about) (NP (NP (NNS programs)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB access) (NP (NNS variables) (CC and) (NNS values)))))))) (, ,) (SBAR (WHNP (WDT which)) (S (NP (PRP we)) (VP (VBP illustrate) (PP (IN through) (NP (JJ concrete) (NNS examples))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (NN POCKA)) (VP (VBZ is) (NP (NP (DT a) (NN sound)) (CC and) (NP (NP (JJ complete) (NN axiomatisation)) (PP (IN of) (NP (NP (DT a) (NN model)) (PP (IN of) (NP (JJ partial) (NNS observations)))))))))))) (, ,) (CC and) (S (S (VP (VB show) (NP (DT the) (NNS semantics)))) (VP (VBZ passes) (NP (NP (DT an) (JJ important) (NN check)) (PP (IN for) (NP (JJ sequential) (NN consistency)))))) (. .))
