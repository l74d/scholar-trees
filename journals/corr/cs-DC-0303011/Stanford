(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT an) (ADJP (NP (JJ efficient) (NN lock)) (HYPH -) (JJ free)) (NN algorithm)) (PP (IN for) (NP (ADJP (JJ parallel) (JJ accessible)) (NN hash) (NNS tables)))) (PP (IN with) (ADJP (JJ open))) (VP (VBG addressing)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ promises) (NP (ADJP (JJR more) (JJ robust)) (NN performance) (CC and) (NN reliability) (PP (IN than) (NP (ADJP (NP (JJ conventional) (NN lock)) (HYPH -) (VBN based)) (NNS implementations)))))))) (. .))
(NP (NP (`` ``) (ADJP (NN Lock) (HYPH -) (JJ free)) ('' '') (NNS means)) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN guaranteed) (SBAR (IN that) (S (ADVP (RB always)) (NP (QP (ADVP (RB at) (RBS least)) (CD one)) (NN process)) (VP (VBZ completes) (NP (PRP$ its) (NN operation)) (PP (IN within) (NP (NP (DT a) (VBN bounded) (NN number)) (PP (IN of) (NP (NNS steps)))))))))))) (. .))
(S (PP (IN For) (NP (DT a) (JJ single) (NN processor) (NN architecture))) (NP (PRP$ our) (NN solution)) (VP (VBZ is) (PP (IN as) (NP (ADJP (JJ efficient) (PP (IN as) (NP (JJ sequential) (NN hash)))) (NNS tables)))) (. .))
(S (PP (IN On) (NP (DT a) (NN multiprocessor) (NN architecture))) (NP (DT this)) (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN case)) (SBAR (WHADVP (WRB when)) (S (NP (DT all) (NNS processors)) (VP (VBP have) (NP (JJ comparable) (NNS speeds))))))) (. .))
(S (NP (DT The) (NN algorithm)) (VP (VBZ allows) (NP (NP (NNS processors)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBP have) (NP (ADJP (RB widely) (JJ different)) (NNS speeds))) (CC or) (VP (VB come) (PP (IN to) (NP (DT a) (NN halt))))))))) (. .))
(S (NP (PRP It)) (VP (VP (MD can) (ADVP (RB easily)) (VP (VB be) (VP (VBN implemented) (S (VP (VBG using) (NP (ADJP (NN C) (HYPH -) (JJ like)) (NNS languages))))))) (CC and) (VP (VP (VBZ requires) (PP (IN on) (NP (NP (JJ average) (JJ only) (JJ constant) (NN time)) (PP (IN for) (NP (NP (NN insertion)) (, ,) (NP (NN deletion))))))) (CC or) (VP (VBG accessing) (PP (IN of) (NP (NNS elements)))))) (. .))
(S (NP (DT The) (NN algorithm)) (VP (VBZ allows) (NP (DT the) (NN hash) (NNS tables)) (S (VP (TO to) (VP (VB grow) (CC and) (VB shrink) (SBAR (WHADVP (WRB when)) (S (VP (VBN needed)))))))) (. .))
(S (NP (ADJP (NN Lock) (HYPH -) (JJ free)) (NNS algorithms)) (VP (VBP are) (ADJP (JJ hard) (S (VP (TO to) (VP (VB design) (ADVP (ADVP (RB correctly)) (, ,) (ADVP (RB even))) (SBAR (WHADVP (WRB when)) (FRAG (ADJP (RB apparently) (JJ straightforward))))))))) (. .))
(S (S (VP (VBG Ensuring) (NP (NP (DT the) (NN correctness)) (PP (IN of) (NP (NP (DT the) (NN design)) (PP (IN at) (NP (DT the) (JJS earliest) (JJ possible) (NN stage)))))))) (VP (VBZ is) (NP (NP (DT a) (JJ major) (NN challenge)) (PP (IN in) (NP (DT any) (JJ responsible) (NN system) (NN development))))) (. .))
(S (PP (IN In) (NP (NP (NN view)) (PP (IN of) (NP (NP (DT the) (NN complexity)) (PP (IN of) (NP (DT the) (NN algorithm))))))) (, ,) (NP (PRP we)) (VP (VBD turned) (PP (IN to) (NP (NP (DT the) (JJ interactive) (NN theorem) (NN prover) (NN PVS)) (PP (IN for) (NP (JJ mechanical) (NN support)))))) (. .))
(S (NP (PRP We)) (VP (VBP employ) (NP (JJ standard) (JJ deductive) (NN verification) (NNS techniques)) (S (VP (TO to) (VP (VP (VB prove) (PP (IN around) (NP (NP (CD 200) (NN invariance) (NNS properties)) (PP (IN of) (NP (PRP$ our) (NN algorithm)))))) (, ,) (CC and) (VP (VB describe) (SBAR (WHADVP (WRB how)) (S (NP (DT this)) (VP (VBZ is) (VP (VBN achieved) (PP (IN with) (NP (DT the) (NN theorem) (NN prover) (NN PVS)))))))))))) (. .))
