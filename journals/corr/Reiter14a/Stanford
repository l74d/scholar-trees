(S (S (VP (VBG Combining) (NP (NNS ideas)) (PP (IN from) (NP (NP (VBN distributed) (NNS algorithms)) (CC and) (NP (VBG alternating) (NN automata)))))) (, ,) (NP (PRP we)) (VP (VBP introduce) (NP (NP (DT a) (JJ new) (NN class)) (PP (IN of) (NP (NP (JJ finite) (NN graph) (NN automata)) (SBAR (WHNP (WDT that)) (S (VP (VBP recognize) (S (NP (NP (RB precisely) (DT the) (NNS languages)) (PP (IN of) (NP (JJ finite) (NNS graphs)))) (ADJP (JJ definable) (PP (IN in) (NP (JJ monadic) (NML (JJ second) (HYPH -) (NN order)) (NN logic)))))))))))) (. .))
(S (PP (IN By) (S (VP (VBG restricting) (NP (NNS transitions)) (S (VP (TO to) (VP (VB be) (ADJP (JJ nondeterministic) (CC or) (JJ deterministic)))))))) (, ,) (NP (PRP we)) (ADVP (RB also)) (VP (VB obtain) (NP (NP (NP (CD two) (ADJP (RB strictly) (JJR weaker)) (NNS variants)) (PP (IN of) (NP (PRP$ our) (NN automata)))) (SBAR (WHPP (IN for) (WHNP (WDT which))) (S (NP (DT the) (NN emptiness) (NN problem)) (VP (VBZ is) (ADJP (JJ decidable))))))) (. .))
(S (PP (IN As) (NP (DT an) (NN application))) (, ,) (NP (PRP we)) (VP (VBP suggest) (SBAR (WHADVP (WRB how)) (S (NP (JJ suitable) (NN graph) (NN automata)) (VP (MD might) (VP (VB be) (ADJP (JJ useful) (PP (IN in) (NP (NP (JJ formal) (NN verification)) (PP (IN of) (NP (VBN distributed) (NNS algorithms)))))) (, ,) (S (VP (VBG using) (NP (NML (NNP Floyd) (HYPH -) (NNP Hoare)) (NN logic))))))))) (. .))
