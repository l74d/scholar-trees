(S (NP (PRP We)) (VP (VBP investigate) (NP (NP (DT the) (NN interplay)) (PP (IN between) (NP (NP (DT a) (NN modality)) (PP (IN for) (S (VP (VBG controlling) (NP (NP (DT the) (NN behaviour)) (PP (IN of) (NP (JJ recursive) (JJ functional) (NNS programs)))) (PP (IN on) (NP (NP (NN infinite) (NNS structures)) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (RB completely) (JJ silent) (PP (IN in) (NP (DT the) (NN syntax))))))))))))))) (. .))
(S (NP (DT The) (JJ latter)) (VP (VBZ means) (SBAR (IN that) (S (NP (NNS programs)) (VP (VBP do) (RB not) (VP (VB contain) (NP (`` ``) (NP (NNS marks)) ('' '') (VP (VBG showing) (NP (NP (DT the) (NN application)) (PP (IN of) (NP (NP (DT the) (NN introduction) (CC and) (NN elimination) (NNS rules)) (PP (IN for) (NP (DT the) (NN modality))))))))))))) (. .))
(S (NP (DT This)) (VP (VBZ shifts) (NP (NP (DT the) (NN burden)) (PP (IN of) (S (VP (VBG controlling) (NP (NN recursion)))))) (PP (IN from) (NP (DT the) (NN programmer))) (PP (TO to) (NP (DT the) (NN compiler)))) (. .))
(S (S (VP (TO To) (VP (VB do) (NP (DT this))))) (, ,) (NP (PRP we)) (VP (VBP introduce) (NP (DT a) (JJ typed) (NN lambda) (VBZ calculus)) (ADVP (DT a) (NN la) (NP (NNP Curry))) (PP (IN with) (NP (NP (DT a) (JJ silent) (NN modality)) (CC and) (NP (VBD guarded) (JJ recursive) (NNS types))))) (. .))
(S (NP (DT The) (NN typing) (NN discipline)) (VP (VP (NNS guarantees) (NP (NN normalisation))) (CC and) (VP (MD can) (VP (VB be) (VP (VBN transformed) (PP (IN into) (NP (NP (DT an) (NN algorithm)) (SBAR (WHNP (WDT which)) (S (VP (VBZ infers) (NP (NP (DT the) (NN type)) (PP (IN of) (NP (DT a) (NN program))))))))))))) (. .))
