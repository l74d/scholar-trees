(S (NP (JJ Linear) (NN type) (NNS systems)) (VP (VBP have) (NP (NP (DT a) (JJ long) (CC and) (JJ storied) (NN history)) (, ,) (CC but) (RB not) (NP (NP (DT a) (JJ clear) (NN path)) (ADVP (NN forward)) (SBAR (S (VP (TO to) (VP (VB integrate) (PP (IN with) (NP (NP (VBG existing) (NNS languages)) (PP (JJ such) (IN as) (NP (NNP OCaml) (CC or) (NNP Haskell)))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP study) (NP (NP (DT a) (JJ linear) (NN type) (NN system)) (VP (VBN designed) (PP (IN with) (NP (NP (NP (CD two) (JJ crucial) (NNS properties)) (PP (IN in) (NP (NN mind)))) (: :) (NP (NP (NN backwards-compatibility)) (CC and) (NP (NP (NN code) (NN reuse)) (PP (IN across) (NP (NP (ADJP (JJ linear) (CC and) (JJ non-linear)) (NNS users)) (PP (IN of) (NP (DT a) (NN library)))))))))))) (. .))
(SINV (ADVP (RB Only) (RB then)) (MD can) (NP (NP (DT the) (NNS benefits)) (PP (IN of) (NP (JJ linear) (NNS types)))) (VP (VBP permeate) (NP (JJ conventional) (JJ functional) (NN programming))) (. .))
(S (SBAR (RB Rather) (IN than) (S (VP (VB bifurcate) (NP (NNS types)) (PP (IN into) (NP (ADJP (JJ linear) (CC and) (JJ non-linear)) (NNS counterparts)))))) (, ,) (NP (PRP we)) (ADVP (RB instead)) (VP (VBP attach) (NP (NN linearity)) (PP (TO to) (NP (NN function) (NNS arrows)))) (. .))
(S (NP (JJ Linear) (NNS functions)) (VP (VP (MD can) (VP (VB receive) (NP (NNS inputs)) (PP (IN from) (NP (JJ linearly-bound) (NNS values))))) (, ,) (CC but) (VP (MD can) (ADVP (RB also)) (VP (VB operate) (PP (IN over) (NP (JJ unrestricted) (, ,) (JJ regular) (NNS values)))))) (. .))
(S (S (VP (TO To) (VP (VB demonstrate) (NP (NP (NP (DT the) (NN efficacy)) (PP (IN of) (NP (PRP$ our) (JJ linear) (NN type) (NN system)))) (: -) (SBAR (DT both) (SBAR (WHADJP (WRB how) (JJ easy)) (S (NP (PRP it)) (VP (MD can) (VP (VB be) (VP (VBN integrated) (PP (IN in) (NP (DT an) (JJ existing) (NN language) (NN implementation)))))))) (CC and) (SBAR (WHADJP (WRB how) (VBD streamlined)) (S (NP (PRP it)) (VP (VBZ makes) (S (NP (NP (PRP it))) (S (VP (TO to) (VP (VB write) (NP (NNS programs)) (PP (IN with) (NP (JJ linear) (NNS types))))))))))) (: -))))) (NP (PRP we)) (VP (VP (VBD implemented) (NP (PRP$ our) (NN type) (NN system)) (PP (IN in) (NP (NP (NNP GHC)) (, ,) (NP (DT the) (VBG leading) (NNP Haskell) (NN compiler))))) (, ,) (CC and) (VP (VB demonstrate) (NP (NP (NP (CD two) (NNS kinds)) (PP (IN of) (NP (NP (NNS applications)) (PP (IN of) (NP (JJ linear) (NNS types)))))) (: :) (NP (NP (NP (JJ mutable) (NNS data)) (PP (IN with) (NP (JJ pure) (NNS interfaces)))) (: ;) (CC and) (S (VP (VBG enforcing) (NP (NNS protocols)) (PP (IN in) (NP (JJ I/O-performing) (NNS functions))))))))) (. .))
