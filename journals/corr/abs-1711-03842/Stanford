(S (NP (PRP We)) (VP (VBP introduce) (NP (NP (NN Refinement) (NN Reflection)) (, ,) (NP (NP (DT a) (JJ new) (NN framework)) (PP (IN for) (NP (ADJP (NP (VBG building) (NN SMT)) (HYPH -) (VBN based)) (JJ deductive) (NNS verifiers)))))) (. .))
(S (NP (DT The) (JJ key) (NN idea)) (VP (VBZ is) (S (VP (TO to) (VP (VB reflect) (NP (DT the) (NN code)) (S (VP (VBG implementing) (NP (DT a) (ADJP (NN user) (HYPH -) (VBN defined)) (NN function)) (PP (IN into) (NP (NP (DT the) (NN function) (POS 's)) (NML (-LRB- -LRB-) (NN output) (-RRB- -RRB-)) (NN refinement) (NN type))))))))) (. .))
(S (PP (IN As) (NP (DT a) (NN consequence))) (, ,) (PP (IN at) (NP (NP (NNS uses)) (PP (IN of) (NP (DT the) (NN function))))) (, ,) (NP (DT the) (NN function) (NN definition)) (VP (VBZ is) (VP (VBN instantiated) (PP (IN in) (NP (DT the) (NNP SMT) (NN logic))) (PP (IN in) (NP (NP (DT a) (JJ precise) (NN fashion)) (SBAR (WHNP (WDT that)) (S (VP (VBZ permits) (NP (JJ decidable) (NN verification))))))))) (. .))
(S (NP (NN Reflection)) (VP (VBZ allows) (NP (DT the) (NN user) (S (VP (TO to) (VP (VB write) (NP (NP (JJ equational) (NNS proofs)) (PP (IN of) (NP (NNS programs)))) (PP (ADVP (RB just)) (IN by) (S (VP (VBG writing) (NP (JJ other) (NNS programs)) (S (VP (VBG using) (NP (NP (NN pattern) (HYPH -) (NN matching)) (CC and) (NP (NN recursion))) (S (VP (TO to) (VP (VB perform) (NP (NP (NN case) (HYPH -) (NN splitting)) (CC and) (NP (NN induction)))))))))))))))) (. .))
(S (ADVP (RB Thus)) (, ,) (PP (IN via) (NP (NP (DT the) (NNS propositions)) (: -) (NP (NML (PP (IN as) (HYPH -) (NP (NNS types)))) (NN principle)))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (NN reflection)) (VP (VBZ permits) (NP (NP (DT the) (NN specification)) (PP (IN of) (NP (JJ arbitrary) (JJ functional) (NN correctness) (NNS properties)))))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP introduce) (NP (NP (DT a) (NML (NN proof) (HYPH -) (NN search)) (NN algorithm)) (VP (VBN called) (NP (NNP Proof)) (PP (IN by) (NP (NP (JJ Logical) (NN Evaluation)) (SBAR (WHNP (WDT that)) (S (VP (VBZ uses) (NP (NNS techniques)) (PP (IN from) (NP (NP (NN model) (VBG checking)) (CC and) (NP (JJ abstract) (NN interpretation))))))))))) (, ,) (S (VP (TO to) (ADVP (RB completely)) (VP (VB automate) (NP (JJ equational) (NN reasoning)))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP have) (VP (VBN implemented) (NP (NN reflection)) (PP (IN in) (NP (NN Liquid) (NNP Haskell))))) (CC and) (VP (VBD used) (NP (PRP it)) (S (VP (TO to) (VP (VB verify) (SBAR (IN that) (S (NP (NP (DT the) (ADJP (RB widely) (VBN used)) (NNS instances)) (PP (IN of) (NP (DT the) (NML (NNP Monoid) (, ,) (NNP Applicative) (, ,) (NNP Functor) (, ,) (CC and) (NNP Monad)) (NNS typeclasses)))) (VP (VP (ADVP (RB actually)) (VBP satisfy) (NP (NP (JJ key) (JJ algebraic) (NNS laws)) (VP (VBN required) (S (VP (TO to) (VP (VB make) (S (NP (DT the) (NNS clients)) (ADJP (JJ safe))))))))) (, ,) (CC and) (VP (VBP have) (VP (VBN used) (NP (NN reflection)) (S (VP (TO to) (VP (VB build) (NP (NP (DT the) (JJ first) (NN library)) (SBAR (WHNP (WDT that)) (S (ADVP (RB actually)) (VP (VBZ verifies) (NP (NP (NP (NNS assumptions)) (PP (IN about) (NP (NN associativity) (CC and) (NN ordering)))) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (JJ crucial) (PP (IN for) (NP (JJ safe) (JJ deterministic) (NN parallelism))))))))))))))))))))))))) (. .))
