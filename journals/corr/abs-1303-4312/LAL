(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (ADJP (JJ simple) (, ,) (JJ work-optimal) (CC and) (JJ synchronization-free)) (NN solution)) (PP (TO to) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (ADVP (RB stably)) (VBG merging) (PP (IN in) (NP (JJ parallel))) (NP (NP (CD two) (VBN given) (, ,) (VBD ordered) (NNS arrays)) (PP (IN of) (NP (NN m) (CC and) (JJ n) (NNS elements)))) (PP (IN into) (NP (NP (DT an) (JJ ordered) (NN array)) (PP (IN of) (NP (NN m+n) (NNS elements)))))))))))) (. .))
(S (NP (DT The) (JJ main) (NN contribution)) (VP (VBZ is) (NP (NP (DT a) (ADJP (JJ new) (, ,) (JJ simple) (, ,) (JJ fast) (CC and) (JJ direct)) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ determines) (, ,) (PP (IN for) (NP (NP (DT any) (NN prefix)) (PP (IN of) (NP (DT the) (ADJP (NN stably) (VBD merged)) (NN output) (NN sequence))))) (, ,) (NP (NP (DT the) (JJ exact) (NNS prefixes)) (PP (IN of) (NP (NP (DT each)) (PP (IN of) (NP (NP (DT the) (CD two) (NN input) (NNS sequences)) (VP (VBN needed) (S (VP (TO to) (VP (VB produce) (NP (DT this) (NN output) (NN prefix)))))))))))))))) (. .))
(S (ADVP (RBR More) (RB precisely)) (, ,) (PP (IN for) (NP (DT any) (VBN given) (NN index) (PRN (-LRB- -LRB-) (NP (NN rank)) (-RRB- -RRB-)) (PP (IN in) (NP (NP (DT the) (ADJP (ADJP (NN resulting)) (, ,) (CC but) (ADJP (ADVP (RB not) (RB yet)) (VBN constructed))) (NN output) (NN array)) (VP (VBG representing) (NP (DT an) (NN output) (NN prefix))))))) (, ,) (NP (DT the) (NN algorithm)) (VP (VBZ computes) (NP (NP (DT the) (NNS indices)) (PRN (-LRB- -LRB-) (NP (NNS co-ranks)) (-RRB- -RRB-)) (PP (IN in) (NP (NP (DT each)) (PP (IN of) (NP (NP (DT the) (CD two) (NN input) (NNS arrays)) (VP (VBG representing) (NP (DT the) (JJ required) (NN input) (NNS prefixes)))))))) (PP (IN without) (S (VP (VBG having) (S (VP (TO to) (VP (VB merge) (NP (DT the) (NN input) (NNS arrays))))))))) (. .))
(S (NP (DT The) (JJ co-ranking) (NN algorithm)) (VP (VBZ takes) (NP (NNP O) (PRN (-LRB- -LRB-) (JJ log) (NN min) (PRN (-LRB- -LRB-) (NN m) (, ,) (RB n) (-RRB- -RRB-)) (-RRB- -RRB-)) (NN time) (NNS steps))) (. .))
(S (NP (DT The) (NN algorithm)) (VP (VBZ is) (VP (VBN used) (S (VP (TO to) (VP (VB devise) (NP (NP (DT a) (ADJP (RB perfectly) (JJ load-balanced)) (, ,) (JJ stable) (, ,) (JJ parallel) (NN merge) (NN algorithm)) (SBAR (WHADVP (WRB where)) (S (NP (NP (DT each)) (PP (IN of) (NP (NN p) (NN processing) (NNS elements)))) (VP (VBZ has) (NP (NP (NP (RB exactly) (DT the) (JJ same) (NN number)) (PP (IN of) (NP (JJ input) (NNS elements)))) (SBAR (S (VP (TO to) (VP (VB merge))))))))))))))) (. .))
(S (PP (VBN Compared) (PP (TO to) (NP (NP (JJ other) (NNS approaches)) (PP (TO to) (NP (DT the) (JJ parallel) (NN merge) (NN problem)))))) (, ,) (NP (PRP$ our) (NN algorithm)) (VP (VP (VBZ is) (ADJP (RB considerably) (JJ simpler))) (CC and) (VP (MD can) (VP (VB be) (ADJP (RBR faster)) (PP (RB up) (PP (TO to) (NP (NP (DT a) (NN factor)) (PP (IN of) (NP (CD two))))))))) (. .))
(S (PP (VBN Compared) (PP (TO to) (NP (NP (JJ previous) (NN algorithms)) (PP (IN for) (S (VP (VBG solving) (NP (DT the) (NN co-ranking) (NN problem)))))))) (, ,) (NP (NP (DT the) (NN algorithm)) (VP (VBN given) (ADVP (RB here)))) (VP (VP (VBZ is) (ADJP (JJ direct))) (CC and) (VP (VBZ maintains) (NP (NN stability)) (PP (IN in) (NP (NP (DT the) (NN presence)) (PP (IN of) (NP (JJ repeated) (NNS elements))))) (PP (IN at) (NP (DT no) (JJ extra) (NN space) (CC or) (NN time) (NN cost))))) (. .))
(S (SBAR (WHADVP (WRB When)) (S (NP (NP (DT the) (NN number)) (PP (IN of) (NP (VBG processing) (NNS elements) (NN p)))) (VP (VBZ does) (RB not) (VP (VB exceed) (PRN (-LRB- -LRB-) (NP (PRP m+n)) (-RRB- -RRB-)) (NP (NP (NN /log) (NN min)) (PRN (-LRB- -LRB-) (NN m) (, ,) (NN n) (-RRB- -RRB-))))))) (, ,) (NP (DT the) (JJ parallel) (NN merge) (NN algorithm)) (VP (VBZ has) (NP (JJ optimal) (NN speedup))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (ADJP (JJ easy) (SBAR (S (VP (TO to) (VP (VB implement) (PP (IN on) (NP (DT both) (VBN shared) (CC and) (VBN distributed) (NN memory) (JJ parallel) (NNS systems))))))))) (. .))
