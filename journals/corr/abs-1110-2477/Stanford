(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (JJ parallel) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ computes) (NP (NP (DT the) (NML (S (VP (VB ask) (CC and) (VB bid)))) (NNS prices)) (PP (IN of) (NP (NP (DT an) (JJ American) (NN option)) (SBAR (WHADVP (WRB when)) (S (NP (JJ proportional) (NN transaction) (NNS costs)) (VP (VBP apply) (PP (IN to) (NP (NP (DT the) (NN trading)) (PP (IN of) (NP (DT the) (JJ underlying) (NN asset)))))))))))))))) (. .))
(S (NP (DT The) (NN algorithm)) (VP (VP (VBZ computes) (NP (DT the) (NNS prices)) (PP (IN on) (S (VP (VBG recombining) (NP (JJ binomial) (NNS trees)))))) (, ,) (CC and) (VP (VBZ is) (VP (VBN designed) (PP (IN for) (NP (JJ modern) (JJ multi-core) (NNS processors)))))) (. .))
(S (SBAR (IN Although) (S (NP (JJ parallel) (NN option) (NN pricing)) (VP (VBZ has) (VP (VBN been) (ADVP (RB well)) (VP (VBN studied)))))) (, ,) (NP (NP (NN none)) (PP (IN of) (NP (DT the) (VBG existing) (NNS approaches)))) (VP (VBZ takes) (NP (NN transaction) (NNS costs)) (PP (IN into) (NP (NN consideration)))) (. .))
(NP (NP (DT The) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (NP (PRP we)) (VP (VBP propose) (NP (NP (NNS partitions)) (NP (DT a) (JJ binomial) (NN tree))) (PP (IN into) (NP (NNS blocks)))))) (. .))
(S (PP (IN In) (NP (NP (DT any) (NN round)) (PP (IN of) (NP (NN computation))))) (NP (DT a) (NN block)) (VP (VBZ is) (ADJP (JJ further) (SBAR (S (VP (VBD partitioned) (PP (IN into) (NP (NP (NNS regions)) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (VP (VBN assigned) (PP (IN to) (NP (JJ distinct) (NNS processors)))))))))))))) (. .))
(S (S (VP (TO To) (VP (VB minimise) (NP (NP (NN load) (NN imbalance)) (SBAR (S (NP (NP (DT the) (NN assignment)) (PP (IN of) (NP (NP (NNS nodes)) (PP (IN to) (NP (NNS processors)))))) (VP (VBZ is) (ADVP (RB dynamically)) (VP (VBN adjusted) (PP (IN before) (NP (DT each) (JJ new) (NN round))))))))))) (VP (VBZ starts)) (. .))
(S (NP (NN Synchronisation)) (VP (VBZ is) (VP (VBN required) (PP (DT both) (PP (IN within) (NP (DT a) (NN round))) (CC and) (PP (IN between) (NP (CD two) (JJ successive) (NNS rounds)))))) (. .))
(S (NP (NP (DT The) (JJ parallel) (NN speedup)) (PP (IN of) (NP (DT the) (NN algorithm)))) (VP (VBZ is) (ADJP (JJ proportional) (PP (IN to) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NP (NNS processors)) (VP (VBN used)))))))) (. .))
(S (NP (DT The) (JJ parallel) (NN algorithm)) (VP (VP (VBD was) (VP (VBN implemented) (PP (IN in) (NP (NP (NNP C) (HYPH /) (NNP C++)) (PP (IN via) (NP (NNP POSIX) (NNPS Threads))))))) (, ,) (CC and) (VP (VBD was) (VP (VBN tested) (PP (IN on) (NP (NP (DT a) (NN machine)) (PP (IN with) (NP (CD 8) (NNS processors)))))))) (. .))
(S (PP (IN In) (NP (NP (DT the) (NN pricing)) (PP (IN of) (NP (DT an) (JJ American) (NN put) (NN option))))) (, ,) (NP (NP (DT the) (JJ parallel) (NN speedup)) (PP (IN against) (NP (DT an) (JJ efficient) (JJ sequential) (NN implementation)))) (VP (VBD was) (NP (NP (NP (CD 5.26)) (VP (VBG using) (NP (NML (NML (CD 8) (NNS processors)) (CC and) (NML (CD 1500) (NN time))) (NNS steps)))) (, ,) (VP (VBG achieving) (NP (NP (DT a) (JJ parallel) (NN efficiency)) (PP (IN of) (NP (CD 65.75) (NN %))))))) (. .))
