(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (NP (DT a) (JJ model-free) (NN reinforcement) (VBG learning) (NN method)) (SBAR (S (VP (TO to) (VP (VB synthesize) (NP (NP (NN control) (NNS policies)) (PP (IN for) (NP (NP (NN motion) (NN planning) (NNS problems)) (PP (IN for) (NP (JJ continuous) (NNS states) (CC and) (NNS actions)))))))))))) (. .))
(S (NP (DT The) (NN robot)) (VP (VBZ is) (VP (VBN modelled) (PP (IN as) (NP (NP (DT a) (JJ labeled) (NNP Markov) (NN decision) (NN process)) (PRN (-LRB- -LRB-) (NP (NNP MDP)) (-RRB- -RRB-)) (PP (IN with) (NP (JJ continuous) (NN state) (CC and) (NN action) (NNS spaces))))))) (. .))
(S (NP (NP (JJ Linear) (JJ temporal) (NNS logics)) (PRN (-LRB- -LRB-) (NP (NNP LTL)) (-RRB- -RRB-))) (VP (VBP are) (VP (VBN used) (S (VP (TO to) (VP (VB specify) (NP (JJ high-level) (NNS tasks))))))) (. .))
(S (NP (PRP We)) (ADVP (RB then)) (VP (VBP train) (S (NP (JJ deep) (JJ neural) (NNS networks)) (VP (TO to) (VP (VB approximate) (NP (NP (DT the) (NN value) (NN function)) (CC and) (NP (NN policy)))))) (S (VP (VBG using) (NP (DT an) (JJ actor-critic) (NN reinforcement) (VBG learning) (NN method))))) (. .))
(S (NP (NP (DT A) (JJ naive) (NN way)) (PP (IN of) (S (VP (VBG solving) (NP (DT a) (NN motion) (NN planning) (NN problem)) (PP (IN with) (NP (NNP LTL) (NNS specifications))) (S (VP (VBG using) (NP (NN reinforcement) (NN learning)))))))) (VP (VBZ is) (S (VP (S (VP (TO to) (VP (VB sample) (NP (DT a) (NN trajectory))))) (CC and) (, ,) (S (SBAR (IN if) (S (NP (DT the) (NN trajectory)) (VP (VBZ satisfies) (NP (DT the) (JJ entire) (NNP LTL) (NN formula))))) (ADVP (RB then)) (NP (PRP we)) (VP (VBP assign) (NP (DT a) (JJ high) (NN reward)) (PP (IN for) (NP (NN training)))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NP (DT the) (VBG sampling) (NN complexity)) (VP (VBN needed) (S (VP (TO to) (VP (VB find) (NP (JJ such) (DT a) (NN trajectory))))))) (VP (VBZ is) (ADJP (RB too) (JJ high)) (SBAR (WHADVP (WRB when)) (S (NP (PRP we)) (VP (VBP have) (NP (NP (DT a) (JJ complex) (NNP LTL) (NN formula)) (PP (IN for) (NP (JJ continuous) (NN state) (CC and) (NN action) (NNS spaces)))))))) (. .))
(S (PP (IN As) (NP (DT a) (NN result))) (, ,) (NP (NP (PRP it))) (VP (VBZ is) (ADJP (RB very) (JJ unlikely)) (SBAR (IN that) (S (NP (PRP we)) (VP (VBP get) (NP (NP (JJ enough) (NN reward)) (PP (IN for) (NP (VBG training))))))) (SBAR (IN if) (S (NP (DT all) (NN sample) (NNS trajectories)) (VP (VBP start) (PP (IN from) (NP (NP (DT the) (JJ initial) (NN state)) (PP (IN in) (NP (DT the) (NN automata))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (NP (DT a) (NN method)) (SBAR (WHNP (WDT that)) (S (VP (VBZ samples) (NP (CONJP (RB not) (RB only)) (NP (NP (DT an) (JJ initial) (NN state)) (PP (IN from) (NP (DT the) (NN state) (NN space)))) (, ,) (CONJP (CC but) (RB also)) (NP (NP (DT an) (JJ arbitrary) (NN state)) (PP (IN in) (NP (DT the) (NN automata))) (PP (IN at) (NP (NP (DT the) (NN beginning)) (PP (IN of) (NP (DT each) (NN training) (NN episode)))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP test) (NP (PRP$ our) (NN algorithm)) (PP (IN in) (NP (NN simulation))) (S (VP (VBG using) (NP (DT a) (JJ car-like) (NN robot))))) (CC and) (VP (VB find) (PRT (RP out)) (SBAR (IN that) (S (NP (PRP$ our) (NN method)) (VP (MD can) (VP (VB learn) (NP (NP (NNS policies)) (PP (IN for) (NP (JJ different) (NX (NX (VBG working) (NNS configurations)) (CC and) (NX (NNP LTL) (NNS specifications)))))) (ADVP (RB successfully)))))))) (. .))
