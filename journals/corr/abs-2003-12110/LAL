(S (NP (DT The) (JJ balanced) (NN hypergraph) (NN partitioning) (NN problem)) (VP (VBZ is) (S (VP (TO to) (VP (VB partition) (NP (DT a) (NN hypergraph)) (PP (IN into) (NP (NP (ADJP ($ $) (JJ k) ($ $)) (NN disjoint) (NNS blocks)) (PP (IN of) (NP (JJ bounded) (NN size))))) (SBAR (JJ such) (IN that) (S (NP (NP (DT the) (NN sum)) (PP (IN of) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NNS blocks))) (VP (VBN connected) (PP (IN by) (NP (DT each) (NN hyperedge))))))) (VP (VBZ is) (VP (VBN minimized))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT an) (NN improvement)) (PP (TO to) (NP (NP (DT the) (JJ flow-based) (NN refinement) (NN framework)) (PP (IN of) (NP (NP (NNP KaHyPar-MF)) (, ,) (NP (NP (DT the) (JJ current) (JJ state-of-the-art) (NN multilevel) (ADJP ($ $) (VB k) ($ $) (RB -way)) (JJ hypergraph) (VBG partitioning) (NN algorithm)) (PP (IN for) (NP (JJ high-quality) (NNS solutions)))))))))) (. .))
(S (NP (PRP$ Our) (NN improvement)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (DT the) (ADJP (RB recently) (VBN proposed)) (NNP HyperFlowCutter) (NN algorithm)) (PP (IN for) (S (VP (VBG computing) (NP (NP (NNS bipartitions)) (PP (IN of) (NP (JJ unweighted) (NN hypergraphs)))) (PP (IN by) (S (VP (VBG solving) (NP (NP (DT a) (NN sequence)) (PP (IN of) (NP (JJ incremental) (JJ maximum) (NN flow) (NNS problems)))))))))))))) (. .))
(S (SBAR (IN Since) (S (NP (NNS vertices) (CC and) (NNS hyperedges)) (VP (VBP are) (VP (VBN aggregated) (PP (IN during) (NP (DT the) (VBG coarsening) (NN phase))))))) (, ,) (NP (NP (NN refinement) (NN algorithms)) (VP (VBN employed) (PP (IN in) (NP (DT the) (NN multilevel) (NN setting))))) (VP (MD must) (VP (VB be) (ADJP (JJ able) (S (VP (TO to) (VP (VB handle) (NP (DT both) (NP (JJ weighted) (NNS hyperedges)) (CC and) (NP (JJ weighted) (NNS vertices))) (: â€”) (SBAR (RB even) (IN if) (S (NP (DT the) (JJ initial) (NN input) (NN hypergraph)) (VP (VBZ is) (ADJP (JJ unweighted))))))))))) (. .))
(S (NP (PRP We)) (ADVP (VBP therefore)) (VP (VP (JJ enhance) (NP (NNP HyperFlowCutter)) (S (VP (TO to) (VP (VB handle) (NP (JJ weighted) (NNS instances)))))) (CC and) (VP (VB propose) (NP (NP (DT a) (NN technique)) (PP (IN for) (S (VP (VBG computing) (NP (JJ maximum) (NNS flows)) (ADVP (RB directly)) (PP (IN on) (NP (JJ weighted) (NN hypergraphs))))))))) (. .))
(S (NP (PRP We)) (VP (VBP compare) (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (NP (CD two) (NNS configurations)) (PP (IN of) (NP (PRP$ our) (JJ new) (NN algorithm)))))) (PP (IN with) (NP (NP (NNP KaHyPar-MF)) (CC and) (NP (CD seven) (JJ other) (VBG partitioning) (NN algorithms)))) (PP (IN on) (NP (NP (DT a) (JJ comprehensive) (NN benchmark)) (VP (VBN set) (PP (IN with) (NP (NP (NNS instances)) (PP (IN from) (NP (NP (NN application) (NNS areas)) (PP (JJ such) (IN as) (NP (NP (NNP VLSI) (NN design)) (, ,) (NP (JJ scientific) (NN computing)) (, ,) (CC and) (NP (NNP SAT) (NN solving)))))))))))) (. .))
(S (NP (NP (PRP$ Our) (JJ first) (NN configuration)) (, ,) (NP (NNP KaHyPar-HFC)) (, ,)) (VP (VBZ computes) (NP (NP (ADJP (RB slightly) (JJR better)) (NNS solutions)) (PP (IN than) (NP (NNP KaHyPar-MF)))) (S (VP (VBG using) (NP (ADJP (RB significantly) (RBR less)) (JJ running) (NN time))))) (. .))
(S (NP (NP (DT The) (JJ second) (NN configuration)) (, ,) (NP (NNP KaHyPar-HFC*)) (, ,)) (VP (VP (VBZ computes) (NP (NP (NNS solutions)) (PP (IN of) (NP (ADJP (RB significantly) (JJR better)) (NN quality))))) (CC and) (VP (VBZ is) (ADVP (RB still)) (ADJP (ADJP (RB slightly) (RBR faster)) (PP (IN than) (NP (NNP KaHyPar-MF)))))) (. .))
(S (ADVP (RB Furthermore)) (, ,) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NN solution) (NN quality))))) (, ,) (NP (DT both) (NNS configurations)) (ADVP (RB also)) (VP (VBP outperform) (NP (DT all) (JJ other) (VBG competing) (NNS partitioners))) (. .))
