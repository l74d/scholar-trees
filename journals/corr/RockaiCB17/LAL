(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP introduce) (NP (NP (DT the) (NN concept)) (PP (IN of) (NP (NP (DT a) (JJ virtual) (NN machine)) (PP (IN with) (NP (JJ graph-organised) (NN memory))))) (PP (IN as) (NP (NP (DT a) (JJ versatile) (NN backend)) (PP (IN for) (NP (NP (ADJP (DT both) (JJ explicit-state) (CC and) (JJ abstraction-driven)) (NN verification)) (PP (IN of) (NP (NN software))))))))) (. .))
(S (NP (PRP$ Our) (JJ virtual) (NN machine)) (VP (VBZ uses) (NP (DT the) (NNP LLVM) (NNP IR)) (PP (IN as) (NP (NP (PRP$ its) (NN instruction) (VBN set)) (, ,) (VP (VBN enriched) (PP (IN with) (NP (NP (DT a) (JJ small) (NN set)) (PP (IN of) (NP (NNS hypercalls))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (DT the) (JJ provided) (NNS hypercalls)) (VP (VBP are) (ADJP (JJ sufficient) (S (VP (TO to) (VP (VB implement) (NP (NP (DT a) (JJ small) (NN operating) (NN system)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (MD can) (ADVP (RB then)) (VP (VB be) (VP (VBN linked) (PP (IN with) (NP (NNS applications))) (S (VP (TO to) (VP (VB provide) (NP (DT a) (JJ POSIX-compatible) (NN verification) (NN environment))))))))))))))))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP demonstrate) (NP (NP (DT the) (NN viability)) (PP (IN of) (NP (DT the) (NN approach)))) (PP (IN through) (NP (NP (DT a) (NN comparison)) (PP (IN with) (NP (DT a) (ADJP (RBR more) (JJ traditionally-designed)) (NNP LLVM) (NN model) (NN checker)))))) (. .))
