(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP introduce) (NP (NP (DT the) (NN concept)) (PP (IN of) (NP (NP (NP (DT a) (JJ virtual) (NN machine)) (PP (IN with) (NP (NN graph)))) (HYPH -) (NP (NP (VBN organised) (NN memory)) (PP (IN as) (NP (NP (DT a) (JJ versatile) (NN backend)) (PP (IN for) (NP (NP (DT both) (ADJP (JJ explicit) (HYPH -) (ADJP (NP (NN state) (CC and) (NN abstraction)) (HYPH -) (VBN driven))) (NN verification)) (PP (IN of) (NP (NN software)))))))))))) (. .))
(S (NP (PRP$ Our) (JJ virtual) (NN machine)) (VP (VBZ uses) (NP (NP (NP (DT the) (NN LLVM) (NN IR)) (PP (IN as) (NP (PRP$ its) (NN instruction) (NN set)))) (, ,) (VP (VBN enriched) (PP (IN with) (NP (NP (DT a) (JJ small) (NN set)) (PP (IN of) (NP (NNS hypercalls)))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (DT the) (ADJP (VBN provided)) (NNS hypercalls)) (VP (VBP are) (ADJP (JJ sufficient) (S (VP (TO to) (VP (VB implement) (NP (NP (DT a) (JJ small) (NN operating) (NN system)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (MD can) (ADVP (RB then)) (VP (VB be) (VP (VBN linked) (PP (IN with) (NP (NNS applications))) (S (VP (TO to) (VP (VB provide) (NP (ADJP (NP (DT a) (NN POSIX)) (HYPH -) (JJ compatible)) (NN verification) (NN environment))))))))))))))))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP demonstrate) (NP (NP (DT the) (NN viability)) (PP (IN of) (NP (DT the) (NN approach)))) (PP (IN through) (NP (NP (DT a) (NN comparison)) (PP (IN with) (NP (DT a) (ADJP (ADVP (RBR more) (ADVP (RB traditionally))) (HYPH -) (VBN designed)) (NML (NN LLVM) (NN model)) (NN checker)))))) (. .))
