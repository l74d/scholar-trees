(NP (NP (NN Context)) (: :) (S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (NP (NP (DT the) (NN concept)) (PP (IN of) (NP (JJ open) (NN programming) (NN language) (NNS interpreters)))) (CC and) (NP (NP (DT the) (NN implementation)) (PP (IN of) (NP (NP (NP (DT a) (JJ framework-level) (NN metaobject) (NN protocol)) (PRN (-LRB- -LRB-) (NP (NNP MOP)) (-RRB- -RRB-))) (SBAR (S (VP (TO to) (VP (VB support) (NP (PRP them)))))))))))) (. .))
(NP (NP (NN Inquiry)) (: :) (S (NP (PRP We)) (VP (VBP address) (NP (NP (DT the) (NN problem)) (PP (IN of) (NP (JJ dynamic) (JJ interpreter) (NN adaptation)))) (S (VP (VP (TO to) (VP (VB tailor) (NP (NP (NP (DT the) (NN interpreter) (POS 's)) (NN behavior)) (PP (IN on) (NP (NP (DT the) (NN task)) (SBAR (S (VP (TO to) (VP (VB be) (VP (VBN solved))))))))))) (CC and) (VP (TO to) (VP (VB introduce) (NP (JJ new) (NNS features)) (S (VP (TO to) (VP (VB fulfill) (NP (JJ unforeseen) (NNS requirements))))))))))) (. .))
(S (NP (JJ Many) (NNS languages)) (VP (VBP provide) (NP (NP (DT a) (NNP MOP)) (SBAR (WHNP (WDT that)) (S (PP (TO to) (NP (DT some) (NN degree))) (VP (NNS supports) (NP (NN reflection))))))) (. .))
(S (ADVP (RB However)) (, ,) (S (NP (NNP MOPs)) (VP (VBP are) (ADVP (RB typically)) (ADJP (JJ language-specific)))) (, ,) (S (NP (PRP$ their) (JJ reflective) (NN functionality)) (VP (VBZ is) (ADVP (RB often)) (ADJP (VBN restricted)))) (, ,) (CC and) (S (NP (DT the) (NN adaptation) (CC and) (NN application) (NN logic)) (VP (VBP are) (ADVP (RB often)) (VP (ADJP (JJ mixed)) (SBAR (WHNP (WDT which)) (S (VP (VBZ hardens) (NP (NP (DT the) (NN understanding) (CC and) (NN maintenance)) (PP (IN of) (NP (DT the) (NN source) (NN code)))))))))) (. .))
(S (NP (PRP$ Our) (NN system)) (VP (VBZ overcomes) (NP (DT these) (NNS limitations))) (. .))
(NP (NP (NN Approach)) (: :) (S (NP (PRP We)) (VP (VBD designed) (CC and) (VBD implemented) (NP (NP (DT a) (NN system)) (SBAR (S (VP (TO to) (VP (VB support) (NP (JJ open) (NN programming) (NN language) (NNS interpreters))))))))) (. .))
(S (NP (DT The) (NN prototype) (NN implementation)) (VP (VBZ is) (VP (VBN integrated) (PP (IN in) (NP (DT the) (NNP Neverlang) (NN framework))))) (. .))
(S (NP (DT The) (NN system)) (VP (VBZ exposes) (NP (NP (NP (DT the) (NN structure)) (, ,) (NP (NN behavior)) (CC and) (NP (DT the) (JJ runtime) (NN state))) (PP (IN of) (NP (DT any) (JJ Neverlang-based) (NN interpreter)))) (PP (IN with) (NP (DT the) (NN ability) (S (VP (TO to) (VP (VB modify) (NP (PRP it)))))))) (. .))
(NP (NP (NN Knowledge)) (: :) (S (NP (PRP$ Our) (NN system)) (VP (VBZ provides) (NP (NP (DT a) (JJ complete) (NN control)) (PP (IN over) (NP (NP (NN interpreter) (POS 's)) (NX (NX (NN structure)) (, ,) (NX (NN behavior)) (CC and) (NP (PRP$ its) (NN runtime) (NN state)))))))) (. .))
(S (NP (DT The) (NN approach)) (VP (VBZ is) (ADJP (JJ applicable) (PP (TO to) (NP (DT every) (JJ Neverlang-based) (NN interpreter))))) (. .))
(S (NP (NNP Adaptation) (NN code)) (VP (MD can) (ADVP (RB potentially)) (VP (VB be) (VP (VBN reused) (PP (IN across) (NP (JJ different) (NN language) (NNS implementations)))))) (. .))
(NP (NP (VBG Grounding)) (: :) (S (S (VP (VBG Having) (NP (DT a) (JJ prototype) (NN implementation)))) (NP (PRP we)) (VP (VBD focused) (PP (IN on) (NP (NN feasibility) (NN evaluation))))) (. .))
(S (NP (DT The) (NN paper)) (VP (VBZ shows) (SBAR (IN that) (S (NP (PRP$ our) (NN approach)) (VP (ADVP (RB well)) (VBZ addresses) (NP (NP (NNS problems)) (VP (ADVP (RB commonly)) (VBN found) (PP (IN in) (NP (DT the) (NN research) (NN literature))))))))) (. .))
(S (NP (PRP We)) (VP (VBP have) (NP (NP (NP (DT a) (JJ demonstrative) (NN video)) (CC and) (NP (VBZ examples))) (SBAR (WHNP (DT that)) (S (VP (VBP illustrate) (NP (NP (PRP$ our) (NN approach)) (PP (IN on) (NP (NP (JJ dynamic) (NN software) (NN adaptation)) (, ,) (NP (JJ aspect-oriented) (NN programming)) (, ,) (NP (VBG debugging)) (CC and) (NP (JJ context-aware) (NNS interpreters)))))))))) (. .))
(NP (NP (NN Importance)) (: :) (S (PP (TO To) (NP (PRP$ our) (NN knowledge))) (, ,) (NP (PRP$ our) (NN paper)) (VP (VBZ presents) (NP (NP (DT the) (JJ first) (JJ reflective) (NN approach)) (VP (VBG targeting) (NP (NP (DT a) (JJ general) (NN framework)) (PP (IN for) (NP (NN language) (NN development)))))))) (. .))
(S (NP (PRP$ Our) (NN system)) (VP (VBZ provides) (NP (NP (JJ full) (JJ reflective) (NN support)) (PP (IN for) (ADJP (JJ free)))) (PP (TO to) (NP (DT any) (JJ Neverlang-based) (NN interpreter)))) (. .))
(S (NP (PRP We)) (VP (VBP are) (RB not) (ADJP (JJ aware) (PP (IN of) (NP (NP (DT any) (JJ prior) (NN application)) (PP (IN of) (NP (JJ open) (NNS implementations))) (PP (TO to) (NP (VBG programming) (NN language) (NNS interpreters))) (PP (IN in) (NP (NP (DT the) (NN sense)) (VP (VBD defined) (PP (IN in) (NP (DT this) (NN paper)))))))))) (. .))
(S (PP (RB Rather) (IN than) (S (VP (VBG substituting) (NP (JJ other) (NNS approaches))))) (, ,) (NP (PRP we)) (VP (VBP believe) (SBAR (S (NP (PRP$ our) (NN system)) (VP (MD can) (VP (VB be) (VP (VBN used) (PP (IN as) (NP (DT a) (JJ complementary) (NN technique))) (PP (IN in) (NP (NP (NNS situations)) (SBAR (WHADVP (WRB where)) (S (NP (JJ other) (NNS approaches)) (VP (VBP present) (NP (JJ serious) (NNS limitations))))))))))))) (. .))
