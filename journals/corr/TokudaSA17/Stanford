(S (NP (PRP We)) (VP (VBP have) (VP (VBN implemented) (NP (NP (DT an) (NN optimization)) (SBAR (WHNP (WDT that)) (S (VP (VBZ specializes) (SBAR (S (NP (NML (NN type) (HYPH -) (JJ generic)) (NN array)) (VP (VBZ accesses) (PP (IN after) (S (VP (VBG inlining) (PP (IN of) (NP (NP (JJ polymorphic) (NNS functions)) (PP (IN in) (NP (DT the) (ADJP (JJ native) (HYPH -) (NN code)) (NN OCaml) (NN compiler))))))))))))))))) (. .))
(S (NP (NP (JJ Polymorphic) (NN array) (NNS operations)) (PRN (-LRB- -LRB-) (S (VP (VB read) (CC and) (VB write))) (-RRB- -RRB-)) (PP (IN in) (NP (NN OCaml)))) (VP (VP (VBP require) (NP (NML (NN runtime) (NN type)) (NN dispatch)) (PP (IN because) (PP (IN of) (NP (NP (ADJP (FW ad) (FW hoc)) (NN memory) (NNS representations)) (PP (IN of) (NP (NN integer))))))) (CC and) (VP (VB float) (NP (NNS arrays)))) (. .))
(S (NP (PRP It)) (VP (MD can) (RB not) (VP (VB be) (VP (VBN removed) (ADVP (RB even)) (PP (IN after) (S (VP (VBG being) (VP (VBN monomorphized) (PP (IN by) (S (VP (VBG inlining) (SBAR (IN because) (S (NP (DT the) (JJ intermediate) (NN language)) (VP (VBZ is) (ADJP (RB mostly) (JJ untyped))))))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB therefore)) (VP (VBD extended) (NP (PRP it)) (PP (IN with) (NP (JJ explicit) (NN type) (NN application))) (PP (IN like) (NP (NP (NNP System) (NNP F)) (SBAR (-LRB- -LRB-) (IN while) (S (VP (VBG keeping) (NP (JJ implicit) (NN type) (NN abstraction)) (PP (IN by) (NP (NP (NNS means)) (PP (IN of) (NP (NP (JJ unique) (NNS identifiers)) (PP (IN for) (NP (NN type) (NNS variables))))))))) (-RRB- -RRB-))))) (. .))
(S (NP (PRP$ Our) (NN optimization)) (VP (VBZ has) (VP (VBN achieved) (PRT (RP up)) (PP (IN to) (NP (NP (NML (CD 21) (NN %)) (NN speed) (HYPH -) (NN up)) (PP (IN of) (NP (JJ numerical) (NNS programs))))))) (. .))
