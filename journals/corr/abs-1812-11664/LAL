(S (NP (DT The) (NN language) (NNP Eff)) (VP (VBZ is) (NP (NP (DT an) (JJ OCaml-like) (NN language)) (VP (NN serving) (PP (IN as) (NP (NP (DT a) (NN prototype) (NN implementation)) (PP (IN of) (NP (NP (DT the) (NN theory)) (PP (IN of) (NP (JJ algebraic) (NNS effects)))))))) (, ,) (VP (VBN intended) (PP (IN for) (NP (NP (NN experimentation)) (PP (IN with) (NP (JJ algebraic) (NNS effects))) (PP (IN on) (NP (DT a) (JJ large) (NN scale)))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT the) (NN embedding)) (PP (IN of) (NP (NNP Eff))) (PP (IN into) (NP (NNP OCaml)))) (, ,) (S (VP (VBG using) (NP (NP (NP (DT the) (NN library)) (PP (IN of) (NP (JJ delimited) (NNS continuations)))) (CC or) (NP (DT the) (NN multicore) (NNP OCaml) (NN branch)))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (NP (NP (DT the) (NN correctness)) (PP (IN of) (NP (DT the) (VBG embedding)))) (ADVP (RB denotationally)) (, ,) (S (VP (VBG relying) (PP (IN on) (NP (NP (DT the) (JJ tagless-final-style) (JJ interpreter-based) (JJ denotational) (NNS semantics)) (, ,) (PP (VBG including) (NP (NP (DT the) (NN novel) (, ,) (JJ direct) (JJ denotational) (NNS semantics)) (PP (IN of) (NP (JJ multi-prompt) (VBN delimited) (NN control)))))))))) (. .))
(S (NP (DT The) (NN embedding)) (VP (VP (VBZ is) (ADJP (JJ systematic) (, ,) (JJ lightweight) (, ,) (JJ performant))) (CC and) (VP (NNS supports) (NP (RB even) (VBP higher-order) (, ,) (NNP 'dynamic) (POS â€º) (NNS effects)) (PP (IN with) (NP (PRP$ their) (NN polymorphism))))) (. .))
(S (NP (NNP OCaml)) (ADVP (RB thus)) (VP (MD may) (VP (VB be) (VP (VBN regarded) (PP (IN as) (NP (NP (DT another) (NN implementation)) (PP (IN of) (NP (NNP Eff))))) (, ,) (S (VP (VBG broadening) (NP (NP (DT the) (NN scope) (CC and) (NN appeal)) (PP (IN of) (NP (DT that) (NN language))))))))) (. .))
