(S (NP (NNP Array) (NN programming) (NNS languages)) (VP (VBP allow) (PP (IN for) (NP (NP (ADJP (NN concise) (CC and) (JJ generic)) (NNS formulations)) (PP (IN of) (NP (JJ numerical) (NN algorithms))))) (, ,) (S (ADVP (RB thereby)) (VP (VBG providing) (NP (NP (DT a) (JJ huge) (NN potential)) (PP (IN for) (NP (NP (NN program) (NN optimisation)) (PP (JJ such) (IN as) (NP (NN fusion) (, ,) (NN parallelisation) (, ,) (FW etc))))))))) (. .))
(S (NP (NP (CD One)) (PP (IN of) (NP (NP (DT the) (NNS restrictions)) (SBAR (WHNP (IN that)) (S (NP (DT these) (NNS languages)) (ADVP (RB typically)) (VP (VBP have))))))) (VP (VBZ is) (SBAR (IN that) (S (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NNS elements))) (PP (IN in) (NP (DT every) (NN array)))) (VP (VBZ has) (S (VP (TO to) (VP (VB be) (ADJP (JJ finite))))))))) (. .))
(S (NP (DT This)) (VP (VBZ means) (SBAR (IN that) (S (S (VP (VBG implementing) (NP (VBG streaming) (NN algorithms)) (PP (IN in) (NP (JJ such) (NNS languages))))) (VP (VBZ requires) (NP (NP (JJ new) (NNS types)) (PP (IN of) (NP (NN data) (NNS structures))) (, ,) (PP (IN with) (NP (NP (NNS operations)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (RB not) (ADJP (RB immediately) (JJ compatible) (PP (IN with) (NP (VBG existing) (NX (NX (JJ array) (NNS operations)) (CC or) (NX (NN compiler) (NNS optimisations)))))))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (NP (DT a) (NN design)) (PP (IN for) (NP (NP (DT a) (JJ functional) (NN language)) (SBAR (WHNP (WDT that)) (S (VP (ADVP (RB natively)) (VBZ supports) (NP (JJ infinite) (NNS arrays))))))))) (. .))
(S (NP (PRP We)) (VP (VBP use) (NP (JJ ordinal) (NNS numbers)) (S (VP (TO to) (VP (VB introduce) (NP (NP (DT the) (NN notion)) (PP (IN of) (NP (NN infinity))) (PP (IN in) (NP (NNS shapes) (CC and) (NNS indices)))))))) (. .))
(S (PP (IN By) (S (VP (VBG doing) (ADVP (RB so))))) (, ,) (NP (PRP we)) (VP (VB obtain) (NP (NP (DT a) (NN calculus)) (SBAR (WHNP (WDT that)) (S (VP (VP (ADVP (RB naturally)) (VBZ extends) (NP (VBG existing) (NN array) (NN calculi))) (CC and) (VP (PRN (, ,) (PP (IN at) (NP (DT the) (JJ same) (NN time))) (, ,)) (VBZ allows) (PP (IN for) (NP (NP (JJ recursive) (NNS specifications)) (SBAR (IN as) (S (NP (PRP they)) (VP (VBP are) (VP (VBN found) (PP (IN in) (NP (ADJP (JJ stream-) (CC and) (JJ list-based)) (NNS settings))))))))))))))) (. .))
(S (ADVP (RB Furthermore)) (, ,) (NP (NP (DT the) (JJ main) (NN language) (NN construct)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB be) (VP (VBN thought) (PP (IN of)) (PP (IN as) (NP (DT an) (ADJP ($ $) (JJ n) ($ $) (JJ -fold)) (NNS cons) (VBP operator))))))))) (VP (VBZ gives) (NP (NN rise)) (PP (TO to) (S (VP (VBG expressing) (NP (NP (NP (JJ transfinite) (NN recursion)) (PP (IN in) (NP (NNS data)))) (, ,) (NP (NP (NN something)) (SBAR (WHNP (WDT that)) (S (NP (VBZ lists) (CC or) (NNS streams)) (ADVP (RB usually)) (VP (VBP do) (RB not) (VP (VB support))))))))))) (. .))
(S (NP (DT This)) (VP (VBZ makes) (S (NP (NP (PRP it))) (ADJP (JJ possible)) (S (VP (TO to) (VP (VB treat) (NP (DT the) (JJ proposed) (NN calculus)) (PP (IN as) (NP (NP (DT a) (JJ unifying) (NN theory)) (PP (IN of) (NP (NNS arrays) (, ,) (NNS lists) (CC and) (NNS streams)))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP give) (NP (NP (DT an) (JJ operational) (NNS semantics)) (PP (IN of) (NP (DT the) (VBN proposed) (NN language))))) (, ,) (VP (JJ discuss) (NP (NP (NN design) (NNS choices)) (SBAR (WHNP (IN that)) (S (NP (PRP we)) (VP (VBP have) (VP (VBN made))))))) (, ,) (CC and) (VP (VB demonstrate) (NP (PRP$ its) (NN expressibility)) (PP (IN with) (NP (JJ several) (NNS examples))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VP (VBP demonstrate) (SBAR (IN that) (S (NP (DT the) (VBN proposed) (NN formalism)) (VP (VBZ preserves) (NP (NP (DT a) (NN number)) (PP (IN of) (NP (NP (JJ well-known) (JJ universal) (NNS equalities)) (PP (IN from) (NP (NN array/list/stream) (NNS theories)))))))))) (, ,) (CC and) (VP (VB discuss) (NP (JJ implementation-related) (NNS challenges)))) (. .))
