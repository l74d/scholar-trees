(S (NP (PRP We)) (VP (VBP study) (NP (NP (DT the) (NN synthesis) (NN problem)) (PP (IN for) (NP (NP (NNS systems)) (PP (IN with) (NP (NP (DT a) (JJ parameterized) (NN number)) (PP (IN of) (NP (NNS processes))))))))) (. .))
(S (PP (IN As) (PP (IN in) (NP (NP (DT the) (JJ classical) (NN case)) (ADJP (JJ due) (PP (TO to) (NP (NNP Church))))))) (, ,) (NP (DT the) (NN system)) (VP (VBZ selects) (NP (NNS actions)) (PP (VBG depending) (PP (IN on) (NP (NP (DT the) (NN program)) (VP (NN run) (ADVP (RB so) (RB far)))))) (, ,) (PP (IN with) (NP (NP (DT the) (NN aim)) (PP (IN of) (S (VP (VBG fulfilling) (NP (DT a) (VBN given) (NN specification)))))))) (. .))
(S (NP (DT The) (NN difficulty)) (VP (VBZ is) (SBAR (IN that) (, ,) (S (PP (IN at) (NP (DT the) (JJ same) (NN time))) (, ,) (NP (DT the) (NN environment)) (VP (VBZ executes) (NP (NP (NNS actions)) (SBAR (WHNP (IN that)) (S (NP (DT the) (NN system)) (VP (MD can) (RB not) (VP (VB control)))))))))) (. .))
(S (PP (IN In) (NP (NP (NN contrast)) (PP (TO to) (NP (NP (DT the) (NN case)) (PP (IN of) (NP (VBN fixed) (, ,) (JJ finite) (NNS alphabets))))))) (, ,) (ADVP (RB here)) (NP (PRP we)) (VP (VBP consider) (NP (NP (DT the) (NN case)) (PP (IN of) (NP (JJ parameterized) (NNS alphabets))))) (. .))
(S (NP (DT An) (NN alphabet)) (VP (VBZ reflects) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NP (NNS processes)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (JJ static) (CC but) (JJ unknown))))))))) (. .))
(S (NP (DT The) (NN synthesis) (NN problem)) (ADVP (RB then)) (VP (VBZ asks) (SBAR (IN whether) (S (NP (EX there)) (VP (VBZ is) (NP (NP (DT a) (JJ finite) (NN number)) (PP (IN of) (NP (NP (NNS processes)) (SBAR (WHPP (IN for) (WHNP (WDT which))) (S (NP (DT the) (NN system)) (VP (MD can) (VP (VB satisfy) (NP (DT the) (NN specification))))))))))))) (. .))
(S (NP (DT This) (NN variant)) (VP (VBZ is) (ADVP (RB already)) (ADJP (JJ undecidable) (PP (IN for) (NP (ADJP (RB very) (JJ limited)) (NNS logics))))) (. .))
(S (ADVP (RB Therefore)) (, ,) (NP (PRP we)) (VP (VBP consider) (NP (NP (DT a) (NN first-order) (NN logic)) (PP (IN without) (NP (NP (DT the) (NN order)) (PP (IN on) (NP (NN word) (NNS positions))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (PP (ADVP (RB even)) (IN in) (NP (DT this) (JJ restricted) (NN case))) (NP (NN synthesis)) (VP (VBZ is) (ADJP (JJ undecidable)) (SBAR (IN if) (S (NP (DT both) (NP (DT the) (NN system)) (CC and) (NP (DT the) (NN environment))) (VP (VBP have) (NP (NP (NN access)) (PP (TO to) (NP (DT all) (NNS processes))))))))))) (. .))
(S (PP (IN On) (NP (DT the) (JJ other) (NN hand))) (, ,) (NP (PRP we)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT the) (NN problem)) (VP (VBZ is) (ADJP (JJ decidable)) (SBAR (IN if) (S (NP (DT the) (NN environment)) (ADVP (RB only)) (VP (VBZ has) (NP (NP (NN access)) (PP (TO to) (NP (NP (DT a) (JJ bounded) (NN number)) (PP (IN of) (NP (NNS processes))))))))))))) (. .))
(S (PP (IN In) (NP (DT that) (NN case))) (, ,) (NP (EX there)) (VP (VBZ is) (ADVP (RB even)) (NP (NP (DT a) (NN cutoff)) (VP (NN meaning) (SBAR (IN that) (S (NP (NP (PRP it))) (VP (VBZ is) (ADJP (JJ enough)) (S (VP (TO to) (VP (VB examine) (NP (NP (DT a) (JJ bounded) (NN number)) (PP (IN of) (NP (NN process) (NNS architectures))))))) (S (VP (TO to) (VP (VB solve) (NP (DT the) (NN synthesis) (NN problem))))))))))) (. .))
