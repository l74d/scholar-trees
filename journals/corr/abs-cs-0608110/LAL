(S (NP (NP (DT The) (NN refinement) (NN calculus)) (PP (IN for) (NP (JJ logic) (NNS programs)))) (VP (VBZ is) (NP (NP (DT a) (NN framework)) (PP (IN for) (S (VP (VBG deriving) (NP (JJ logic) (NNS programs)) (PP (IN from) (NP (NNS specifications)))))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (NP (DT a) (JJ wide-spectrum) (NN language)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB express) (NP (DT both) (NNS specifications) (CC and) (NN code))))))) (, ,) (CC and) (NP (NP (DT a) (JJ refinement) (NN relation)) (SBAR (WHNP (WDT that)) (S (VP (NNS models) (NP (NP (DT the) (NN notion)) (PP (IN of) (NP (JJ correct) (NN implementation)))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP extend) (CC and) (VBP generalise) (NP (NP (JJR earlier) (NN work)) (PP (IN on) (NP (JJ contextual) (NN refinement))))) (. .))
(S (NP (JJ Contextual) (NN refinement)) (VP (VBZ simplifies) (NP (DT the) (NN refinement) (NN process)) (PP (IN by) (S (VP (ADVP (RB abstractly)) (VBG capturing) (NP (NP (DT the) (NN context)) (PP (IN of) (NP (NP (DT a) (NN subcomponent)) (PP (IN of) (NP (DT a) (NN program))) (, ,) (SBAR (WHNP (WDT which)) (S (ADVP (RB typically)) (VP (VBZ includes) (NP (NP (NN information)) (PP (IN about) (NP (NP (DT the) (NNS values)) (PP (IN of) (NP (DT the) (JJ free) (NNS variables)))))))))))))))) (. .))
(S (NP (DT This) (NN paper)) (ADVP (RB also)) (VP (VBZ extends) (CC and) (VBZ generalises) (NP (JJ module) (NN refinement))) (. .))
(S (S (NP (DT A) (NN module)) (VP (VBZ is) (NP (NP (DT a) (NN collection)) (PP (IN of) (NP (NP (NNS procedures)) (SBAR (WHNP (WDT that)) (S (VP (VBP operate) (PP (IN on) (NP (DT a) (JJ common) (NN data) (NN type))))))))))) (: ;) (S (S (NP (NP (CC module) (NN refinement)) (PP (IN between) (NP (NP (DT a) (NN specification) (NN module) (NNP A)) (CC and) (NP (DT an) (NN implementation) (NN module) (NNP C))))) (VP (VBZ allows) (S (NP (NP (VBZ calls)) (PP (TO to) (NP (NP (DT the) (NNS procedures)) (PP (IN of) (NP (DT A)))))) (VP (TO to) (VP (VB be) (ADVP (RB systematically)) (VP (VBN replaced) (PP (IN with) (NP (NP (NNS calls)) (PP (TO to) (NP (NP (DT the) (JJ corresponding) (NNS procedures)) (PP (IN of)))))))))))) (NNP C.) (PP (VBD Based) (PP (IN on) (NP (NP (DT the) (NNS conditions)) (PP (IN for) (NP (NN module) (NN refinement)))))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT a) (NN method)) (PP (IN for) (S (VP (VBG calculating) (NP (DT an) (NN implementation) (NN module)) (PP (IN from) (NP (DT a) (NN specification) (NN module))))))))) (. .))
(S (S (NP (NP (UCP (DT Both) (JJ contextual) (CC and) (JJ module)) (NN refinement)) (PP (IN within) (NP (DT the) (NN refinement) (NN calculus)))) (VP (VBP have) (VP (VBN been) (VP (VBN generalised) (PP (IN from) (NP (JJR earlier) (NN work))))))) (CC and) (S (NP (DT the) (NNS results)) (VP (VBP are) (VP (VBN presented) (PP (IN in) (NP (DT a) (JJ unified) (NN framework)))))) (. .))
