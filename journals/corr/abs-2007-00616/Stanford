(S (NP (NN Ability) (S (VP (TO to) (VP (VB use) (NP (NP (NNS definitions)) (VP (VBG occurring) (PP (IN in) (NP (DT the) (NN code))) (ADVP (RB directly)) (PP (IN in) (NP (JJ equational) (NN reasoning))))))))) (VP (VBZ is) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (JJ key) (NNS strengths)) (PP (IN of) (NP (JJ functional) (NN programming))))))) (. .))
(S (NP (DT This)) (VP (VBZ is) (ADJP (JJ impossible) (PP (IN in) (NP (NP (DT the) (NN case)) (PP (IN of) (NP (NNP Haskell) (NML (NN type) (NN class)) (NNS methods)))))) (SBAR (IN unless) (S (NP (DT a) (JJ particular) (NN instance) (NN type)) (VP (VBZ is) (VP (VBN specified))))) (, ,) (SBAR (IN since) (S (NP (NN class) (NNS methods)) (VP (MD can) (VP (VB be) (VP (VBN defined) (ADVP (RB differently)) (PP (IN for) (NP (JJ different) (NNS instances))))))))) (. .))
(S (S (VP (TO To) (VP (VB allow) (NP (JJ uniform) (NN reasoning)) (PP (IN for) (NP (NP (DT all) (NNS instances)) (, ,) (NP (NP (JJ many) (NN type) (NNS classes)) (PP (IN in) (NP (DT the) (NNP Haskell) (NN library))))))))) (VP (VB come) (PRT (RP along)) (PP (IN with) (NP (NP (NP (NNS laws)) (-LRB- -LRB-) (NP (NNS axioms)) (-RRB- -RRB-)) (, ,) (VP (VBN specified) (PP (IN in) (NP (NNS comments)))))) (, ,) (SBAR (IN that) (S (NP (DT all) (NNS instances)) (VP (VBP are) (VP (VBN expected) (S (VP (TO to) (VP (VB follow) (SBAR (-LRB- -LRB-) (IN albeit) (S (NP (NNP Haskell)) (VP (VBZ is) (ADJP (JJ unable) (S (VP (TO to) (VP (VB force) (NP (PRP it)))))))) (-RRB- -RRB-)))))))))) (. .))
(S (S (PP (IN For) (NP (NP (DT the) (NN type) (NNS classes)) (VP (VBN introduced) (PP (IN in) (NP (DT the) (NNP Monad) (NNP Transformer) (NNP Library))) (PRN (-LRB- -LRB-) (NP (NNP MTL)) (-RRB- -RRB-))))) (, ,) (NP (JJ such) (NNS laws)) (VP (VBP have) (RB not) (VP (VBN been) (VP (VBN specified))))) (: ;) (S (ADVP (RB nevertheless)) (, ,) (NP (NP (DT some) (NNS sets)) (PP (IN of) (NP (NNS axioms)))) (VP (VBP have) (VP (VBN occurred) (PP (IN in) (NP (NP (DT the) (NN literature)) (CC and) (NP (DT the) (NNP Haskell) (NN mailing) (NNS lists))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VP (VBZ investigates) (NP (NP (NNS sets)) (PP (IN of) (NP (NP (NNS laws) (JJ usable)) (PP (IN for) (NP (JJ equational) (NN reasoning)))))) (PP (IN about) (NP (NML (NML (NNS methods)) (PP (IN of) (NP (DT the) (NN type) (NNS classes)))) (NNP MonadReader) (CC and) (NNP MonadWriter)))) (CC and) (ADVP (RB also)) (VP (VBZ reviews) (NP (ADJP (JJ analogous) (JJR earlier)) (NNS proposals)) (PP (IN for) (NP (NP (DT the) (NNS classes)) (NP (NNP MonadError) (CC and) (NNP MonadState)))))) (. .))
(S (PP (IN For) (NP (DT both) (NNP MonadReader) (CC and) (NNP MonadWriter))) (, ,) (NP (NP (DT an) (NN equivalence) (NN result)) (PP (IN of) (NP (NP (CD two) (JJ alternative) (NNS axiomatizations)) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NP (JJ different) (NNS sets)) (PP (IN of) (NP (NNS operations)))))))))) (VP (VBZ is) (VP (VBN established))) (. .))
(S (PP (IN As) (NP (DT a) (NN sideline))) (, ,) (NP (NP (NNS patterns)) (PP (IN in) (NP (NP (DT the) (NN choice)) (PP (IN of) (NP (NP (NNS methods)) (PP (IN of) (NP (JJ different) (NNS classes)))))))) (VP (VBP are) (VP (VBN noticed) (SBAR (WHNP (WDT which)) (S (VP (MD may) (VP (VB inspire) (NP (JJ new) (NNS developments)) (PP (IN in) (NP (NN MTL))))))))) (. .))
