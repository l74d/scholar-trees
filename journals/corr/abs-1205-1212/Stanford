(S (NP (DT This) (NN paper)) (VP (VBZ introduces) (NP (DT a) (JJ new) (JJ public) (NN key) (NN cryptosystem)) (PP (VBN based) (PP (IN on) (NP (NP (CD two) (JJ hard) (NNS problems)) (: :) (NP (NP (NP (NP (DT the) (NML (NN cube) (NN root)) (NN extraction) (NN modulo)) (NP (DT a) (JJ composite) (NN moduli))) (-LRB- -LRB-) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADJP (JJ equivalent) (PP (IN to) (NP (NP (DT the) (NN factorisation)) (PP (IN of) (NP (DT the) (NN moduli))))))))) (-RRB- -RRB-)) (CC and) (NP (DT the) (JJ discrete) (NN logarithm) (NN problem))))))) (. .))
(S (NP (DT These) (CD two) (JJ hard) (NNS problems)) (VP (VBP are) (VP (VBN combined) (PP (IN during) (NP (DT the) (JJ key) (NML (NN generation) (, ,) (NN encryption) (CC and) (NN decryption)) (NNS phases))))) (. .))
(S (PP (IN By) (S (VP (VBG combining) (NP (NP (DT the) (NN IFP)) (CC and) (NP (DT the) (NN DLP)))))) (NP (PRP we)) (VP (VBP introduce) (NP (DT a) (ADJP (JJ secure) (CC and) (JJ efficient)) (JJ public) (NN key) (NN cryptosystem))) (. .))
(S (S (VP (TO To) (VP (VB break) (NP (DT the) (NN scheme))))) (, ,) (NP (DT an) (NN adversary)) (VP (MD may) (VP (VB solve) (NP (NP (DT the) (NN IFP)) (CC and) (NP (DT the) (NN DLP))) (ADVP (RB separately)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB computationally)) (ADJP (JJ infeasible))))))) (. .))
(S (NP (DT The) (JJ key) (NN generation)) (VP (VBZ is) (NP (NP (DT a) (JJ simple) (NN operation)) (PP (VBN based) (PP (IN on) (NP (NP (DT the) (JJ discrete) (NN logarithm) (NN modulo)) (NP (DT a) (JJ composite) (NN moduli))))))) (. .))
(S (NP (DT The) (NN encryption) (NN phase)) (VP (VBZ is) (VP (VBN based) (PP (DT both) (IN on) (NP (NP (DT the) (NML (NN cube) (NN root)) (NN computation)) (CC and) (NP (DT the) (NN DLP)))))) (. .))
(S (NP (DT These) (NNS operations)) (VP (VBP are) (ADVP (RB computationally)) (ADJP (JJ efficient))) (. .))
