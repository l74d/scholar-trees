(S (NP (JJ Many) (NN graph) (NNS problems)) (VP (MD can) (VP (VB be) (VP (VBN solved) (S (VP (VBG using) (NP (NP (JJ ordered) (JJ parallel) (NN graph) (NN algorithms)) (SBAR (WHNP (IN that)) (S (VP (VBP achieve) (NP (NP (JJ significant) (NN speedup)) (PP (IN over) (NP (PRP$ their) (JJ unordered) (NNS counterparts)))) (PP (IN by) (S (VP (VBG reducing) (NP (JJ redundant) (NN work)))))))))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ introduces) (NP (NP (DT a) (JJ new) (JJ priority-based) (NN extension)) (PP (TO to) (NP (NP (NNP GraphIt)) (, ,) (NP (NP (DT a) (JJ domain-specific) (NN language)) (PP (IN for) (S (VP (VBG writing) (NP (NN graph) (NNS applications)))))) (, ,))) (SBAR (S (VP (TO to) (VP (VB simplify) (S (VP (VBG writing) (NP (NN high-performance) (NN parallel) (VBD ordered) (JJ graph) (NN algorithms)))))))))) (. .))
(S (NP (DT The) (NN extension)) (VP (VBZ enables) (S (NP (NNS vertices)) (VP (TO to) (VP (VB be) (VP (VBN processed) (PP (IN in) (NP (DT a) (JJ dynamic) (NN order))))))) (SBAR (IN while) (S (VP (VBG hiding) (NP (JJ low-level) (NN implementation) (NNS details)) (PP (IN from) (NP (DT the) (NN user))))))) (. .))
(S (NP (PRP We)) (VP (VBP extend) (NP (DT the) (NN compiler)) (PP (IN with) (NP (JJ new) (NX (NX (NN program) (NNS analyses)) (, ,) (NX (NNS transformations)) (, ,) (CC and) (NX (NN code) (NN generation))))) (S (VP (TO to) (VP (VB produce) (NP (NP (JJ fast) (NNS implementations)) (PP (IN of) (NP (JJ ordered) (JJ parallel) (NN graph) (NN algorithms)))))))) (. .))
