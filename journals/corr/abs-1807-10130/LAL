(S (NP (DT Any) (JJ non-trivial) (NN concurrent) (NN system)) (VP (NNS warrants) (NP (NN synchronisation)) (, ,) (ADVP (RB regardless) (PP (IN of) (NP (DT the) (NN concurrency) (NN model))))) (. .))
(S (NP (JJ Actor-based) (NN concurrency)) (VP (VBZ serialises) (NP (NP (DT all) (NNS computations)) (PP (IN in) (NP (DT an) (NN actor)))) (PP (IN through) (NP (JJ asynchronous) (NN message) (NN passing)))) (. .))
(S (PP (IN In) (NP (NN contrast))) (, ,) (NP (JJ lock-based) (NN concurrency)) (VP (VBZ serialises) (NP (DT some) (NNS computations)) (PP (IN by) (S (VP (VBG following) (NP (NP (DT a) (NN lock) (: â€”) (JJ unlock) (NN protocol)) (PP (IN for) (S (VP (VBG accessing) (NP (JJ certain) (NNS data)))))))))) (. .))
(S (NP (DT Both) (NNS systems)) (VP (VBP require) (NP (NP (JJ sound) (VBG reasoning)) (PP (IN about) (NP (NNS pointers) (CC and) (VBG aliasing)))) (S (VP (TO to) (VP (VB exclude) (NP (NNS data-races)))))) (. .))
(SINV (SBAR (IN If) (S (NP (JJ actor) (NN isolation)) (VP (VBZ is) (VP (VBN broken))))) (, ,) (ADVP (RB so)) (VP (VBZ is)) (NP (DT the) (JJ single-thread-of-control) (NN abstraction)) (. .))
(S (ADVP (RB Similarly) (PP (IN for) (NP (NNS locks)))) (, ,) (SBAR (IN if) (S (NP (DT a) (NN datum)) (VP (VBZ is) (ADJP (JJ accessible)) (ADVP (IN outside) (PP (IN of) (NP (NP (DT the) (NN scope)) (PP (IN of) (NP (DT the) (NN lock))))))))) (, ,) (NP (DT the) (NN datum)) (VP (VBZ is) (RB not) (VP (VBN governed) (PP (IN by) (NP (DT the) (NN lock))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP discuss) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB balance) (NP (NN aliasing) (CC and) (NN synchronisation))))))) (. .))
(S (PP (IN In) (NP (JJ previous) (NN work))) (, ,) (NP (PRP we)) (VP (VBD defined) (NP (NP (DT a) (NN type) (NN system)) (SBAR (WHNP (WDT that)) (S (VP (VBZ guarantees) (NP (NP (NN data-race) (NN freedom)) (PP (IN of) (NP (NP (JJ actor-based) (NN concurrency)) (CC and) (NP (JJ lock-based) (NN concurrency)))))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ extends) (NP (DT this) (NN work)) (PP (IN by) (NP (NP (DT the) (NN introduction)) (PP (IN of) (NP (NP (CD two) (VBG programming) (NNS constructs)) (: ;) (NP (NP (NP (CD one)) (PP (IN for) (S (VP (VBG decoupling) (NP (NN isolation) (CC and) (NN synchronisation)))))) (CC and) (NP (NP (CD one)) (PP (IN for) (S (VP (VBG constructing) (NP (JJ higher-level) (NN atomicity) (NNS guarantees)) (PP (IN from) (NP (JJ lower-level) (NN synchronisation))))))))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP focus) (ADVP (RB predominantly)) (PP (IN on) (NP (NP (NNS actors)) (, ,) (CC and) (PP (IN in) (ADJP (JJ particular))) (NP (DT the) (NNP Encore) (NN programming) (NN language)))))) (, ,) (CC but) (S (NP (PRP$ our) (JJ ultimate) (NN goal)) (VP (VBZ is) (S (VP (TO to) (VP (VB define) (NP (PRP$ our) (NNS constructs)) (PP (IN in) (NP (NP (JJ such) (DT a) (NN way)) (SBAR (IN that) (S (NP (PRP they)) (VP (MD can) (VP (VB be) (VP (VBN used) (PP (DT both) (IN with) (NP (NNS locks) (CC and) (NP (NNS actors)))))))))))))) (, ,) (PP (VBN given) (SBAR (IN that) (S (NP (NP (NNS combinations)) (PP (IN of) (NP (DT both) (NNS models)))) (VP (VBP occur) (ADVP (RB frequently)) (PP (IN in) (NP (JJ actual) (NNS systems))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP discuss) (NP (DT the) (NN design) (NN space))) (, ,) (VP (VB provide) (NP (NP (JJ several) (NNS formalisations)) (PP (IN of) (NP (JJ different) (NNS semantics))))) (CC and) (VP (VB discuss) (NP (PRP$ their) (NNS properties))) (, ,) (CC and) (VP (VB connect) (NP (PRP them)) (PP (TO to) (NP (NP (NN case) (NNS studies)) (VP (VBG showing) (SBAR (WHADVP (WRB how)) (S (NP (PRP$ our) (VBN proposed) (NNS constructs)) (VP (MD can) (VP (VB be) (ADJP (JJ useful))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP report) (PP (IN on) (NP (NP (DT an) (JJ on-going) (NN implementation)) (PP (IN of) (NP (PRP$ our) (VBN proposed) (NNS constructs))) (PP (IN in) (NP (NNP Encore)))))) (. .))
