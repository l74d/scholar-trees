(S (NP (VBG Parking) (NN pressure)) (VP (VBZ has) (VP (VBN been) (VP (ADVP (RB steadily)) (VBG increasing) (PP (PP (IN in) (NP (NNS cities))) (CONJP (RB as) (RB well) (IN as)) (PP (IN in) (NP (NN university) (CC and) (JJ corporate) (NNS campuses))))))) (. .))
(S (S (VP (TO To) (VP (VB relieve) (NP (DT this) (NN pressure))))) (, ,) (NP (DT this) (NN paper)) (VP (NNS studies) (NP (NP (DT a) (JJ car-pooling) (NN platform)) (SBAR (WHNP (WDT that)) (S (VP (MD would) (VP (VB match) (NP (NNS riders) (CC and) (NNS drivers)) (, ,) (SBAR (IN while) (S (VP (VP (VBG guaranteeing) (NP (DT a) (NN ride) (RB back))) (CC and) (VP (VBG exploiting) (NP (ADJP (JJ spatial) (CC and) (JJ temporal)) (NN locality)))))))))))) (. .))
(S (PP (IN In) (NP (JJ particular))) (, ,) (NP (DT the) (NN paper)) (VP (VBZ formalizes) (NP (NP (DT the) (NNP Commute) (NNP Trip) (NNP Sharing) (NNP Problem)) (PRN (-LRB- -LRB-) (NP (NNP CTSP)) (-RRB- -RRB-))) (S (VP (TO to) (VP (VB find) (NP (NP (DT a) (NN routing) (NN plan)) (SBAR (WHNP (WDT that)) (S (VP (VBZ maximizes) (NP (VBP ride) (VBG sharing)) (PP (IN for) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (JJ commute) (NNS trips))))))))))))) (. .))
(S (NP (DT The) (NNP CTSP)) (VP (VBZ is) (NP (NP (DT a) (NN generalization)) (PP (IN of) (NP (DT the) (NN vehicle) (VBG routing) (NN problem))) (PP (IN with) (NP (NP (NNS routes)) (SBAR (WHNP (IN that)) (S (VP (JJ satisfy) (NP (NP (NN time) (NN window)) (, ,) (NP (NN capacity)) (, ,) (NP (NN pairing)) (, ,) (NP (NN precedence)) (, ,) (NP (VB ride) (NN duration)) (, ,) (CC and) (NP (NN driver) (NNS constraints)))))))))) (. .))
(S (NP (DT The) (NN paper)) (VP (VBZ introduces) (NP (NP (NP (CD two) (JJ exact) (NN algorithms)) (PP (IN for) (NP (DT the) (NNP CTPS)))) (: :) (NP (NP (DT A) (NN route-enumeration) (NN algorithm)) (CC and) (NP (DT a) (JJ branch-and-price) (NN algorithm))))) (. .))
(S (NP (JJ Experimental) (NNS results)) (VP (VBP show) (SBAR (IN that) (, ,) (S (PP (IN on) (NP (NP (DT a) (NN high-fidelity) (, ,) (JJ real-world) (NN dataset)) (PP (IN of) (NP (NP (JJ commute) (NNS trips)) (PP (IN from) (NP (DT a) (JJ mid-size) (NN city))))))) (, ,) (NP (DT both) (VBP algorithms)) (VP (VP (ADVP (RB optimally)) (VB solve) (NP (ADJP (JJ small) (CC and) (JJ medium-sized)) (NNS problems))) (CC and) (VP (VB produce) (NP (NP (JJ high-quality) (NNS solutions)) (PP (IN for) (NP (JJR larger) (NN problem) (NNS instances))))))))) (. .))
(S (NP (DT The) (NNS results)) (VP (VBP show) (SBAR (IN that) (S (NP (NN car) (NN pooling)) (, ,) (SBAR (IN if) (S (VP (ADVP (RB widely)) (VBN adopted)))) (, ,) (VP (VBZ has) (NP (DT the) (JJ potential) (S (VP (TO to) (VP (VP (VB reduce) (NP (NN vehicle) (NN usage)) (PP (IN by) (NP (QP (IN up) (TO to) (CD 57)) (NN %)))) (CC and) (VP (NN decrease) (NP (NP (NN vehicle) (NNS miles)) (VP (VBN traveled))) (PP (IN by) (NP (QP (IN up) (TO to) (CD 46)) (NN %)))) (SBAR (IN while) (S (VP (ADVP (RB only)) (VBG incurring) (NP (NP (DT a) (ADJP (CD 22) (NN %)) (NN increase)) (PP (IN in) (NP (NP (JJ average) (JJ ride) (NN time)) (PP (IN per) (NP (NN commuter))))) (PP (IN for) (NP (NP (DT the) (NNS trips)) (VP (VBN considered)))))))))))))))) (. .))
