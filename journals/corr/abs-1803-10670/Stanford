(NP (NN Context) (. .))
(S (NP (ADJP (NP (NN TypeState)) (HYPH -) (VBN Oriented)) (NN Programming) (PRN (-LRB- -LRB-) (NP (NN TSOP)) (-RRB- -RRB-))) (VP (VBZ is) (NP (NP (DT a) (NN paradigm)) (VP (VBN intended) (S (VP (TO to) (VP (VB help) (NP (NNS developers)) (PP (IN in) (NP (NP (DT the) (NN implementation) (CC and) (NN use)) (PP (IN of) (NP (NP (JJ mutable) (NNS objects)) (SBAR (WHNP (WP$ whose) (NP (NP (NN public)) (NP (NN interface)))) (S (VP (VBZ depends) (PP (IN on) (NP (PRP$ their) (JJ private) (NN state)))))))))))))))) (. .))
(S (PP (IN Under) (NP (DT this) (NN paradigm))) (, ,) (NP (ADJP (RB well) (HYPH -) (VBN typed)) (NNS programs)) (VP (VBP are) (VP (VBN guaranteed) (S (VP (TO to) (VP (VB conform) (PP (IN with) (NP (NP (DT the) (NN protocol)) (PP (IN of) (NP (NP (DT the) (NNS objects)) (SBAR (S (NP (PRP they)) (VP (VBP use))))))))))))) (. .))
(NP (NNP Inquiry) (. .))
(S (NP (JJ Previous) (NNS works)) (VP (VBP have) (VP (VBN investigated) (NP (NP (NN TSOP)) (PP (IN for) (NP (DT both) (ADJP (JJ sequential) (CC and) (JJ concurrent)) (NNS objects)))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NP (DT an) (JJ important) (NN difference)) (PP (IN between) (NP (DT the) (CD two) (NNS settings)))) (ADVP (RB still)) (VP (VBZ remains)) (. .))
(S (PP (IN In) (NP (DT a) (JJ sequential) (NN setting))) (, ,) (NP (DT a) (ADJP (RB well) (HYPH -) (VBN typed)) (NN program)) (VP (CC either) (VP (VBZ progresses) (ADVP (RB indefinitely))) (CC or) (VP (VBZ terminates) (ADVP (RB eventually)))) (. .))
(S (PP (IN In) (NP (DT a) (JJ concurrent) (NN setting))) (, ,) (NP (NN protocol) (NN conformance)) (VP (VBZ is) (ADJP (ADVP (RB no) (RB longer)) (JJ enough)) (S (VP (TO to) (VP (VB avoid) (NP (NNS deadlocks))))) (, ,) (NP (NP (DT a) (NN situation)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NP (DT the) (NN execution)) (PP (IN of) (NP (DT the) (NN program)))) (VP (VBZ halts) (SBAR (IN because) (S (NP (QP (CD two) (CC or) (JJR more)) (NNS objects)) (VP (VBP are) (VP (VBN involved) (PP (IN in) (NP (NP (JJ mutual) (NNS dependencies)) (SBAR (WHNP (WDT that)) (S (VP (VBP prevent) (NP (DT any) (JJ further) (NN progress)))))))))))))))) (. .))
(NP (NNP Approach) (. .))
(S (PP (IN In) (NP (DT this) (NN work))) (, ,) (NP (PRP we)) (VP (VP (VBD put) (PRT (RP forward)) (NP (NP (DT a) (NN refinement)) (PP (IN of) (NP (NP (NN TSOP)) (PP (IN for) (NP (JJ concurrent) (NNS objects)))))) (S (VP (VP (VBG guaranteeing) (NP (ADJP (RB that) (RB well) (HYPH -) (VBN typed)) (NNS programs))) (CONJP (RB not) (RB only)) (VP (VB conform) (PP (IN with) (NP (NP (DT the) (NN protocol)) (PP (IN of) (NP (NP (DT the) (NNS objects)) (SBAR (S (NP (PRP they)) (VP (VBP use)))))))))))) (, ,) (CC but) (VP (VBP are) (ADVP (RB also)) (ADJP (NP (NN deadlock)) (JJ free)))) (. .))
(S (NP (NP (DT The) (JJ key) (NNS ingredients)) (PP (IN of) (NP (DT the) (NN type) (NN system)))) (VP (VBP are) (NP (NP (NP (JJ behavioral) (NNS types)) (, ,) (VP (VBN used) (S (VP (TO to) (VP (VB specify) (CC and) (VB enforce) (NP (NN object) (NNS protocols))))))) (, ,) (CC and) (NP (NP (NN dependency) (NNS relations)) (, ,) (VP (VBN used) (S (VP (TO to) (VP (VP (VB represent) (NP (NP (JJ abstract) (NNS descriptions)) (PP (IN of) (NP (NP (DT the) (NNS dependencies)) (PP (IN between) (NP (NNS objects))))))) (CC and) (VP (VB detect) (NP (NP (NNS circularities)) (SBAR (WHNP (WDT that)) (S (VP (MD might) (VP (VB cause) (NP (NNS deadlocks))))))))))))))) (. .))
(NP (NN Knowledge) (. .))
(S (NP (DT The) (VBN proposed) (NN approach)) (VP (VBZ stands) (PRT (RP out)) (PP (IN for) (NP (CD two) (NNS features)))) (. .))
(S (S (ADVP (RB First)) (, ,) (NP (DT the) (NN approach)) (VP (VBZ is) (ADJP (ADJP (RB fully) (JJ compositional)) (CC and) (ADJP (ADVP (RB therefore)) (JJ scalable))))) (: :) (S (NP (NP (DT the) (NNS objects)) (PP (IN of) (NP (DT a) (JJ large) (NN program)))) (VP (MD can) (VP (VB be) (NP (NP (NN type)) (VP (VBN checked) (PP (IN in) (NP (NN isolation)))))))) (: ;) (S (NP (NP (NN deadlock) (NN freedom)) (PP (IN of) (NP (DT an) (NN object) (NN composition)))) (ADVP (RB solely)) (VP (VBZ depends) (PP (IN on) (NP (NP (DT the) (NNS types)) (PP (IN of) (NP (NP (DT the) (NNS objects)) (VP (VBG being) (VP (VBN composed))))))))) (: ;) (S (NP (NP (DT any) (NN modification) (HYPH /) (NN refactoring)) (PP (IN of) (NP (NP (DT an) (NN object)) (SBAR (WHNP (WDT that)) (S (VP (VBZ does) (RB not) (VP (VB affect) (NP (PRP$ its) (NN public) (NN interface))))))))) (VP (VBZ does) (RB not) (VP (VB affect) (NP (JJ other) (NNS objects)) (ADVP (RB either))))) (. .))
(S (ADVP (RB Second)) (, ,) (NP (PRP we)) (VP (VBP provide) (NP (NP (DT the) (JJ first) (NN deadlock) (NN analysis) (NN technique)) (PP (IN for) (NP (NP (NML (S (VP (VB join)))) (NNS patterns)) (, ,) (NP (NP (DT a) (NML (JJ high) (HYPH -) (NN level)) (NN concurrency) (NN abstraction)) (SBAR (WHPP (IN with) (WHNP (WDT which))) (S (NP (NNS programmers)) (VP (MD can) (VP (VB express) (NP (JJ complex) (NNS synchronizations)) (PP (IN in) (NP (DT a) (ADJP (JJ succinct) (CC and) (JJ declarative)) (NN form)))))))))))) (. .))
(NP (NN Grounding) (. .))
(S (NP (PRP We)) (VP (VBP detail) (NP (DT the) (VBN proposed)) (S (VP (VP (VBG typing) (NP (NP (NN discipline)) (PP (IN for) (NP (DT a) (NML (NN core) (NN programming)) (NN language))))) (VP (VBG blending) (NP (NP (JJ concurrent) (NNS objects)) (, ,) (NP (NP (JJ asynchronous) (NN message)) (VP (VBG passing))))) (CC and) (VP (VB join) (NP (NNS patterns)))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT the) (NN type) (NN system)) (VP (VP (VBZ is) (ADJP (JJ sound))) (CC and) (VP (VB give) (NP (NP (JJ non-trivial) (NNS examples)) (PP (IN of) (NP (NP (NNS programs)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB be) (ADVP (RB successfully)) (VP (VBN analyzed)))))))))))))) (. .))
(S (NP (NP (DT A) (NNP Haskell) (NN implementation)) (PP (IN of) (NP (NP (DT the) (NN type) (NN system)) (SBAR (WHNP (WDT that)) (S (VP (VBZ demonstrates) (NP (NP (DT the) (NN feasibility)) (PP (IN of) (NP (DT the) (NN approach)))))))))) (VP (VBZ is) (ADJP (RB publicly) (JJ available))) (. .))
(NP (NN Importance) (. .))
(S (NP (NP (DT The) (NN static) (NN analysis) (NN technique)) (VP (VBN described) (PP (IN in) (NP (DT this) (NN work))))) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB certify) (NP (NP (NNS programs)) (VP (VBN written) (PP (IN in) (NP (NP (DT a) (NN core) (NN language)) (PP (IN for) (NP (JJ concurrent) (NN TSOP))))) (PP (IN with) (NP (VBN proven) (NN correctness) (NNS guarantees))))))))))) (. .))
(S (NP (DT This)) (VP (VBZ is) (NP (NP (NP (DT an) (JJ essential) (JJ first) (NN step)) (PP (IN towards) (NP (NP (DT the) (NN integration) (CC and) (NN application)) (PP (IN of) (NP (NP (DT the) (NN technique)) (PP (IN in) (NP (DT a) (NML (JJ real) (HYPH -) (NN world)) (NN developer) (NN toolchain)))))))) (, ,) (VP (VBG making) (NP (NP (NN programming)) (PP (IN of) (NP (NP (JJ such) (NNS systems)) (ADJP (ADJP (RBR more) (JJ productive)) (CC and) (ADJP (RBR less) (JJ frustrating))))))))) (. .))
