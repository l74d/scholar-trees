(S (NP (NN Concurrency)) (VP (VBZ has) (VP (VBN been) (VP (ADVP (RB rapidly)) (VBG gaining) (NP (NN importance)) (PP (IN in) (NP (JJ general-purpose) (NN computing))) (, ,) (S (VP (VBN caused) (PP (IN by) (NP (NP (DT the) (JJ recent) (NN turn)) (PP (NNS towards) (NP (RBR multicore) (NN processing) (NNS architectures)))))))))) (. .))
(S (PP (IN As) (NP (DT a) (NN result))) (, ,) (NP (NP (DT an) (VBG increasing) (NN number)) (PP (IN of) (NP (NNS developers)))) (VP (VBP have) (S (VP (TO to) (VP (VB learn) (S (VP (TO to) (VP (VP (VB write) (NP (JJ concurrent) (NNS programs))) (, ,) (NP (NP (DT a) (NN task)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (VP (VBN known) (S (VP (TO to) (VP (VB be) (ADJP (JJ hard)) (PP (ADVP (RB even)) (IN for) (NP (DT the) (NN expert)))))))))))))))))) (. .))
(S (NP (NN Language) (NNS designers)) (VP (VBP are) (ADVP (RB therefore)) (VP (VBG working) (PP (IN on) (NP (NP (NNS languages)) (SBAR (WHNP (WDT that)) (S (VP (VBP promise) (S (VP (TO to) (VP (VB make) (S (NP (NN concurrent) (VBG programming)) (ADJP (ADJP (`` ``) (JJR easier) ('' '')) (PP (IN than) (S (VP (VBG using) (NP (JJ traditional) (JJ thread) (NNS libraries))))))))))))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (DT the) (NN claim) (SBAR (IN that) (S (NP (DT a) (JJ new) (NN language)) (VP (VBZ is) (ADJP (ADJP (RBR more) (JJ usable)) (PP (IN than) (NP (DT another)))))))) (VP (VP (MD can) (RB not) (VP (VB be) (VP (VBN supported) (PP (IN by) (NP (ADJP (RB purely) (JJ theoretical)) (NNS considerations)))))) (, ,) (CC but) (VP (VBZ calls) (PP (IN for) (NP (JJ empirical) (NNS studies))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT the) (NN design)) (PP (IN of) (NP (NP (DT a) (NN study)) (SBAR (S (VP (TO to) (VP (VB compare) (NP (JJ concurrent) (NN programming) (NNS languages)) (PP (IN with) (NP (NP (NN respect)) (PP (TO to) (S (VP (VP (NN comprehending) (CC and) (VBG debugging) (NP (VBG existing) (NNS programs))) (CC and) (VP (VBG writing) (NP (JJ correct) (JJ new) (NNS programs)))))))))))))))) (. .))
(S (NP (NP (DT A) (JJ critical) (NN challenge)) (PP (IN for) (NP (PDT such) (DT a) (NN study)))) (VP (VBZ is) (VP (VBG avoiding) (NP (NP (DT the) (NN bias)) (SBAR (WHNP (WDT that)) (S (VP (MD might) (VP (VB be) (VP (VBN introduced) (UCP (PP (IN during) (NP (DT the) (NN training) (NN phase))) (CC and) (SBAR (WHADVP (WRB when)) (S (VP (VBG interpreting) (NP (NP (NNS participants) (POS â€º)) (NNS solutions)))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP address) (NP (DT these) (NNS issues)) (PP (IN by) (NP (NP (NP (DT the) (NN use)) (PP (IN of) (NP (JJ self-study) (NN material)))) (CC and) (NP (NP (DT an) (NN evaluation) (NN scheme)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBZ exposes) (NP (NP (DT any) (JJ subjective) (NNS decisions)) (PP (IN of) (NP (DT the) (NN corrector))))) (, ,) (CC or) (VP (VBZ eliminates) (NP (PRP them)) (ADVP (RB altogether)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP apply) (NP (PRP$ our) (NN design)) (PP (TO to) (NP (NP (DT a) (NN comparison)) (PP (IN of) (NP (NP (NP (CD two) (JJ object-oriented) (NNS languages)) (PP (IN for) (NP (NN concurrency)))) (, ,) (NP (NP (VBD multithreaded) (NNP Java)) (CC and) (NP (NP (NNP SCOOP)) (PRN (-LRB- -LRB-) (NP (JJ Simple) (NNP Concurrent) (NNP Object-Oriented) (NNP Programming)) (-RRB- -RRB-)))))) (, ,) (PP (IN in) (NP (DT an) (JJ academic) (NN setting)))))) (. .))
(S (NP (PRP We)) (VP (VB obtain) (NP (NP (NNS results)) (PP (IN in) (NP (NP (NN favor)) (PP (IN of) (NP (NNP SCOOP)))))) (SBAR (RB even) (IN though) (S (NP (DT the) (NN study) (NNS participants)) (VP (VBD had) (NP (NP (JJ previous) (NN training)) (PP (IN in) (NP (NNP Java) (NNP Threads)))))))) (. .))
