(S (NP (NNP Anglican)) (VP (VBZ is) (NP (NP (DT a) (JJ probabilistic) (NN programming) (NN system)) (VP (VBN designed) (S (VP (TO to) (VP (VB interoperate) (PP (IN with) (NP (NP (NNP Clojure)) (CC and) (NP (JJ other) (NNP JVM) (NNS languages)))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP introduce) (NP (DT the) (NN programming) (NN language) (NNP Anglican))) (, ,) (VP (VB outline) (NP (PRP$ our) (NN design) (NNS choices))) (, ,) (CC and) (VP (NN discuss) (PP (IN in) (NP (NN depth))) (NP (NP (DT the) (NN implementation)) (PP (IN of) (NP (DT the) (NX (NNP Anglican) (NN language)) (CC and) (NX (NN runtime)))) (, ,) (PP (VBG including) (NP (NP (JJ macro-based) (NN compilation)) (, ,) (NP (VBD extended) (JJ CPS-based) (NN evaluation) (NN model)) (, ,) (CC and) (NP (NP (JJ functional) (NNS representations)) (PP (IN for) (NP (NP (JJ probabilistic) (NN paradigms)) (, ,) (PP (JJ such) (IN as) (NP (NP (DT a) (NN distribution)) (, ,) (NP (DT a) (NN random) (NN process)) (, ,) (CC and) (NP (DT an) (NN inference) (NN algorithm)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (DT a) (JJ probabilistic) (JJ functional) (NN language)) (VP (MD can) (VP (VB be) (VP (VP (VBN implemented) (ADVP (RB efficiently))) (CC and) (VP (VBN integrated) (ADVP (RB tightly)) (PP (IN with) (NP (DT a) (JJ conventional) (JJ functional) (NN language)))) (PP (IN with) (NP (ADJP (RB only) (JJ moderate)) (JJ computational) (NN overhead))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP demonstrate) (SBAR (WHADVP (WRB how)) (S (NP (JJ advanced) (JJ probabilistic) (NN modeling) (NNS concepts)) (VP (VBP are) (VP (VBN mapped) (ADVP (RB naturally)) (PP (TO to) (NP (DT the) (JJ functional) (NN foundation)))))))) (. .))
