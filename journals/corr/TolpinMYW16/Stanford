(S (NP (JJ Anglican)) (VP (VBZ is) (NP (NP (DT a) (ADJP (JJ probabilistic)) (NN programming) (NN system)) (VP (VBN designed) (S (VP (TO to) (VP (VB interoperate) (PP (IN with) (NP (NP (NNP Clojure)) (CC and) (NP (JJ other) (NNP JVM) (NNS languages)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP introduce) (SBAR (S (NP (NP (DT the) (NN programming) (NN language)) (NP (JJ Anglican))) (, ,) (S (VP (VP (VB outline) (NP (PRP$ our) (NN design) (NNS choices))) (, ,) (CC and) (VP (VB discuss) (PP (IN in) (NP (NN depth))) (NP (NP (DT the) (NN implementation)) (PP (IN of) (NP (DT the) (JJ Anglican) (NN language) (CC and) (NN runtime))) (, ,) (PP (VBG including) (NP (JJ macro-based) (NN compilation))))))) (, ,) (VP (VBD extended) (NP (NP (NML (NNP CPS) (HYPH -) (VBN based)) (NN evaluation) (NN model)) (, ,) (CC and) (NP (NP (JJ functional) (NNS representations)) (PP (IN for) (NP (ADJP (JJ probabilistic)) (NNS paradigms))) (, ,) (PP (JJ such) (IN as) (NP (NP (DT a) (NN distribution)) (, ,) (NP (DT a) (JJ random) (NN process)) (, ,) (CC and) (NP (DT an) (NN inference) (NN algorithm)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (DT a) (ADJP (JJ probabilistic) (JJ functional)) (NN language)) (VP (MD can) (VP (VB be) (VP (VP (VBN implemented) (ADVP (RB efficiently))) (CC and) (VP (VBN integrated) (ADVP (RB tightly) (PP (IN with) (NP (DT a) (JJ conventional) (JJ functional) (NN language)))) (PP (IN with) (NP (RB only) (JJ moderate) (JJ computational) (NN overhead)))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP demonstrate) (SBAR (WHADVP (WRB how)) (S (NP (ADJP (JJ advanced) (JJ probabilistic)) (NN modeling) (NNS concepts)) (VP (VBP are) (VP (VBN mapped) (ADVP (RB naturally)) (PP (IN to) (NP (DT the) (JJ functional) (NN foundation)))))))) (. .))
