(S (NP (JJ Good) (NNS tools)) (VP (MD can) (VP (VB bring) (NP (JJ mechanical) (NN verification)) (PP (IN to) (NP (NP (NNS programs)) (VP (VBN written) (PP (IN in) (NP (NN mainstream) (JJ functional) (NNS languages)))))))) (. .))
(S (NP (PRP We)) (VP (VBP use) (NP (NP (NP (NNP hs)) (HYPH -) (PP (IN to) (HYPH -) (NP (NN coq)))) (X (X (IN to)) (S (VP (VB translate) (NP (NP (JJ significant) (NNS portions)) (PP (IN of) (NP (NP (NNP Haskell) (POS 's)) (NNS containers) (NN library)))) (PP (IN into) (NP (NNP Coq)))) (, ,) (CC and) (VP (VB verify) (NP (PRP it)) (PP (IN against) (NP (NNS specifications)))))) (SBAR (WHNP (WDT that)) (S (NP (PRP we)) (VP (VP (VBP derive) (PP (IN from) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (NP (NNS sources)) (PP (VBG including) (NP (NP (NML (NN type) (NN class)) (NNS laws)) (, ,) (NP (NP (DT the) (NN library) (POS 's)) (NN test) (NN suite)) (, ,)))))))) (CC and) (VP (VBZ interfaces) (PP (IN from) (NP (NP (NNP Coq) (POS 's)) (JJ standard) (NN library))))))))) (. .))
(S (NP (PRP$ Our) (NN work)) (VP (VBZ shows) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ is) (ADJP (JJ feasible) (S (VP (TO to) (VP (VB verify) (NP (JJ mature) (, ,) (ADJP (RB widely) (HYPH -) (VBN used)) (, ,) (ADJP (ADJP (RB highly) (VBN optimized)) (, ,) (CC and) (ADJP (JJ unmodified))) (NNP Haskell) (NN code)))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VP (VBP learn) (NP (ADJP (ADJP (JJR more) (PP (IN about) (NP (NP (DT the) (NN theory)) (PP (IN of) (NP (NN weight)))))) (HYPH -) (JJ balanced)) (NNS trees)) (PRN (, ,) (S (VP (VB extend) (NP (NP (NNP hs)) (HYPH -) (PP (IN to) (HYPH -) (NP (NN coq)))) (S (VP (TO to) (VP (VB handle) (NP (NN partiality))))))) (, ,))) (CC and) (: --) (SBAR (IN since) (S (NP (PRP we)) (VP (VBD found) (NP (DT no) (NNS bugs))))) (: --) (VP (VB attest) (PP (IN to) (NP (NP (DT the) (ADJP (JJ superb)) (NN quality)) (PP (IN of) (NP (ADJP (RB well) (HYPH -) (VBN tested)) (JJ functional) (NN code))))))) (. .))
