(S (VP (VB Let) (S (NP (NP (NNP H)) (PRN (-LRB- -LRB-) (NP (NNP P) (, ,) (NN n)) (-RRB- -RRB-))) (VP (VB be) (NP (NP (DT a) (NN program)) (SBAR (WHNP (IN that)) (S (VP (DT either) (VP (NNS loops)) (CC or) (VP (NNS returns) (ADJP (RB only) (NNP TRUE) (CC or) (NNP FALSE)))))))))) (. .))
(S (S (NP (DT The) (NN parameter) (NNP P)) (VP (VBZ is) (NP (DT a) (NN program)))) (CC and) (S (NP (NN n)) (VP (VBZ is) (NP (PRP$ its) (NN input)))) (. .))
(S (VP (VP (VP (NNP Suppose) (SBAR (WDT that) (S (NP (NP (NNP H)) (PRN (-LRB- -LRB-) (NP (NNP P) (, ,) (RB n)) (-RRB- -RRB-))) (VP (VBZ =) (ADJP (NNP TRUE)) (SBAR (SBAR (IN if) (CC and) (RB only) (IN if)) (S (NP (NNP P)) (VP (NNS halts) (PP (IN on))))))))) (NNS n.) (VP (NNP Suppose) (ADVP (RBR further)) (SBAR (IN that) (S (SBAR (NNP IF) (S (NP (NP (NNP H)) (PRN (-LRB- -LRB-) (NP (NNP P) (, ,) (RB n)) (-RRB- -RRB-))) (VP (NN =) (ADJP (JJ false))))) (NNP THEN) (NP (NNP P)) (VP (VBZ does) (RB not) (VP (VB halt) (PP (IN on) (NP (NN n))))))))) (, ,) (CC and) (VP (VB suppose) (SBAR (DT that) (S (NP (NNP H)) (VP (VBZ is) (ADJP (VBN sound))))))) (. .))
(S (VP (VB Let) (ADVP (PRP furthermore)) (S (NP (NNP P*)) (VP (VB be) (NP (NP (DT a) (NN program)) (PP (IN with) (NP (NP (PRP itself)) (PP (IN as) (NP (DT a) (NN parameter))))))))) (. .))
(S (NP (DT The) (NN claim)) (VP (VBZ is) (SBAR (IN that) (S (S (NP (EX there)) (VP (VBZ exists) (NP (NP (DT a) (NN program) (NNP H)) (SBAR (JJ such) (IN that) (S (NP (NP (NNP H)) (PRN (-LRB- -LRB-) (NP (NNP H) (, ,) (NNP H*)) (-RRB- -RRB-))) (VP (NN =) (ADJP (NNP FALSE)))))))) (, ,) (S (S (NP (WDT that)) (VP (VBZ is))) (, ,) (NP (NNP H)) (VP (VBZ proves) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ does) (RB not) (VP (VB prove) (SBAR (IN that) (S (NP (NNP H*)) (VP (NNS halts))))))))))))) (. .))
