(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP build) (NP (DT an) (NN interpreter)) (PP (IN by) (S (VP (VBG reusing) (SBAR (S (NP (NN host) (NN language)) (VP (VBZ functions) (PP (RB instead) (IN of) (NP (NP (NN recoding) (NNS mechanisms)) (PP (IN of) (NP (NP (NP (NN function) (NN application)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADVP (RB already)) (ADJP (JJ available) (PP (IN in) (NP (DT the) (NN host) (NN language)))))))) (-LRB- -LRB-) (NP (NP (DT the) (NN language)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN used) (S (VP (TO to) (VP (VB build) (NP (DT the) (NN interpreter)))))))))) (-RRB- -RRB-)))))))))))) (. .))
(S (S (SBAR (IN In) (NN order) (S (VP (TO to) (VP (VB transform) (NP (ADJP (NN user) (HYPH -) (VBN defined)) (NNS functions)) (PP (IN into) (NP (NN host) (NN language))))))) (VP (VBZ functions) (SBAR (S (NP (PRP we)) (VP (VBP use) (NP (JJ combinatory) (NN logic))))))) (: :) (S (NP (NN lambda) (HYPH -) (NNS abstractions)) (VP (VBP are) (VP (VBN transformed) (PP (IN into) (NP (NP (DT a) (NN composition)) (PP (IN of) (NP (NNS combinators)))))))) (. .))
(S (NP (PRP We)) (VP (VBP provide) (NP (DT a) (ADJP (RB mechanically) (VBN checked)) (NN proof)) (SBAR (IN that) (S (NP (DT this) (NN step)) (VP (VBZ is) (ADJP (JJ correct) (PP (IN for) (NP (NP (DT the) (NML (NML (NN call)) (HYPH -) (PP (IN by) (HYPH -) (NP (NN value)))) (NN strategy)) (PP (IN with) (NP (ADJP (JJ imperative)) (NNS features)))))))))) (. .))
