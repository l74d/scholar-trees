(S (NP (PRP We)) (VP (VBP report) (PP (IN on) (NP (NP (DT the) (NN experience)) (PP (IN of) (S (VP (VBG developing) (NP (NP (NNP Merlin)) (, ,) (NP (NP (DT a) (NN language) (NN server)) (PP (IN for) (NP (NP (DT the) (NNP OCaml) (NN programming) (NN language)) (PP (IN in) (NP (NN development))))))) (PP (IN since) (NP (CD 2013))))))))) (. .))
(S (NP (NNP Merlin)) (VP (VBZ is) (NP (NP (DT a) (NN daemon)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBZ connects) (PP (IN to) (NP (PRP$ your) (JJ favourite) (NN text) (NN editor)))) (CC and) (VP (VBZ provides) (NP (NP (NP (NNS services)) (SBAR (WHNP (WDT that)) (S (VP (VBP require) (NP (NP (DT a) (ADJP (JJ fine) (HYPH -) (JJ grained)) (NN understanding)) (PP (IN of) (NP (NP (DT the) (NML (NN programming) (NN language)) (NN syntax)) (CC and) (NP (NN static) (NNS semantics))))))))) (: :) (NP (NP (JJ instant) (NN feedback)) (PP (IN on) (NP (NNS warnings) (CC and) (NNS errors)))) (, ,) (NP (NP (NN autocompletion)) (, ,) (NP (NP (`` `) (NP (NN type)) (PP (IN of) (NP (NP (DT the) (NN code)) (PP (IN under) (NP (DT the) (NN cursor))))) ('' ')) (, ,) (`` `) (S (VP (VB go) (PP (IN to) (NP (NN definition) ('' '))))))) (, ,) (ADVP (FW etc.))))))))) (. .))
(S (NP (NNP Language) (NNS servers)) (VP (VBP need) (S (VP (TO to) (VP (VP (VB handle) (NP (ADJP (ADJP (JJ incomplete)) (CC and) (ADJP (RB partially) (HYPH -) (JJ incorrect))) (NNS programs))) (, ,) (CC and) (VP (VB try) (S (VP (TO to) (VP (VB be) (ADJP (JJ incremental) (S (VP (TO to) (VP (VB minimize) (NP (NN recomputation)) (PP (IN after) (NP (JJ small) (NN editing) (NNS actions))))))))))))))) (. .))
(S (NP (NNP Merlin)) (VP (VBD was) (VP (VBN built) (PP (IN by) (S (ADVP (RB carefully)) (VP (VBG adapting) (NP (DT the) (VBG existing) (NNS tools) (PRN (-LRB- -LRB-) (NP (NP (DT the) (NNP OCamllex) (NN lexer)) (CC and) (NP (NNP Menhir) (NN parser) (NNS generators))) (-RRB- -RRB-))) (S (VP (TO to) (ADVP (RBR better)) (VP (VB support) (NP (NN incrementality) (, ,) (NN incompleteness) (CC and) (NN error) (NN handling)))))))))) (. .))
(S (NP (DT These) (NNS extensions)) (VP (VBP are) (ADJP (JJ elegant) (CC and) (JJ general)) (, ,) (SBAR (IN as) (S (VP (VBN demonstrated) (PP (IN by) (NP (NP (DT the) (JJ interesting) (, ,) (JJ unplanned) (NNS uses)) (SBAR (WHNP (WDT that)) (S (NP (DT the) (NNP OCaml) (NN community)) (VP (VBD found) (PP (IN for) (NP (PRP them)))))))))))) (. .))
(S (NP (PRP They)) (VP (MD could) (VP (VB be) (VP (VBN adapted) (PP (IN to) (NP (JJ other) (NNS frontends))) (: --) (PP (IN in) (NP (DT any) (NN language)))))) (. .))
(S (PP (IN Besides) (NP (NN incrementality))) (, ,) (NP (PRP we)) (VP (VBP discuss) (NP (NP (DT the) (NN way)) (SBAR (S (NP (NNP Merlin)) (VP (VBZ communicates) (PP (IN with) (NP (NNS editors))) (, ,) (S (VP (VB describe) (NP (NP (DT the) (NN design) (NNS decisions)) (SBAR (WHNP (WDT that)) (S (VP (VBD went) (PP (IN into) (NP (DT some) (JJ demanding) (NNS features) (CC and) (NN report))) (PP (IN on) (NP (NP (DT some)) (PP (IN of) (NP (DT the) (JJ non-apparent) (NNS difficulties))))) (PP (IN in) (S (VP (VBG building) (NP (NP (JJ good) (NN editor) (NN support)) (, ,) (UCP (VP (VBG emerging) (PP (IN from) (NP (ADJP (JJ expressive)) (NN programming) (NNS languages)))) (CC or) (ADJP (JJ frustrating) (S (VP (VBG tooling) (NP (NNS ecosystems))))))))))))))))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP expect) (NP (DT this) (NN experience) (NN report)) (S (VP (TO to) (VP (VB be) (PP (IN of) (NP (NN interest))) (PP (IN to) (NP (NP (NNS authors)) (PP (IN of) (NP (NP (JJ interactive) (NN language) (NN tooling)) (PP (IN for) (NP (DT any) (NN programming) (NN language)))))))))))) (: ;) (S (S (NP (JJ many) (NN design) (NNS choices)) (VP (MD may) (VP (VB be) (VP (VBN reused))))) (, ,) (CC and) (S (NP (NP (DT some) (JJ hard) (HYPH -) (NN won)) (NP (NNS lessons))) (VP (MD can) (VP (VB serve) (PP (IN as) (NP (NNS warnings))))))) (. .))
