(S (NP (PRP It)) (VP (VBZ has) (VP (VBN been) (VP (VBN shown) (SBAR (IN that) (S (NP (NP (DT a) (NN class)) (PP (IN of) (NP (ADJP (JJ probabilistic)) (NN domain) (NNS models)))) (VP (MD can) (RB not) (VP (VB be) (VP (VBN learned) (ADVP (RB correctly)) (PP (IN by) (NP (NP (JJ several) (VBG existing) (NNS algorithms)) (SBAR (WHNP (WDT which)) (S (VP (VBP employ) (SBAR (S (NP (DT a) (NML (JJ single) (HYPH -) (NN link)) (NN look)) (ADVP (RB ahead)) (VP (VB search))))))))))))))))) (. .))
(FRAG (WHADVP (WRB When)) (NP (NP (NP (DT a) (JJ multi-link) (NN look)) (SBAR (S (NP (RB ahead) (NN search)) (VP (VBZ is) (VP (VBN used)))))) (, ,) (NP (NP (DT the) (JJ computational) (NN complexity)) (PP (IN of) (NP (DT the) (NN learning) (NN algorithm) (NNS increases))))) (. .))
(S (NP (PRP We)) (VP (VBP study) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB use) (NP (NN parallelism)) (S (VP (VP (TO to) (VP (VB tackle) (NP (DT the) (VBN increased) (NN complexity)) (PP (IN in) (S (VP (VBG learning) (NP (JJ such) (NNS models))))))) (CC and) (VP (TO to) (VP (VB speed) (PRT (RP up)) (S (VP (VBG learning) (PP (IN in) (NP (JJ large) (NNS domains)))))))))))))) (. .))
(S (NP (DT An) (NN algorithm)) (VP (VBZ is) (VP (VBN proposed) (PP (IN to) (S (VP (VB decompose) (NP (DT the) (NN learning) (NN task)) (PP (IN for) (NP (JJ parallel) (NN processing)))))))) (. .))
(S (NP (DT A) (JJ further) (NN task) (NN decomposition)) (VP (VBZ is) (VP (VBN used) (S (VP (VP (TO to) (VP (VB balance) (NP (NN load)) (PP (IN among) (NP (NNS processors))))) (CC and) (VP (TO to) (VP (VB increase) (NP (NP (DT the) (NN speed) (HYPH -) (NN up)) (CC and) (NP (NN efficiency))))))))) (. .))
(S (PP (IN For) (S (VP (VBG learning) (PP (IN from) (NP (ADJP (RB very) (JJ large)) (NNS datasets)))))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT a) (NN regrouping)) (PP (IN of) (NP (DT the) (JJ available) (NNS processors)))) (SBAR (JJ such) (IN that) (S (NP (NP (NML (JJ slow) (NNS data)) (NN access)) (PP (IN through) (NP (NN file)))) (VP (MD can) (VP (VB be) (VP (VBN replaced) (PP (IN by) (NP (NML (JJ fast) (NN memory)) (NN access))))))))) (. .))
(S (NP (NP (PRP$ Our) (NN implementation)) (PP (IN in) (NP (DT a) (JJ parallel) (NN computer)))) (VP (VBZ demonstrates) (NP (NP (DT the) (NN effectiveness)) (PP (IN of) (NP (DT the) (NN algorithm))))) (. .))
