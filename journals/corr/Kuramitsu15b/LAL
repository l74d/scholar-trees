(S (NP (NNP Nez)) (VP (VBZ is) (NP (NP (DT a) (ADJP (NNP PEG) (PRN (-LRB- -LRB-) (VBG Parsing) (WHNP (QP (NNP Expressing) (NNP Grammar))) (-RRB- -RRB-)) (VBD -based)) (JJ open) (NN grammar) (NN language)) (SBAR (WHNP (WDT that)) (S (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (VP (VB describe) (NP (JJ complex) (NN syntax) (NNS constructs)) (PP (IN without) (NP (NN action) (NN code))))))))))) (. .))
(S (SBAR (IN Since) (S (NP (JJ open) (NNS grammars)) (VP (VBP are) (ADJP (ADJP (JJ declarative)) (CC and) (ADJP (JJ free) (PP (IN from) (NP (NP (DT a) (NN host) (NN programming) (NN language)) (PP (IN of) (NP (NNS parsers)))))))))) (, ,) (NP (NP (NN software) (NN engineering) (NNS tools)) (CC and) (NP (JJ other) (NN parser) (NNS applications))) (VP (MD can) (VP (VB reuse) (NP (JJ once-defined) (NNS grammars)) (PP (IN across) (NP (VBG programming) (NNS languages))))) (. .))
(S (NP (NP (DT A) (JJ key) (NN challenge)) (SBAR (S (VP (TO to) (VP (VB achieve) (NP (JJ practical) (JJ open) (NNS grammars))))))) (VP (VBZ is) (NP (NP (NP (DT the) (NN expressiveness)) (PP (IN of) (NP (JJ syntax) (NNS constructs)))) (CC and) (NP (DT the) (VBG resulting) (NN parser) (NN performance))) (, ,) (SBAR (IN as) (S (NP (DT the) (JJ traditional) (NN action) (NN code) (NN approach)) (VP (VBZ has) (VP (VBN provided) (NP (NP (ADJP (RB very) (JJ pragmatic)) (NNS solutions)) (PP (TO to) (NP (DT these) (CD two) (NNS issues))))))))) (. .))
(S (PP (IN In) (NP (NNP Nez))) (, ,) (NP (PRP we)) (VP (VBP extend) (NP (DT the) (JJ symbol-based) (NN state) (NN management)) (S (VP (TO to) (VP (VB recognize) (NP (NP (JJ context-sensitive) (NN language) (NN syntax)) (, ,) (SBAR (WHNP (WDT which)) (S (ADVP (RB often)) (VP (VBZ appears) (PP (IN in) (NP (JJ major) (NN programming) (NNS languages))))))))))) (. .))
(S (PP (IN In) (NP (NN addition))) (, ,) (NP (DT the) (NNP Abstract) (NNP Syntax) (NNP Tree) (NN constructor)) (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (VP (VB make) (NP (NP (JJ flexible) (NN tree) (NNS structures)) (, ,) (PP (VBG including) (NP (NP (DT the) (JJ left-associative) (NN pair)) (PP (IN of) (NP (NNS trees)))))))))) (. .))
(S (PP (JJ Due) (TO to) (NP (DT these) (NNS extensions))) (, ,) (NP (PRP we)) (VP (VBP have) (VP (VBN demonstrated) (SBAR (IN that) (S (NP (NNP Nez)) (VP (MD can) (VP (VB parse) (NP (UCP (RB not) (DT all) (CC but) (ADJP (JJ many))) (NNS grammars)))))))) (. .))
(S (NP (NNP Nez)) (VP (MD can) (VP (VB generate) (NP (NP (JJ various) (NNS types)) (PP (IN of) (NP (NNS parsers)))) (SBAR (IN since) (S (NP (DT all) (NNP Nez) (NNS operations)) (VP (VBP are) (ADJP (JJ independent) (PP (IN of) (NP (DT a) (JJ specific) (NN parser) (NN language))))))))) (. .))
(S (S (VP (TO To) (VP (VB highlight) (NP (DT this) (NN feature))))) (, ,) (NP (PRP we)) (VP (VBP have) (VP (VBN implemented) (NP (NNP Nez)) (PP (IN with) (NP (NP (JJ dynamic) (NN parsing)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (S (NP (NNS users)) (VP (TO to) (VP (VB integrate) (NP (DT a) (NNP Nez) (NN parser)) (PP (IN as) (NP (NP (DT a) (NN parser) (NN library)) (SBAR (WHNP (WDT that)) (S (VP (VBZ loads) (NP (DT a) (NN grammar)) (PP (IN at) (NP (NN runtime)))))))))))))))))) (. .))
(S (S (VP (TO To) (VP (VB achieve) (NP (PRP$ its) (JJ practical) (NN performance))))) (, ,) (NP (NNP Nez) (NNS operators)) (VP (VBP are) (VP (VBN assembled) (PP (IN into) (NP (NP (JJ low-level) (JJ virtual) (NN machine) (NNS instructions)) (, ,) (PP (VBG including) (NP (NP (NP (VBN automated) (NN state) (NNS modifications)) (SBAR (WHADVP (WRB when)) (S (VP (NN backtracking))))) (, ,) (NP (NP (JJ transactional) (NNS controls)) (PP (IN of) (NP (NNP AST) (NN construction)))) (, ,) (CC and) (NP (NP (JJ efficient) (NN memoization)) (PP (IN in) (NP (NN packrat) (NN parsing)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (SBAR (IN that) (S (NP (NNP Nez) (JJ dynamic) (NNS parsers)) (VP (VBP achieve) (NP (ADJP (RB very) (JJ competitive)) (NN performance)) (PP (VBN compared) (PP (TO to) (NP (VBG existing) (JJ efficient) (NN parser) (NNS generators)))))))) (. .))
