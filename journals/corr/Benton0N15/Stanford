(S (NP (PRP We)) (VP (VBP describe) (NP (NP (DT a) (JJ denotational) (NNS semantics)) (PP (IN for) (NP (NP (DT an) (JJ abstract) (NN effect) (NN system)) (PP (IN for) (NP (DT a) (NML (JJR higher) (HYPH -) (NN order)) (, ,) (NML (VBN shared) (HYPH -) (JJ variable)) (JJ concurrent) (NN programming))))) (NN language))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (NP (NP (DT the) (NN soundness)) (PP (IN of) (NP (NP (DT a) (NN number)) (PP (IN of) (NP (ADJP (NP (JJ general) (NN effect)) (HYPH -) (VBN based)) (NN program) (NNS equivalences)))))) (, ,) (PP (VBG including) (NP (NP (DT a) (NN parallelization) (NN equation)) (SBAR (WHNP (WDT that)) (S (VP (VBZ specifies) (NP (JJ sufficient) (NNS conditions)) (PP (IN for) (S (VP (VBG replacing) (NP (JJ sequential) (NN composition)) (PP (IN with) (NP (JJ parallel) (NN composition)))))))))))) (. .))
(S (NP (NN Effect) (NNS annotations)) (VP (VBP are) (ADJP (JJ relative) (PP (IN to) (NP (NP (JJ abstract) (NNS locations)) (VP (VBN specified) (PP (IN by) (NP (NP (NNS contracts)) (CONJP (RB rather) (IN than)) (NP (JJ physical) (NNS footprints)))) (S (VP (VBG allowing) (NP (PRP us)) (PP (IN in) (NP (NP (ADJP (JJ particular) (S (VP (TO to) (VP (VB show) (NP (NP (DT the) (NN soundness)) (PP (IN of) (NP (NP (DT some) (NNS transformations)) (VP (VBG involving) (NP (ADJP (JJ fine) (HYPH -) (JJ grained)) (JJ concurrent) (NNS data)))))))))) (NNS structures)) (, ,) (PP (JJ such) (IN as) (NP (NP (NML (NNP Michael) (HYPH -) (NNP Scott)) (NNS queues)) (, ,) (SBAR (WHNP (WDT that)) (S (VP (VBP allow) (NP (JJ concurrent) (NN access)) (PP (IN to) (NP (NP (JJ different) (NNS parts)) (PP (IN of) (NP (JJ mutable) (NNS data) (NNS structures))))))))))))))))))) (. .))
(S (NP (PRP$ Our) (NNS semantics)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (S (VP (VBG refining) (NP (ADJP (NP (DT a) (NN trace)) (HYPH -) (VBN based)) (NNS semantics)) (PP (IN for) (NP (NML (JJ first) (HYPH -) (NN order)) (NNS programs))) (PP (IN due) (PP (IN to) (NP (NNP Brookes))))))))) (. .))
(S (PP (IN By) (S (VP (VP (VBG moving) (PP (IN from) (ADJP (JJ concrete))) (PP (IN to) (NP (JJ abstract) (NNS locations)))) (, ,) (CC and) (VP (VBG adding) (NP (NP (NN type) (NNS refinements)) (SBAR (WHNP (WDT that)) (S (VP (VBP capture) (NP (NP (DT the) (JJ possible) (NN side) (HYPH -) (NNS effects)) (PP (IN of) (NP (NP (DT both) (NNS expressions)) (CC and) (NP (PRP$ their) (JJ concurrent) (NNS environments))))))))))))) (, ,) (NP (PRP we)) (VP (VBP are) (ADJP (JJ able) (S (VP (TO to) (VP (VB validate) (NP (NP (JJ many) (NNS equivalences)) (SBAR (WHNP (WDT that)) (S (VP (VBP do) (RB not) (VP (VB hold) (PRT (RP in)) (NP (DT an) (JJ unrefined) (NN model)))))))))))) (. .))
(S (NP (NP (DT The) (NNS meanings)) (PP (IN of) (NP (NNS types)))) (VP (VBP are) (VP (VBN expressed) (S (VP (VBG using) (NP (ADJP (NP (DT a) (NN game)) (HYPH -) (VBN based)) (JJ logical) (NN relation)) (PP (IN over) (NP (NP (NNS sets)) (PP (IN of) (NP (NNS traces))))))))) (. .))
(S (S (NP (NP (NP (CD Two) (NNS programs)) (NP ($ $) (CD e_1)) (NP ($ $))) (CC and) (NP (NP ($ $) (CD e_2)) (NP ($ $)))) (VP (VBP are) (ADVP (RB logically)) (VP (VBN related) (SBAR (IN if) (S (NP (CD one)) (VP (VBZ is) (ADJP (JJ able) (S (VP (TO to) (VP (VB solve) (NP (DT a) (NML (CD two) (HYPH -) (NN player)) (NN game)))))))))))) (: :) (S (FRAG (PP (IN for) (NP (DT any) (NN trace))) (PP (IN with) (NP (NN result) (NN value))) (NP (NP ($ $) (CD v_1)) (NP (NP ($ $)) (PP (IN in) (NP (NP (DT the) (NNS semantics)) (PP (IN of) (NP ($ $) (CD e_1)))))) (NP (NP (NP ($ $)) (-LRB- -LRB-) (NP (NN challenge)) (-RRB- -RRB-)) (SBAR (IN that) (S (NP (DT the) (NN player)) (VP (VBZ presents))))))) (, ,) (NP (DT the) (NN opponent)) (VP (MD can) (VP (VB present) (NP (DT an) (-LRB- -LRB-) (NN response) (-RRB- -RRB-)) (FRAG (NP (NP (JJ equivalent) (NN trace)) (PP (IN in) (NP (NP (DT the) (NNS semantics)) (PP (IN of) (NP ($ $) (CD e_2)))))) (NP (NP ($ $)) (PP (IN with) (NP (DT a) (ADJP (ADVP (RB logically)) (JJ related)) (NN result)))) (NP (NN value)) (NP ($ $) (CD v_2)) (NP ($ $)))))) (. .))
