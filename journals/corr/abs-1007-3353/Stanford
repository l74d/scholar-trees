(S (NP (JJ Static) (NN analysis)) (VP (VP (VBZ is) (NP (NP (DT a) (JJ powerful) (NN technique)) (PP (IN for) (NP (NP (JJ automatic) (NN verification)) (PP (IN of) (NP (NNS programs))))))) (CC but) (VP (VBZ raises) (NP (JJ major) (NN engineering) (NNS challenges)) (SBAR (WHADVP (WRB when)) (S (VP (VBG developing) (NP (DT a) (ADJP (JJ full) (HYPH -) (JJ fledged)) (NN analyzer)) (PP (IN for) (NP (NP (DT a) (JJ realistic) (NN language)) (PP (JJ such) (IN as) (NP (NNP Java)))))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ describes) (NP (DT the) (NNP Sawja) (NN library)) (: :) (S (NP (DT a) (NN static) (NN analysis) (NN framework)) (ADJP (RB fully) (JJ compliant) (PP (IN with) (NP (NP (NNP Java) (CD 6)) (SBAR (WHNP (WDT which)) (S (VP (VBZ provides) (NP (NN OCaml) (NNS modules)) (PP (IN for) (S (ADVP (RB efficiently)) (VP (VBG manipulating) (NP (NNP Java) (NN bytecode) (NNS programs))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT the) (JJ main) (NNS features)) (PP (IN of) (NP (DT the) (NN library)))) (, ,) (PP (VBG including) (NP (NP (LST (-LRB- -LRB-) (LS i) (-RRB- -RRB-)) (NP (JJ efficient) (JJ functional) (NN data) (HYPH -) (NNS structures)) (PP (IN for) (S (VP (VBG representing) (NP (NN program)) (PP (IN with) (UCP (NP (JJ implicit) (NN sharing)) (CC and) (ADJP (JJ lazy)))) (S (VP (VBG parsing))))))) (, ,) (NP (LST (-LRB- -LRB-) (LS ii) (-RRB- -RRB-)) (NP (DT an) (JJ intermediate) (JJ stack-less) (NN representation))) (, ,) (CC and) (NP (LST (-LRB- -LRB-) (LS iii) (-RRB- -RRB-)) (NP (JJ fast) (NN computation) (CC and) (NN manipulation)) (PP (IN of) (NP (JJ complete) (NNS programs))))))) (. .))
