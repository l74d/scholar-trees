(S (NP (NN Type) (NNS classes)) (VP (VBP are) (NP (NP (DT an) (JJ elegant) (NN extension)) (PP (IN to) (NP (NP (JJ traditional)) (, ,) (NP (NP (NNP Hindley) (HYPH -) (NNP Milner)) (VP (VBN based) (S (VP (VBG typing) (NP (NNS systems)))))))))) (. .))
(S (NP (PRP They)) (VP (VBP are) (VP (VBN used) (PP (IN in) (NP (NP (JJ modern)) (, ,) (VP (VBN typed) (NP (NP (NNS languages)) (PP (JJ such) (IN as) (NP (NNP Haskell)))) (S (VP (TO to) (VP (VB support) (NP (NP (VBN controlled) (NN overloading)) (PP (IN of) (NP (NNS symbols)))))))))))) (. .))
(S (NP (NNP Haskell) (CD 98)) (VP (VBZ supports) (NP (NP (RB only) (JJ single) (HYPH -) (NN parameter)) (CC and) (NP (NML (NN constructor) (NN type)) (NNS classes)))) (. .))
(S (NP (NP (JJ Other) (NNS extensions)) (PP (JJ such) (IN as) (NP (JJ multi-parameter) (NN type) (NNS classes)))) (VP (VP (VBP are) (ADVP (RB highly)) (VP (VBN desired))) (CC but) (VP (VBP are) (ADVP (RB still)) (VP (RB not) (ADVP (RB officially)) (VBN supported) (PP (IN by) (NP (NNP Haskell)))))) (. .))
(S (NP (JJ Subtle) (NNS issues)) (VP (VBP arise) (PP (IN with) (NP (NP (NNS extensions)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (MD may) (VP (VB lead) (PP (IN to) (NP (NP (DT a) (NN loss)) (PP (IN of) (NP (JJ feasible) (UCP (NML (NN type) (NN inference)) (CC or) (ADJP (JJ ambiguous))) (NNS programs)))))))))))) (. .))
(S (NP (NP (DT A) (JJ proper) (JJ logical) (NN basis)) (PP (IN for) (NP (NML (NN type) (NN class)) (NNS systems)))) (VP (VBZ seems) (S (VP (TO to) (VP (VB be) (ADJP (VBG missing)))))) (. .))
(S (NP (PDT Such) (DT a) (NN basis)) (VP (MD would) (VP (VB allow) (NP (NNS extensions)) (S (VP (TO to) (VP (VB be) (VP (VBN characterised) (CC and) (VBN studied) (ADVP (RB rigorously)))))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (S (VP (TO to) (VP (VB employ) (NP (NN Constraint) (NN Handling) (NNS Rules)) (PP (IN as) (NP (DT a) (NN tool) (S (VP (TO to) (VP (VB study) (CC and) (VB develop) (NP (NML (NN type) (NN class)) (NNS systems)) (PP (IN in) (NP (DT a) (JJ uniform) (NN way)))))))))))) (. .))
