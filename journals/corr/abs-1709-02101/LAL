(S (PP (IN For) (NP (JJ many) (NNS applications))) (, ,) (NP (PRP we)) (VP (VBP are) (ADJP (JJ unable) (S (VP (TO to) (VP (VB take) (NP (JJ full) (NN advantage)) (PP (IN of) (NP (NP (DT the) (JJ potential) (JJ massive) (NN parallelisation)) (VP (VBN offered) (PP (IN by) (NP (NP (NNS supercomputers)) (CC or) (NP (NN cloud) (NN computing))))))))))) (SBAR (IN because) (S (NP (NP (PRP it))) (VP (VBZ is) (ADJP (RB too) (JJ hard)) (S (VP (TO to) (VP (VB work) (PRT (RP out)) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB divide) (PRT (RP up)) (NP (DT the) (NN computation) (NN task)) (PP (IN between) (NP (NNS processors))) (PP (IN in) (NP (NP (JJ such) (DT a) (NN way)) (SBAR (S (VP (TO to) (VP (VB minimise) (NP (NP (DT the) (NN need)) (PP (IN for) (NP (NN communication))))))))))))))))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NP (DT a) (ADJP (RB recently) (VBN developed)) (NN branch-independent) (NN tableaux)) (PP (IN for) (NP (DT the) (JJ common) (NNP LTL) (JJ temporal) (NN logic)))) (VP (MD should) (ADVP (RB intuitively)) (VP (VB be) (ADJP (JJ easy) (SBAR (S (VP (TO to) (VP (VB parallelise)))))) (SBAR (IN as) (S (NP (DT each) (NN branch)) (VP (MD can) (VP (VB be) (VP (VBN developed) (ADVP (RB independently))))))))) (. .))
(S (ADVP (RB Here)) (NP (PRP we)) (VP (VBP describe) (NP (NP (DT a) (JJ simple) (NN technique)) (PP (IN for) (S (VP (VBG partitioning) (NP (PDT such) (DT a) (NN tableau)) (SBAR (JJ such) (IN that) (S (NP (DT each) (NN partition)) (VP (MD can) (VP (VB be) (VP (VBN processed) (ADVP (RB independently)) (PP (IN without) (NP (NP (NN need)) (PP (IN for) (NP (JJ interprocess) (NN communication))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP investigate) (NP (NP (DT the) (NN extent)) (SBAR (WHPP (TO to) (WHNP (WDT which))) (S (NP (DT this) (NN technique)) (VP (VBZ improves) (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (DT the) (NNP LTL) (NN tableau))) (PP (IN on) (NP (NP (JJ standard) (NNS benchmarks)) (CC and) (NP (JJ random) (NNS formulas)))))))))) (. .))
