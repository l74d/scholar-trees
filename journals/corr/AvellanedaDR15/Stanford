(S (NP (PRP We)) (VP (VBP define) (NP (NP (DT a) (JJ new) (NN subclass)) (PP (IN of) (NP (NP (JJ nondeterministic) (JJ finite) (NN automata)) (PP (IN for) (NP (NP (ADJP (NN prefix) (HYPH -) (VBN closed)) (NNS languages)) (VP (VBN called) (S (VP (VBN Flanked) (NP (NNP Finite) (NNP Automata)))))))))) (PRN (-LRB- -LRB-) (NP (NNP FFA)) (-RRB- -RRB-))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (DT this) (NN class)) (VP (VBZ enjoys) (NP (JJ good) (NN complexity) (NNS properties)) (PP (IN while) (S (VP (VBG preserving) (NP (NP (DT the) (NN succinctness)) (PP (IN of) (NP (JJ nondeterministic) (NN automata))))))))))) (. .))
(S (PP (IN In) (ADJP (JJ particular))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (S (NP (NP (DT the) (NN universality) (NN problem)) (PP (IN for) (NP (NNP FFA)))) (VP (VBZ is) (PP (IN in) (NP (JJ linear) (NN time))))) (CC and) (S (NP (DT that) (NN language) (NN inclusion)) (VP (MD can) (VP (VB be) (VP (VBN checked) (PP (IN in) (NP (JJ polynomial) (NN time)))))))))) (. .))
(S (NP (NP (DT A) (JJ useful) (NN application)) (PP (IN of) (NP (NNP FFA)))) (VP (VBZ is) (S (VP (TO to) (VP (VB provide) (NP (DT an) (JJ efficient) (NN way)) (PP (IN to) (VP (VB compute) (NP (NP (DT the) (NN quotient) (CC and) (NN inclusion)) (PP (IN of) (NP (JJ regular) (NNS languages)))) (PP (IN without) (NP (DT the) (NN need))) (S (VP (TO to) (VP (VB use) (NP (DT the) (NN powerset) (NN construction))))))))))) (. .))
(S (NP (DT These) (NNS operations)) (VP (VBP are) (NP (NP (DT the) (NN building) (NNS blocks)) (PP (IN of) (NP (JJ several) (NN verification) (NNS algorithms))))) (. .))
