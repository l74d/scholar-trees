(S (NP (NML (JJ Large) (HYPH -) (NN scale)) (, ,) (JJ parallel) (NNS clusters)) (VP (VP (VBN composed) (PP (IN of) (NP (NP (NN commodity) (NNS processors)) (SBAR (S (VP (VBP are) (ADJP (RB increasingly) (JJ available)))))))) (, ,) (VP (VBG enabling) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (JJ vast) (NN processing) (NNS capabilities))))) (CC and) (VP (VBN distributed) (NP (NN RAM)) (S (VP (TO to) (VP (VB solve) (NP (JJ hard) (NN search) (NNS problems))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP investigate) (NP (NP (NP (NN Hash)) (HYPH -) (VP (VBN Distributed) (NP (DT A) (X (SYM *))))) (PRN (-LRB- -LRB-) (NP (NN HDA) (SYM *)) (-RRB- -RRB-)) (, ,) (NP (NP (NP (DT a) (JJ simple) (NN approach)) (PP (IN to) (NP (JJ parallel) (ADJP (RBS best) (HYPH -) (JJ first)) (NN search)))) (SBAR (WHNP (WDT that)) (S (ADVP (RB asynchronously)) (VP (VBZ distributes)))))))) (CC and) (S (NP (NNS schedules)) (VP (VBP work) (PP (IN among) (NP (NP (NNS processors)) (PP (VBN based) (PP (IN on) (NP (NP (DT a) (NN hash) (NN function)) (PP (IN of) (NP (DT the) (NN search) (NN state)))))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP use) (NP (DT this) (NN approach)) (PP (IN to) (S (VP (VB parallelize) (NP (DT the) (NN A))))))) (NFP *) (FRAG (NP (NN algorithm)) (PP (IN in) (NP (NP (DT an) (JJ optimal) (JJ sequential) (NN version)) (PP (IN of) (NP (NP (DT the) (NML (JJ Fast) (NNP Downward)) (NN planner)) (, ,) (CONJP (RB as) (RB well) (IN as)) (NP (DT a) (NML (CD 24) (HYPH -) (NN puzzle)) (NN solver))))))) (. .))
(S (NP (NP (DT The) (JJ scaling) (NN behavior)) (PP (IN of) (NP (NN HDA)))) (NFP *) (VP (VBZ is) (VP (VBN evaluated) (ADVP (RB experimentally)) (PP (IN on) (NP (NP (DT a) (VBN shared) (NN memory)) (, ,) (NP (NP (NN multicore) (NN machine)) (PP (IN with) (NP (CD 8) (NNS cores)))) (, ,) (NP (NP (DT a) (NN cluster)) (PP (IN of) (NP (NP (NN commodity) (NNS machines)) (VP (VBG using) (PRT (RP up)) (PP (IN to) (NP (CD 64) (NNS cores))))))) (, ,) (CC and) (NP (NML (JJ large) (HYPH -) (NN scale)) (NML (JJ high) (HYPH -) (NN performance)) (NNS clusters)))) (, ,) (S (VP (VBG using) (PRT (RP up)) (PP (IN to) (NP (CD 2400) (NNS processors))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (DT this) (NN approach)) (VP (VBZ scales) (ADVP (RB well)) (, ,) (S (VP (VBG allowing) (NP (NP (DT the) (JJ effective) (NN utilization)) (PP (IN of) (NP (NP (JJ large) (NNS amounts)) (PP (IN of) (NP (VBN distributed) (NN memory)))))) (PP (IN to) (S (ADVP (RB optimally)) (VP (VB solve) (NP (NP (NNS problems)) (SBAR (WHNP (WDT which)) (S (VP (VBP require) (NP (NP (NNS terabytes)) (PP (IN of) (NP (NNP RAM))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (ADVP (RB also)) (VBP compare) (NP (NP (NNP HDA)) (NFP *) (PP (TO to) (NP (NP (NML (NNP Transposition) (HYPH -) (NN table)) (VBN Driven) (ADJP (NP (NP (NN Scheduling) (-LRB- -LRB-) (NN TDS) (-RRB- -RRB-)) (, ,) (NP (DT a) (NN hash))) (HYPH -) (VBN based)) (NN parallelization)) (PP (IN of) (NP (NNP IDA)) (X (NFP *))))))) (, ,) (CC and) (VP (VBP show) (SBAR (IN that) (, ,) (S (PP (IN in) (NP (NP (NN planning) (, ,) (NN HDA)) (X (NFP *)))) (ADVP (RB significantly)) (VP (VBZ outperforms) (NP (NN TDS))))))) (. .))
(S (NP (NP (DT A) (JJ simple) (NN hybrid)) (SBAR (WHNP (WDT which)) (S (VP (VBZ combines) (NP (NP (NN HDA)) (NFP *) (PP (CC and) (NP (NN TDS) (S (VP (TO to) (VP (VB exploit) (NP (NP (NNS strengths)) (PP (IN of) (NP (DT both) (NNS algorithms)))))))))))))) (VP (VBZ is) (VP (VBN proposed) (CC and) (VBN evaluated))) (. .))
