(S (NP (DT The) (NNP Libopt) (NN environment)) (VP (VBZ is) (NP (DT both) (NP (DT a) (NN methodology)) (CC and) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NNS tools)))) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB be) (VP (VBN used) (PP (IN for) (S (VP (VBG testing) (, ,) (VBG comparing) (, ,) (CC and) (VBG profiling) (NP (NNS solvers)) (PP (IN on) (NP (NP (NNS problems)) (VP (VBG belonging) (PP (TO to) (NP (JJ various) (NNS collections)))))))))))))))) (. .))
(S (NP (DT These) (NNS collections)) (VP (MD can) (VP (VB be) (ADJP (JJ heterogeneous)) (PP (IN in) (NP (DT the) (NN sense) (SBAR (IN that) (S (NP (PRP$ their) (NNS problems)) (VP (MD can) (VP (VB have) (NP (NP (JJ common) (NNS features)) (SBAR (WHNP (WDT that)) (S (VP (VBP differ) (PP (PP (IN from) (NP (CD one) (NN collection))) (PP (TO to) (NP (DT the) (JJ other)))))))))))))))) (. .))
(S (NP (NNP Libopt)) (VP (VBZ brings) (NP (NP (DT a) (JJ unified) (NN view)) (PP (IN on) (NP (DT this) (JJ composite) (NN world)))) (PP (IN by) (S (VP (VBG offering) (, ,) (PP (IN for) (NP (NN example))) (, ,) (NP (DT the) (NN possibility) (S (VP (TO to) (VP (VB run) (NP (DT any) (NN solver)) (PP (IN on) (NP (NP (DT any) (NN problem)) (ADJP (NN compatible) (PP (IN with) (NP (PRP it)))))) (, ,) (S (VP (VBG using) (NP (DT the) (JJ same) (NNP Unix/Linux) (NN command)))))))))))) (. .))
(S (NP (DT The) (NN environment)) (ADVP (RB also)) (VP (VBZ provides) (NP (NP (NNS tools)) (PP (IN for) (S (VP (VBG comparing) (NP (NP (DT the) (NNS results)) (VP (VBN obtained) (PP (IN by) (NP (NNS solvers))) (PP (IN on) (NP (NP (DT a) (VBN specified) (NN set)) (PP (IN of) (NP (NNS problems)))))))))))) (. .))
(S (NP (NP (JJS Most)) (PP (IN of) (NP (NP (DT the) (NNS scripts)) (VP (VBG going) (PP (IN with) (NP (DT the) (NNP Libopt) (NN environment))))))) (VP (VBP have) (VP (VBN been) (VP (VBN written) (PP (IN in) (NP (NNP Perl)))))) (. .))
