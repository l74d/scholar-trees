(S (PP (IN In) (NP (JJ many) (JJ lock-free) (NN algorithms))) (, ,) (S (NP (NNS threads)) (VP (VBP help) (NP (CD one) (DT another)))) (, ,) (CC and) (S (NP (DT each) (NN operation)) (VP (VBZ creates) (NP (NP (DT a) (NN descriptor)) (SBAR (WHNP (WDT that)) (S (VP (VBZ describes) (SBAR (WHADVP (WRB how)) (S (NP (JJ other) (NNS threads)) (VP (MD should) (VP (VB help) (NP (PRP it)))))))))))) (. .))
(S (S (VP (VBG Allocating) (CC and) (VBG reclaiming) (NP (NNS descriptors)))) (VP (NNS introduces) (NP (JJ significant) (NN space) (CC and) (NN time) (NN overhead))) (. .))
(S (NP (PRP We)) (VP (VBP introduce) (NP (NP (DT the) (JJ first) (NN descriptor) (NN abstract) (NNS data) (NN type)) (PRN (-LRB- -LRB-) (NP (NNP ADT)) (-RRB- -RRB-)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ captures) (NP (NP (DT the) (NN usage)) (PP (IN of) (NP (NNS descriptors))) (PP (IN by) (NP (JJ lock-free) (NN algorithms))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB then)) (VP (VB develop) (NP (NP (DT a) (JJ weak) (NN descriptor) (NNP ADT)) (SBAR (WHNP (WDT which)) (S (VP (VP (VBZ has) (NP (JJR weaker) (NNS semantics))) (, ,) (CC but) (VP (MD can) (VP (VB be) (VP (VBN implemented) (ADVP (RB significantly) (RBR more) (RB efficiently)))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (NP (NP (DT a) (JJ large) (NN class)) (PP (IN of) (NP (JJ lock-free) (NNS algorithms)))) (VP (MD can) (VP (VB be) (VP (VBN transformed) (S (VP (TO to) (VP (VB use) (NP (JJ weak) (NNS descriptors))))))))))) (, ,) (CC and) (VP (VB demonstrate) (NP (PRP$ our) (NN technique)) (PP (IN by) (S (VP (VBG transforming) (NP (NP (JJ several) (NNS algorithms)) (, ,) (PP (VBG including) (NP (DT the) (VBG leading) (NN k-compare-and-swap) (PRN (-LRB- -LRB-) (JJ k-CAS) (-RRB- -RRB-)) (NN algorithm))))))))) (. .))
(S (NP (DT The) (JJ original) (JJ k-CAS) (NN algorithm)) (VP (NNS allocates) (NP (QP (IN at) (JJS least) (VB k+1)) (JJ new) (NNS descriptors)) (PP (IN per) (NP (NN k-CAS)))) (. .))
(S (PP (IN In) (NP (NN contrast))) (, ,) (S (NP (PRP$ our) (NN implementation)) (VP (VBZ allocates) (NP (NP (CD two) (NNS descriptors)) (PP (IN per) (NP (NN process)))))) (, ,) (CC and) (S (NP (DT each) (NN process)) (ADVP (RB simply)) (VP (VBZ reuses) (NP (PRP$ its) (CD two) (NNS descriptors)))) (. .))
(S (NP (NP (NNS Experiments)) (PP (IN on) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (NNS workloads)))))) (VP (VBP show) (NP (NP (NP (JJ significant) (NN performance) (NNS improvements)) (PP (IN over) (NP (NP (NNS implementations)) (SBAR (WHNP (WDT that)) (S (VP (VBP reclaim) (NP (NNS descriptors)))))))) (, ,) (CC and) (NP (NP (NNS reductions)) (PP (IN of) (NP (NP (QP (IN up) (TO to) (CD three)) (NNS orders)) (PP (IN of) (NP (NN magnitude))))) (PP (IN in) (NP (JJ peak) (NN memory) (NN usage)))))) (. .))
