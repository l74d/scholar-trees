(S (NP (DT A) (NN zipper)) (VP (VBZ is) (NP (NP (DT a) (JJ powerful) (NN technique)) (PP (IN of) (S (VP (VBG representing) (NP (NP (DT a) (ADJP (RB purely) (JJ functional)) (NNS data) (NN structure)) (PP (IN in) (NP (NP (DT a) (NN way)) (SBAR (WHNP (WDT that)) (S (VP (VBZ allows) (NP (JJ fast) (NN access)) (PP (IN to) (NP (DT a) (JJ specific) (NN element)))))))))))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (ADVP (RB often)) (VP (VBN used) (PP (IN in) (NP (NP (NNS cases)) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NML (ADJP (JJ imperative)) (NNS data)) (NNS structures)) (VP (MD would) (VP (VB use) (NP (DT a) (JJ mutable) (NN pointer)))))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NP (DT the) (NN efficiency)) (PP (IN of) (NP (NP (NNS zippers)) (PP (IN as) (NP (NP (DT a) (NN replacement)) (PP (IN for) (NP (JJ mutable) (NNS pointers)))))))) (VP (VBZ is) (RB not) (ADJP (RB sufficiently) (VBN explored))) (. .))
(S (NP (PRP We)) (VP (VBP attempt) (S (VP (TO to) (VP (VB address) (NP (DT this) (NN issue)) (PP (IN by) (S (VP (VBG comparing) (NP (NP (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (NNS zippers)))) (CC and) (NP (NP (JJ mutable) (NNS pointers)) (PP (IN in) (NP (NP (CD two) (JJ common) (NNS scenarios)) (CC and) (NP (CD three) (JJ different) (NNS languages)))))) (: :) (NP (NNP C++) (, ,) (NNP C#) (, ,) (CC and) (NNP Haskell)))))))))) (. .))
