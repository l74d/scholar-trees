(S (NP (PRP We)) (VP (VBP study) (NP (NP (DT the) (NN notion)) (PP (IN of) (NP (NP (NN extensibility)) (PP (IN in) (NP (JJ functional) (NNS data) (NNS types)))))) (, ,) (PP (IN as) (NP (NP (DT a) (JJ new) (NN approach)) (PP (IN to) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG decorating) (NP (JJ abstract) (NN syntax) (NNS trees)) (PP (IN with) (NP (NP (JJ additional) (NNS sets)) (PP (IN of) (NP (NN information))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBD observed) (NP (NP (DT the) (NN need)) (PP (IN for) (NP (JJ such) (NN extensibility)))) (PP (IN while) (S (VP (VBG redesigning) (NP (DT the) (NNS data) (NNS types)) (S (VP (VBG representing) (NP (NNP Haskell) (JJ abstract) (NN syntax)) (PP (IN inside) (NP (NN GHC))))))))) (. .))
(S (ADVP (RB Specifically)) (, ,) (NP (PRP we)) (VP (VBP describe) (NP (PRP$ our) (NN approach)) (PP (IN to) (NP (NP (DT the) (NML (NN tree) (HYPH -) (NN decoration)) (NN problem)) (VP (VBG using) (NP (NP (DT a) (JJ novel) (JJ syntactic) (NN machinery)) (PP (IN in) (NP (NNP Haskell)))) (PP (IN for) (S (VP (VBG expressing) (NP (JJ extensible) (NNS data) (NNS types))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (DT the) (JJ syntactic) (NN machinery)) (VP (VBZ is) (ADJP (JJ complete) (PP (IN in) (SBAR (IN that) (S (NP (PRP it)) (VP (MD can) (VP (VB express) (NP (NP (PDT all) (DT the) (ADJP (RB syntactically) (JJ possible)) (NNS forms)) (PP (IN of) (NP (NNS extensions)))) (PP (IN to) (NP (JJ algebraic) (NML (NNS data) (NN type)) (NNS declarations))))))))))))) (. .))
(S (ADVP (RB Then)) (, ,) (NP (PRP we)) (VP (VBP describe) (NP (NP (DT an) (NN encoding)) (PP (IN of) (NP (DT the) (JJ syntactic) (NN machinery)))) (PP (VBN based) (PP (IN on) (NP (NP (DT the) (VBG existing) (NNS features)) (PP (IN in) (NP (NNP Glasgow) (NNP Haskell) (NNP Compiler)))))) (PRN (-LRB- -LRB-) (NP (NNP GHC)) (-RRB- -RRB-))) (. .))
