(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT an) (NN approach)) (SBAR (S (VP (TO to) (VP (VB obtain) (NP (NP (ADJP (RB formally) (JJ verified)) (NNS implementations)) (PP (IN of) (NP (JJ classical) (NNP Computational) (NNP Logic) (NN algorithms)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP choose) (NP (DT the) (NNP Why3) (NN platform)) (SBAR (IN because) (S (S (NP (PRP it)) (VP (VBZ allows) (S (VP (TO to) (VP (VB implement) (NP (NNS functions)) (PP (IN in) (NP (NP (DT a) (NN style)) (ADJP (RB very) (RB close) (PP (TO to) (NP (DT the) (JJ mathematical) (NNS definitions))))))))))) (, ,) (CONJP (RB as) (RB well) (IN as)) (S (NP (PRP it)) (VP (VBZ allows) (NP (NP (DT a) (JJ high) (NN degree)) (PP (IN of) (NP (NN automation))) (PP (IN in) (NP (DT the) (NN verification) (NN process))))))))) (. .))
(S (PP (IN As) (NP (NP (NN proof)) (PP (IN of) (NP (NN concept))))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (NP (DT a) (JJ mathematical) (NN definition)) (PP (IN of) (NP (NP (DT the) (NN algorithm)) (SBAR (S (VP (TO to) (VP (VB convert) (NP (JJ propositional) (NN formulae)) (PP (TO to) (NP (VB conjunctive) (JJ normal) (NN form)))))))))) (, ,) (NP (NP (NNS implementations)) (PP (IN in) (NP (NP (NNP WhyML)) (PRN (-LRB- -LRB-) (NP (NP (DT the) (NNP Why3) (NN language)) (, ,) (ADJP (RB very) (JJ similar) (PP (TO to) (NP (NNP OCaml))))) (-RRB- -RRB-))))) (, ,) (CC and) (NP (NP (NN proofs)) (PP (IN of) (NP (NP (NN correctness)) (PP (IN of) (NP (DT the) (NNS implementations)))))))) (. .))
(S (NP (PRP We)) (VP (VBP apply) (NP (PRP$ our) (NN proposal)) (PP (IN on) (NP (NP (NP (CD two) (NNS variants)) (PP (IN of) (NP (DT this) (NN algorithm)))) (: :) (NP (NP (NP (CD one)) (PP (IN in) (NP (JJ direct-style)))) (CC and) (NP (NP (DT another)) (PP (IN with) (NP (DT an) (JJ explicit) (NN stack) (NN structure)))))))) (. .))
(S (S (VP (VBG Being) (NP (DT both) (JJ first-order) (NNS versions)))) (, ,) (NP (NNP Why3)) (VP (VBZ processes) (NP (DT the) (NN proofs)) (ADVP (RB naturally))) (. .))
