(S (NP (PRP We)) (VP (VBP present) (NP (DT an) (NN approach)) (S (VP (TO to) (VP (VB obtain) (ADVP (RB formally)) (VP (VBN verified) (NP (NP (NNS implementations)) (PP (IN of) (NP (JJ classical) (JJ Computational) (NN Logic) (NNS algorithms))))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP choose) (NP (DT the) (NN Why3) (NN platform)) (SBAR (IN because) (S (NP (PRP it)) (VP (VBZ allows) (S (VP (TO to) (VP (VB implement) (NP (NP (NNS functions)) (PP (IN in) (NP (DT a) (NN style)))) (ADVP (ADVP (RB very) (RB close)) (PP (IN to) (NP (DT the) (JJ mathematical) (NNS definitions)))))))))))) (, ,) (CONJP (RB as) (RB well) (IN as)) (S (NP (PRP it)) (VP (VBZ allows) (NP (NP (DT a) (JJ high) (NN degree)) (PP (IN of) (NP (NN automation)))) (PP (IN in) (NP (DT the) (NN verification) (NN process))))) (. .))
(S (PP (IN As) (NP (NP (NN proof)) (PP (IN of) (NP (NN concept))))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT a) (JJ mathematical) (NN definition)) (PP (IN of) (NP (DT the) (NN algorithm)))) (S (VP (TO to) (VP (VB convert) (NP (JJ propositional) (NNS formulae)) (PP (IN to) (NP (NP (JJ conjunctive) (JJ normal) (NN form)) (, ,) (NP (NP (NNS implementations)) (PP (IN in) (NP (NNP WhyML))) (PRN (-LRB- -LRB-) (NP (NP (DT the) (NN Why3) (NN language)) (, ,) (ADJP (RB very) (JJ similar) (PP (IN to) (NP (NN OCaml))))) (-RRB- -RRB-))) (, ,) (CC and) (NP (NP (NNS proofs)) (PP (IN of) (NP (NP (NN correctness)) (PP (IN of) (NP (DT the) (NNS implementations)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP apply) (NP (PRP$ our) (NN proposal)) (PP (IN on) (NP (NP (NP (NP (CD two) (NNS variants)) (PP (IN of) (NP (DT this) (NN algorithm)))) (: :) (NP (NP (CD one)) (PP (IN in) (NP (JJ direct) (HYPH -) (NN style))))) (CC and) (NP (NP (DT another)) (PP (IN with) (NP (DT an) (JJ explicit) (NN stack) (NN structure))))))) (. .))
(S (S (VP (VBG Being) (NP (DT both) (NML (JJ first) (HYPH -) (NN order)) (NNS versions)))) (, ,) (NP (NN Why3)) (VP (VBZ processes) (NP (DT the) (NNS proofs)) (ADVP (RB naturally))) (. .))
