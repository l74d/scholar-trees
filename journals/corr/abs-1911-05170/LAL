(S (S (NP (PRP We)) (VP (VBP apply) (NP (DT the) (NNS power-of-two-choices) (NN paradigm)) (PP (TO to) (NP (NP (VB random) (NN walk)) (PP (IN on) (NP (DT a) (NN graph))))))) (: :) (S (PP (RB rather) (IN than) (S (VP (VBG moving) (PP (TO to) (NP (DT a) (JJ uniform) (NN random) (NNS neighbour))) (PP (IN at) (NP (DT each) (NN step)))))) (, ,) (NP (DT a) (NN controller)) (VP (VBZ is) (VP (VBN allowed) (S (VP (TO to) (VP (VB choose) (PP (IN from) (NP (CD two) (JJ independent) (JJ uniform) (NN random) (NNS neighbours))))))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT this)) (VP (VBZ allows) (S (NP (DT the) (NN controller)) (VP (TO to) (ADVP (RB significantly)) (VP (VB accelerate) (NP (NP (DT the) (NN hitting) (CC and) (NN cover) (NNS times)) (PP (IN in) (NP (JJ several) (JJ natural) (NN graph) (NNS classes))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VP (VBP consider) (NP (NP (DT the) (JJ algorithmic) (NN question)) (PP (IN of) (S (VP (VBG computing) (NP (DT an) (JJ optimal) (NN strategy))))))) (, ,) (CC and) (VP (VB prove) (NP (NP (DT a) (NN dichotomy)) (PP (IN in) (NP (NN efficiency))) (PP (IN between) (NP (NP (VBG computing) (NNS strategies)) (PP (IN for) (NP (VBG hitting) (CC and) (JJ cover) (NNS times)))))))) (. .))
