(S (PP (IN In) (NP (DT the) (NN past))) (, ,) (NP (NP (DT the) (JJ semantic) (NNS issues)) (VP (VBN raised) (PP (IN by) (NP (NP (DT the) (JJ non-monotonic) (NN nature)) (PP (IN of) (NP (NNS aggregates))))))) (ADVP (RB often)) (VP (VBD prevented) (NP (PRP$ their) (NN use)) (PP (IN in) (NP (NP (DT the) (JJ recursive) (NNS statements)) (PP (IN of) (NP (NP (NN logic) (NNS programs)) (CC and) (NP (JJ deductive) (NNS databases))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NP (DT the) (ADJP (RB recently) (VBN introduced)) (NN notion)) (PP (IN of) (NP (NN Pre-mappability) (-LRB- -LRB-) (NN PreM) (-RRB- -RRB-)))) (VP (VBZ has) (VP (VBN shown) (SBAR (IN that) (S (, ,) (PP (IN in) (NP (NP (JJ key) (NNS applications)) (PP (IN of) (NP (NN interest))))) (, ,) (NP (NNS aggregates)) (VP (MD can) (VP (VB be) (VP (VBN used) (PP (IN in) (NP (NN recursion))) (S (VP (TO to) (VP (VB optimize) (NP (NP (DT the) (NML (ADJP (JJ perfect)) (HYPH -) (NN model)) (NNS semantics)) (PP (IN of) (NP (ADJP (NP (JJ aggregate)) (HYPH -) (JJ stratified)) (NNS programs)))))))))))))) (. .))
(S (ADVP (RB Therefore)) (NP (PRP we)) (VP (MD can) (VP (VB preserve) (NP (NP (DT the) (JJ declarative) (JJ formal) (NNS semantics)) (PP (IN of) (NP (JJ such) (NNS programs)))) (PP (IN while) (S (VP (VBG achieving) (NP (NP (DT a) (ADJP (RB highly) (JJ efficient)) (JJ operational) (NNS semantics)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (JJ conducive) (PP (IN to) (NP (NP (JJ scalable) (NNS implementations)) (PP (IN on) (NP (ADJP (JJ parallel) (CC and) (VBN distributed)) (NNS platforms))))))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (PP (IN with) (NP (NNP PreM))) (, ,) (NP (NP (DT a) (JJ wide) (NN spectrum)) (PP (IN of) (NP (NP (NP (JJ classical) (NNS algorithms)) (PP (IN of) (NP (JJ practical) (NN interest)))) (, ,) (VP (VBG ranging) (PP (IN from) (NP (NP (ADJP (NP (NN graph) (NML (NML (NNS analytics)) (CC and) (NML (JJ dynamic) (NN programming)))) (VBN based)) (NN optimization) (NNS problems)) (PP (IN to) (NP (NML (NML (NNS data) (NN mining)) (CC and) (NML (NN machine) (NN learning))) (NNS applications))))))))) (VP (MD can) (VP (VB be) (ADVP (RB concisely)) (VP (VBN expressed) (PP (IN in) (NP (JJ declarative) (NNS languages))) (PP (IN by) (S (VP (VBG using) (NP (NNS aggregates)) (PP (IN in) (NP (NN recursion)))))))))))) (. .))
(S (NP (PRP$ Our) (NNS examples)) (VP (VBP are) (ADVP (RB also)) (VP (VBN used) (S (VP (TO to) (VP (VB show) (SBAR (IN that) (S (NP (NNP PreM)) (VP (MD can) (VP (VB be) (VP (VBN checked) (S (VP (VBG using) (NP (NP (JJ simple) (NNS techniques)) (CC and) (NP (VBN templatized) (NN verification) (NNS strategies))))))))))))))) (. .))
(S (NP (NP (DT A) (JJ wide) (NN range)) (PP (IN of) (NP (JJ advanced) (NNP BigData) (NNS applications)))) (VP (MD can) (ADVP (RB now)) (VP (VB be) (VP (VBN expressed) (ADVP (RB declaratively)) (PP (IN in) (NP (NP (ADJP (NP (NN logic)) (HYPH -) (VBN based)) (NNS languages)) (, ,) (PP (VBG including) (NP (NP (NNP Datalog)) (, ,) (NP (NNP Prolog)) (, ,) (CC and) (NP (RB even) (NN SQL)))))) (, ,) (PP (IN while) (S (VP (VBG enabling) (NP (PRP$ their) (NN execution)) (PP (IN with) (NP (JJ superior) (NN performance) (CC and) (NN scalability))))))))) (. .))
