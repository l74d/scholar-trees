(S (S (NP (PRP We)) (VP (VBP consider) (NP (JJ unordered) (NN XML)) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (NP (DT the) (JJ relative) (NN order)) (PP (IN among) (NP (NNS siblings)))) (VP (VBZ is) (VP (VBN ignored))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP investigate) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG learning) (NP (NNS schemas)) (PP (IN from) (NP (NP (NNS examples)) (PP (VBN given) (PP (IN by) (NP (DT the) (NN user)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP focus) (PP (IN on) (NP (NP (NP (DT the) (NN schema) (NNS formalisms)) (VP (VBN proposed) (PP (IN in)) (PRN (-LRB- [) (NP (CD 10)) (-RRB- ])))) (: :) (NP (NP (NP (JJ disjunctive) (NN multiplicity) (NNS schemas)) (-LRB- -LRB-) (NP (NN DMS)) (-RRB- -RRB-)) (CC and) (NP (PRP$ its) (ADJP (NP (NN restriction) (, ,) (NN disjunction)) (HYPH -) (JJ free)) (NN multiplicity) (NNS schemas))))) (PRN (-LRB- -LRB-) (NP (NN MS)) (-RRB- -RRB-))) (. .))
(S (NP (DT A) (NN learning) (NN algorithm)) (VP (VP (VBZ takes) (PP (RB as) (NP (NN input))) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (NP (NP (NN XML) (NNS documents)) (SBAR (WHNP (WDT which)) (S (VP (MD must) (VP (VB satisfy) (NP (DT the) (NN schema))))))) (-LRB- -LRB-) (NP (ADVP (FW i.e.)) (, ,) (JJ positive) (NNS examples)) (-RRB- -RRB-)) (CC and) (NP (NP (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NN XML) (NNS documents)))) (SBAR (WHNP (WDT which)) (S (VP (MD must) (RB not) (VP (VB satisfy) (NP (DT the) (NN schema))))))) (-LRB- -LRB-) (NP (ADVP (FW i.e.)) (, ,) (JJ negative) (NNS examples)) (-RRB- -RRB-)))))) (, ,) (CC and) (VP (VBZ returns) (NP (DT a) (NN schema)) (S (ADJP (JJ consistent) (PP (IN with) (NP (DT the) (NNS examples))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP investigate) (NP (NP (DT a) (NN learning) (NN framework)) (VP (VBN inspired) (PP (IN by) (NP (NN Gold))))) (PRN (-LRB- [) (NP (CD 18)) (-RRB- ])))) (, ,) (S (SBAR (WHADVP (WRB where)) (S (NP (DT a) (NN learning) (NN algorithm)) (VP (MD should) (VP (VB be) (ADJP (JJ sound)) (ADVP (FW i.e.)))))) (, ,) (ADVP (RB always)) (VP (VB return) (S (NP (DT a) (NN schema)) (ADJP (JJ consistent) (PP (IN with) (NP (NP (DT the) (NNS examples)) (PP (VBN given) (PP (IN by) (NP (DT the) (NN user)))))))))) (, ,) (CC and) (S (NP (NP (JJ complete)) (ADVP (FW i.e.))) (, ,) (ADJP (JJ able) (S (VP (TO to) (VP (VB produce) (NP (DT every) (NN schema)) (PP (IN with) (NP (NP (DT a) (ADJP (RB sufficiently) (JJ rich)) (NN set)) (PP (IN of) (NP (NNS examples)))))))))) (. .))
(S (ADVP (RB Additionally)) (, ,) (NP (DT the) (NN algorithm)) (VP (MD should) (VP (VB be) (ADJP (ADJP (JJ efficient)) (ADVP (FW i.e.)) (, ,) (ADJP (JJ polynomial))) (PP (IN in) (NP (NP (DT the) (NN size)) (PP (IN of) (NP (DT the) (NN input))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT the) (NN DMS)) (VP (VBP are) (ADJP (JJ learnable) (PP (IN from) (NP (JJ positive) (NNS examples)))) (ADVP (RB only))))))) (, ,) (CC but) (S (NP (PRP they)) (VP (VBP are) (RB not) (ADJP (JJ learnable)) (SBAR (WHADVP (WRB when)) (S (NP (PRP we)) (ADVP (RB also)) (VP (VBP allow) (NP (JJ negative) (NNS examples))))))) (. .))
(S (ADVP (RB Moreover)) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (DT the) (NN MS)) (VP (VBP are) (ADJP (JJ learnable) (PP (IN in) (NP (NP (DT the) (NN presence)) (PP (IN of) (NP (JJ positive) (NNS examples)))))) (ADVP (RB only)) (, ,) (NAC (CC and) (ADVP (RB also)) (PP (IN in) (NP (NP (DT the) (NN presence)) (PP (IN of) (NP (DT both) (ADJP (JJ positive) (CC and) (JJ negative)) (NNS examples)))))))))) (. .))
(S (ADVP (RB Furthermore)) (, ,) (PP (IN for) (NP (DT the) (JJ learnable) (NNS cases))) (, ,) (NP (DT the) (VBN proposed) (NN learning) (NNS algorithms)) (VP (VBP return) (S (NP (JJ minimal) (NNS schemas)) (ADJP (JJ consistent) (PP (IN with) (NP (DT the) (NNS examples)))))) (. .))
