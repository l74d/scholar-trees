(S (NP (PRP We)) (VP (VBP give) (NP (NP (DT the) (JJ first) (NNP O) (PRN (-LRB- -LRB-) (JJ m) (NN polylog) (PRN (PRN (-LRB- -LRB-) (JJ n) (-RRB- -RRB-)) (-RRB- -RRB-))) (NN time) (NN algorithms)) (PP (IN for) (S (VP (VP (VBG approximating) (NP (NP (JJ maximum) (NNS flows)) (PP (IN in) (NP (JJ undirected) (NN graphs))))) (CC and) (VP (VBG constructing) (NP (NN polylog) (PRN (-LRB- -LRB-) (JJ n) (-RRB- -RRB-)) (NN -quality) (JJ cut-approximating) (JJ hierarchical) (NN tree) (NNS decompositions)))))))) (. .))
(S (NP (PRP$ Our) (NN algorithm)) (VP (VBZ invokes) (NP (NP (VBG existing) (NNS algorithms)) (PP (IN for) (NP (DT these) (CD two) (NNS problems)))) (ADVP (RB recursively)) (SBAR (IN while) (S (VP (ADVP (RB gradually)) (VBG incorporating) (NP (NN size) (NNS reductions)))))) (. .))
(S (NP (DT These) (NN size) (NNS reductions)) (VP (VBP are) (PP (IN in) (NP (NN turn))) (VP (VBN obtained) (PP (IN via) (NP (NP (NNS ultra-sparsifiers)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (NP (NP (JJ key) (NNS tools)) (PP (IN in) (NP (NP (NNS solvers)) (PP (IN for) (NP (JJ symmetric) (ADJP (RB diagonally) (JJ dominant)) (PRN (-LRB- -LRB-) (NNP SDD) (-RRB- -RRB-)) (VBP linear) (NNS systems))))))))))))) (. .))
