(S (S (NP (NP (VBG Streaming)) (PP (IN of) (NP (NNP XML) (NNS transformations)))) (VP (VBZ is) (NP (DT a) (JJ challenging) (NN task)))) (CC and) (S (NP (ADJP (RB only) (RB very) (JJ few)) (NNS systems)) (VP (NN support) (NP (NN streaming)))) (. .))
(S (NP (NN Research) (VBZ approaches)) (ADVP (RB generally)) (VP (VP (JJ define) (NP (NP (NN custom) (NNS fragments)) (PP (IN of) (NP (NN XQuery) (CC and) (NN XPath))) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (JJ amenable) (PP (TO to) (NP (VBG streaming))))))))) (, ,) (CC and) (ADVP (RB then)) (VP (VB design) (NP (NP (NN custom) (NN algorithms)) (PP (IN for) (NP (DT each) (NN fragment)))))) (. .))
(S (NP (DT These) (NNS languages)) (VP (VBP have) (NP (JJ several) (NNS shortcomings))) (. .))
(S (ADVP (RB Here)) (NP (PRP we)) (VP (VBP take) (NP (NP (DT a) (RBR more) (NNS principles) (VBP approach)) (PP (TO to) (NP (NP (DT the) (NN problem)) (PP (IN of) (NP (VBG streaming) (JJ XQuery-based) (NNS transformations))))))) (. .))
(S (NP (PRP We)) (VP (VBP start) (PP (IN with) (NP (NP (NP (DT an) (JJ elegant) (NN transducer) (NN model)) (SBAR (WHPP (IN for) (WHNP (WDT which))) (S (NP (JJ many) (JJ static) (NN analysis) (NNS problems)) (VP (VBP are) (ADJP (JJ well-understood)))))) (: :) (NP (NP (DT the) (NNP Macro) (NNP Forest) (NNP Transducer)) (PRN (-LRB- -LRB-) (NP (NNP MFT)) (-RRB- -RRB-)))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (DT a) (JJ large) (NN fragment)) (PP (IN of) (NP (NN XQuery)))) (VP (MD can) (VP (VB be) (VP (VP (VBN translated) (PP (IN into) (NP (NNP MFTs))) (: â€”) (FRAG (: -) (ADVP (RB indeed)) (, ,) (NP (NP (DT a) (NN fragment)) (PP (IN of) (NP (NN XQuery))) (, ,) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB express) (NP (NP (JJ important) (NNS features)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (VBG missing) (PP (IN from) (NP (NP (JJ other) (NNP XQuery) (NN stream) (NNS engines)) (, ,) (PP (JJ such) (IN as) (NP (NN GCX))))))))))))))))) (: :) (S (NP (NP (PRP$ our) (NN fragment)) (PP (IN of) (NP (NNP XQuery)))) (VP (VBZ supports) (NP (NN XPath) (NNS predicates) (CC and) (NNS let-statements)))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB then)) (VP (VBP rely) (PP (IN on) (NP (NP (NP (DT a) (JJ streaming) (NN execution) (NN engine)) (PP (IN for) (NP (NNP MFTs)))) (, ,) (NP (NP (CD one)) (SBAR (WHNP (WDT which)) (S (VP (VBZ uses) (NP (NP (DT a) (JJ well-founded) (NN set)) (PP (IN of) (NP (NP (NNS optimizations)) (PP (IN from) (NP (JJ functional) (NN programming))) (, ,) (PP (JJ such) (IN as) (NP (NP (JJ strictness) (NN analysis)) (CC and) (NP (NN deforestation)))))))))))))) (. .))
(S (NP (PRP$ Our) (NN prototype)) (VP (NNS achieves) (NP (NP (NN time) (CC and) (NN memory) (NN efficiency)) (ADJP (JJ comparable) (PP (TO to) (NP (NP (NP (DT the) (JJS fastest) (VBN known) (NN engine)) (PP (IN for) (NP (NNP XQuery) (NN streaming)))) (, ,) (NP (NNP GCX))))))) (. .))
(S (NP (DT This)) (VP (VBZ is) (ADJP (JJ surprising)) (SBAR (IN because) (S (NP (PRP$ our) (NN engine)) (VP (VP (NNS relies) (PP (IN on) (NP (DT the) (NNP OCaml) (ADJP (VBN built) (IN in)) (NN garbage) (NN collector)))) (CC and) (VP (VBZ does) (RB not) (VP (VB use) (NP (DT any) (JJ specialized) (NN buffer) (NN management)))) (, ,) (SBAR (IN while) (S (NP (NP (NNP GCX) (POS 's)) (NN efficiency)) (VP (VBZ is) (ADJP (JJ due) (PP (TO to) (NP (ADJP (VB clever) (CC and) (VB explicit)) (NN buffer) (NN management))))))))))) (. .))
