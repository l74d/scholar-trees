(S (S (NP (NP (NN Streaming)) (PP (IN of) (NP (NN XML) (NNS transformations)))) (VP (VBZ is) (NP (DT a) (JJ challenging) (NN task)))) (CC and) (S (ADVP (RB only) (RB very)) (NP (JJ few) (NNS systems)) (VP (VBP support) (NP (NN streaming)))) (. .))
(S (NP (NNP Research)) (VP (VP (VBZ approaches) (ADVP (RB generally)) (VP (VB define) (NP (NP (NP (NN custom) (NNS fragments)) (PP (IN of) (NP (NN XQuery) (CC and) (NN XPath)))) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (JJ amenable) (PP (IN to) (NP (NN streaming)))))))))) (, ,) (CC and) (ADVP (RB then)) (VP (NP (NML (NN design) (NN custom)) (NNS algorithms)) (PP (IN for) (NP (DT each) (NN fragment))))) (. .))
(S (NP (DT These) (NNS languages)) (VP (VBP have) (NP (JJ several) (NNS shortcomings))) (. .))
(S (ADVP (RB Here)) (NP (PRP we)) (VP (VBP take) (SBAR (S (NP (DT a) (JJR more) (NNS principles)) (VP (VBP approach) (PP (IN to) (NP (NP (DT the) (NN problem)) (PP (IN of) (NP (ADJP (NP (NN streaming) (NN XQuery)) (HYPH -) (VBN based)) (NNS transformations))))))))) (. .))
(S (NP (PRP We)) (VP (VBP start) (PP (IN with) (NP (NP (NP (DT an) (JJ elegant) (NN transducer) (NN model)) (SBAR (WHPP (IN for) (WHNP (WDT which))) (S (NP (JJ many) (NN static) (NN analysis) (NNS problems)) (VP (VBP are) (ADJP (RB well) (HYPH -) (VBN understood)))))) (: :) (NP (DT the) (NML (NNP Macro) (NNP Forest)) (NNP Transducer)) (PRN (-LRB- -LRB-) (NP (NNP MFT)) (-RRB- -RRB-))))) (. .))
(S (S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (DT a) (JJ large) (NN fragment)) (PP (IN of) (NP (NN XQuery)))) (VP (MD can) (VP (VB be) (VP (VBN translated) (PP (IN into) (NP (NNS MFTs)))))))))) (NFP ---) (S (ADVP (RB indeed)) (, ,) (NP (NP (DT a) (NN fragment)) (PP (IN of) (NP (NP (NN XQuery)) (, ,) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB express) (NP (NP (JJ important) (NNS features)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (VP (VBG missing) (PP (IN from) (NP (JJ other) (JJ XQuery) (NN stream) (NNS engines)))))))))))) (, ,))) (PP (JJ such) (IN as) (NP (NP (NN GCX)) (: :) (NP (NP (PRP$ our) (NN fragment)) (PP (IN of) (NP (NN XQuery))))))) (VP (VP (VBZ supports) (NP (NN XPath) (NNS predicates))) (CC and) (VP (VB let) (HYPH -) (NP (NNS statements))))) (. .))
(S (NP (PRP We)) (ADVP (RB then)) (VP (VBP rely) (PP (IN on) (NP (NP (DT a) (NN streaming) (NN execution) (NN engine)) (PP (IN for) (NP (NP (NNS MFTs)) (, ,) (NP (NP (CD one)) (SBAR (WHNP (WDT which)) (S (VP (VBZ uses) (NP (NP (DT a) (ADJP (RB well) (HYPH -) (VBN founded)) (NN set)) (PP (IN of) (NP (NP (NNS optimizations)) (PP (IN from) (NP (JJ functional) (NN programming))))) (, ,) (PP (JJ such) (IN as) (NP (NN strictness) (NN analysis) (CC and) (NN deforestation))))))))))))) (. .))
(S (NP (PRP$ Our) (NN prototype)) (VP (VBZ achieves) (S (NP (NML (NN time) (CC and) (NN memory)) (NN efficiency)) (ADJP (JJ comparable) (PP (IN to) (NP (NP (DT the) (ADJP (RBS fastest) (JJ known)) (NN engine)) (PP (IN for) (NP (NP (NN XQuery) (NN streaming)) (, ,) (NP (NN GCX))))))))) (. .))
(S (NP (DT This)) (VP (VBZ is) (ADJP (JJ surprising)) (SBAR (IN because) (S (NP (PRP$ our) (NN engine)) (VP (VP (VBZ relies) (PP (IN on) (NP (NP (DT the) (NNP OCaml)) (VP (VBN built) (PP (IN in) (NP (NN garbage) (NN collector))))))) (CC and) (VP (VBZ does) (RB not) (VP (VB use) (NP (DT any) (JJ specialized) (NN buffer) (NN management))))))) (, ,) (SBAR (IN while) (S (NP (NP (NNP GCX) (POS 's)) (NN efficiency)) (VP (VBZ is) (ADJP (JJ due) (PP (IN to) (NP (ADJP (JJ clever) (CC and) (JJ explicit)) (NN buffer) (NN management)))))))) (. .))
