(NP (NP (NN Context)) (: :) (S (NP (NN Compilation) (NN time)) (VP (VBZ is) (NP (NP (DT an) (JJ important) (NN factor)) (PP (IN in) (NP (NP (DT the) (NN adaptability)) (PP (IN of) (NP (DT a) (NN software) (NN project)))))))) (. .))
(S (NP (NNP Fast) (NN recompilation)) (VP (VBZ enables) (NP (NP (JJ cheap) (NN experimentation)) (PP (IN with) (NP (NP (NNS changes)) (PP (TO to) (NP (DT a) (NN project)))))) (, ,) (SBAR (IN as) (S (NP (DT those) (NNS changes)) (VP (MD can) (VP (VB be) (VP (VBN tested) (ADVP (RB quickly)))))))) (. .))
(S (NP (NNP Separate) (CC and) (JJ incremental) (NN compilation)) (VP (VBZ has) (VP (VBN been) (NP (NP (DT a) (NN topic)) (PP (IN of) (NP (NN interest)))) (PP (IN for) (NP (DT a) (JJ long) (NN time))) (S (VP (TO to) (VP (VB facilitate) (NP (JJ fast) (NN recompilation))))))) (. .))
(NP (NP (NN Inquiry)) (: :) (S (PP (IN Despite) (NP (NP (DT the) (NNS benefits)) (PP (IN of) (NP (DT an) (JJ incremental) (NN compiler))))) (, ,) (NP (JJ such) (NNS compilers)) (VP (VBP are) (ADVP (RB usually)) (RB not) (NP (DT the) (NN default)))) (. .))
(S (NP (DT This)) (VP (VBZ is) (SBAR (IN because) (S (NP (NN incrementalization)) (VP (VBZ requires) (NP (NP (ADJP (JJ cross-cutting) (, ,) (VBN complicated) (, ,) (CC and) (NN error-prone)) (NNS techniques)) (PP (JJ such) (IN as) (NP (NP (NN dependency) (NN tracking)) (, ,) (NP (VBG caching)) (, ,) (NP (NN cache) (NN invalidation)) (, ,) (CC and) (NP (NN change) (NN detection))))))))) (. .))
(S (PP (ADVP (RB Especially)) (IN in) (NP (NP (NNS compilers)) (PP (IN for) (NP (NP (NNS languages)) (PP (IN with) (NP (NP (JJ cross-module) (NNS definitions)) (CC and) (NP (NN integration)))))))) (, ,) (S (VP (ADVP (RB correctly) (CC and) (RB efficiently)) (VBG implementing) (NP (DT an) (JJ incremental) (NN compiler)))) (VP (MD can) (VP (VB be) (NP (DT a) (NN challenge)))) (. .))
(S (S (VP (VBG Retrofitting) (NP (NN incrementality)) (PP (IN into) (NP (DT a) (NN compiler))))) (VP (VBZ is) (ADJP (RB even) (RBR harder))) (. .))
(S (NP (PRP We)) (VP (VBP address) (NP (DT this) (NN problem)) (PP (IN by) (S (VP (VBG developing) (NP (NP (DT a) (NN compiler) (NN design) (NN approach)) (SBAR (WHNP (WDT that)) (S (VP (VBZ reuses) (NP (NP (NNS parts)) (PP (IN of) (NP (DT an) (VBG existing) (JJ non-incremental) (NN compiler)))) (S (VP (TO to) (VP (VB lower) (NP (NP (DT the) (NN cost)) (PP (IN of) (S (VP (VBG building) (NP (DT an) (JJ incremental) (NN compiler))))))))))))))))) (. .))
(S (NP (PRP It)) (ADVP (RB also)) (VP (VBZ gives) (NP (NP (DT an) (NN intuition)) (PP (IN into) (S (VP (VBG compiling) (NP (JJ difficult-to-incrementalize) (NN language) (NNS features)) (PP (IN through) (NP (NN staging)))))))) (. .))
(NP (NP (NN Approach)) (: :) (S (NP (PRP We)) (VP (VBP use) (NP (NP (DT the) (NN compiler) (NN design) (NN approach)) (VP (VBN presented) (PP (IN in) (NP (DT this) (NN paper))))) (S (VP (TO to) (VP (VB develop) (NP (NP (DT an) (JJ incremental) (NN compiler)) (PP (IN for) (NP (DT the) (NNP Stratego) (JJ term-rewriting) (NN language))))))))) (. .))
(S (NP (DT This) (NN language)) (VP (VBZ has) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (NNS features)) (SBAR (WHNP (WDT that)) (S (PP (IN at) (NP (JJ first) (NN glance))) (VP (NN look) (ADJP (JJ incompatible) (PP (IN with) (NP (JJ incremental) (NN compilation))))))))))) (. .))
(S (ADVP (RB Therefore)) (, ,) (NP (PRP we)) (VP (VBP treat) (NP (JJ Stratego)) (PP (IN as) (NP (NP (PRP$ our) (JJ critical) (NN case)) (SBAR (S (VP (TO to) (VP (VB demonstrate) (NP (DT the) (NN approach)) (PP (IN on))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (NP (DT this) (NN approach)) (VP (VP (VBZ decomposes) (NP (DT the) (JJ original) (NN compiler))) (CC and) (VP (VBZ has) (NP (NP (DT a) (NN solution)) (SBAR (S (VP (TO to) (VP (VB compile) (NP (NNP Stratego)) (ADVP (RB incrementally)))))))))))) (. .))
(S (NP (NP (DT The) (JJ key) (NN idea)) (SBAR (WHPP (IN on) (WHNP (WDT which))) (S (NP (PRP we)) (VP (VBP build) (NP (PRP$ our) (JJ incremental) (NN compiler)))))) (VP (VBZ is) (S (VP (TO to) (ADVP (RB internally)) (VP (VB use) (NP (DT an) (JJ incremental) (NN build) (NN system)) (S (VP (TO to) (VP (VB wire) (ADVP (RB together)) (NP (NP (DT the) (NNS components)) (SBAR (S (NP (PRP we)) (VP (VBP extract) (PP (IN from) (NP (DT the) (JJ original) (NN compiler)))))))))))))) (. .))
(NP (NP (NN Knowledge)) (: :) (S (NP (DT The) (VBG resulting) (NN compiler)) (VP (VBZ is) (ADVP (RB already)) (PP (IN in) (NP (NP (NN use)) (PP (IN as) (NP (NP (DT a) (NN replacement)) (PP (IN of) (NP (DT the) (JJ original) (JJ whole-program) (NN compiler))))))))) (. .))
(S (NP (PRP We)) (VP (VBP find) (SBAR (IN that) (S (NP (NP (DT the) (JJ incremental) (NN build) (NN system)) (PP (IN inside) (NP (DT the) (NN compiler)))) (VP (VBZ is) (NP (NP (DT a) (JJ crucial) (NN component)) (PP (IN of) (NP (PRP$ our) (NN approach)))))))) (. .))
(S (NP (DT This)) (VP (VBZ allows) (S (NP (DT a) (NN compiler) (NN writer)) (VP (TO to) (VP (VP (VB think) (PP (IN in) (NP (NP (JJ multiple) (NNS steps)) (PP (IN of) (NP (NN compilation)))))) (, ,) (CC and) (VP (VB combine) (NP (DT that)) (PP (IN into) (NP (DT a) (JJ incremental) (NN compiler))) (ADVP (RB almost) (RB effortlessly))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP reuse) (NP (DT an) (VBG existing) (ADJP (NN sound) (CC and) (JJ optimal)) (JJ incremental) (NN build) (NN system))) (, ,) (CC and) (VP (VB integrate) (NP (PRP$ its) (NN dependency) (VBG tracking)) (PP (IN into) (NP (DT the) (NN compiler))))) (. .))
(FRAG (NP (VBG Grounding)) (: :) (S (NP (NP (DT The) (JJ incremental) (NN compiler)) (PP (IN for) (NP (NNP Stratego)))) (VP (VBZ is) (ADJP (JJ available) (PP (IN as) (NP (NP (DT an) (NN artefact)) (ADVP (IN along) (PP (IN with) (NP (DT this) (NN article))))))))) (. .))
(S (NP (PRP We)) (VP (VBP evaluate) (NP (PRP it)) (PP (IN on) (NP (DT a) (JJ large) (NNP Stratego) (NN project))) (S (VP (TO to) (VP (VB test) (NP (PRP$ its) (NN performance)))))) (. .))
(S (NP (DT The) (NN benchmark)) (VP (VBZ replays) (NP (NP (NNS edits)) (PP (TO to) (NP (DT the) (NNP Stratego) (NN project))) (PP (IN from) (NP (NN version) (NN control))))) (. .))
(S (NP (DT These) (NNS benchmarks)) (VP (VBP are) (NP (NP (NP (NN part)) (PP (IN of) (NP (DT the) (NN artefact)))) (, ,) (VP (VBN packaged) (PP (IN as) (NP (DT a) (JJ virtual) (NN machine) (NN image))) (PP (IN for) (NP (JJ easy) (NN reproducibility)))))) (. .))
(NP (NP (NN Importance)) (: :) (S (SBAR (IN Although) (S (NP (PRP we)) (VP (VBP demonstrate) (NP (PRP$ our) (NN design) (NN approach)) (PP (IN on) (NP (DT the) (NNP Stratego) (NN programming) (NN language)))))) (, ,) (NP (PRP we)) (ADVP (RB also)) (VP (VBP describe) (NP (PRP it)) (ADVP (RB generally)) (PP (IN throughout) (NP (DT this) (NN paper))))) (. .))
(S (NP (JJ Many) (ADJP (RB currently) (VBN used)) (NN programming) (NNS languages)) (VP (VBP have) (NP (NP (DT a) (NN compiler)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (ADJP (RB much) (JJR slower)) (PP (IN than) (ADJP (JJ necessary))))))))) (. .))
(S (NP (PRP$ Our) (NN design)) (VP (VBZ provides) (NP (NP (DT an) (NN approach)) (SBAR (S (VP (TO to) (VP (VB change) (NP (DT this)) (, ,) (PP (IN by) (S (VP (VP (VBG reusing) (NP (DT an) (VBG existing) (NN compiler))) (CC and) (VP (VBG making) (S (NP (PRP it)) (ADJP (JJ incremental))) (PP (IN within) (NP (NP (DT a) (JJ reasonable) (NN amount)) (PP (IN of) (NP (NN time))))))))))))))) (. .))
