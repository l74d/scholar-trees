(S (NP (JJ Modern) (NNS languages)) (VP (VBP are) (VP (VBN equipped) (PP (IN with) (NP (NP (JJ static) (NN type) (NN checking/inference)) (SBAR (WHNP (WDT that)) (S (VP (VBZ helps) (S (NP (NNS programmers)) (VP (VP (TO to) (VP (VB keep) (NP (DT a) (JJ clean) (NN programming) (NN style)))) (CC and) (VP (TO to) (VP (VB reduce) (NP (NNS errors))))))))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NP (NP (DT the) (JJ ever-growing) (NN size)) (PP (IN of) (NP (NNS programs)))) (CC and) (NP (PRP$ their) (JJ continuous) (NN evolution))) (VP (NN require) (S (VP (NN building) (NP (ADJP (NN fast) (CC and) (JJ efficient)) (NNS analysers))))) (. .))
(S (NP (DT A) (JJ promising) (NN solution)) (VP (VBZ is) (NP (NN incrementality)) (, ,) (RB so) (S (NP (CD one)) (VP (ADVP (JJ only)) (NNS re-types) (NP (NP (NP (DT those) (NNS parts)) (PP (IN of) (NP (DT the) (NN program))) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (JJ new)))))) (, ,) (PP (RB rather) (IN than) (NP (DT the) (JJ entire) (NN codebase))))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT an) (JJ algorithmic) (NN schema)) (VP (VBG driving) (NP (NP (DT the) (NN definition)) (PP (IN of) (NP (NP (DT an) (JJ incremental) (NN typing) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ exploits) (NP (DT the) (VBG existing) (, ,) (JJ standard) (NNS ones)) (PP (IN with) (NP (DT no) (NNS changes)))))))))))) (. .))
(S (NP (NNP Ours)) (VP (VBZ is) (NP (DT a) (JJ grey-box) (NN approach)) (, ,) (S (VP (VBG meaning) (SBAR (DT that) (S (NP (NP (NP (RB just) (DT the) (NN shape)) (PP (IN of) (NP (DT the) (NN input)))) (, ,) (NP (NP (IN that)) (PP (IN of) (NP (DT the) (NNS results)))) (CC and) (NP (DT some) (JJ domain-specific) (NN knowledge))) (VP (VBP are) (VP (VBN needed) (S (VP (TO to) (VP (VB instantiate) (NP (PRP$ our) (NN schema)))))))))))) (. .))
(S (ADVP (RB Here)) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT the) (NNS foundations)) (PP (IN of) (NP (PRP$ our) (NN approach))))) (CC and) (S (NP (PRP we)) (VP (VBP show) (NP (PRP it)) (PP (IN at) (NP (NN work))) (S (VP (TO to) (VP (VB derive) (NP (CD three) (JJ different) (JJ incremental) (NN typing) (NN algorithms))))))) (. .))
(S (NP (DT The) (JJ first) (CD two)) (VP (NN implement) (NP (NP (NP (NN type) (NN checking)) (CC and) (NP (NN inference))) (PP (IN for) (NP (DT a) (JJ functional) (NN language))))) (. .))
(S (NP (DT The) (JJ last) (CD one)) (VP (`` type-checks) (NP (DT an) (JJ imperative) (NN language)) (S (VP (TO to) (VP (VB detect) (NP (NP (NN information) (NN flow)) (CC and) (NP (NN non-interference))))))) (. .))
(S (NP (PRP We)) (VP (VBD assessed) (NP (PRP$ our) (NN proposal)) (PP (IN on) (NP (NP (DT a) (JJ prototypical) (NN implementation)) (PP (IN of) (NP (DT an) (JJ incremental) (NN type) (NN checker)))))) (. .))
(S (NP (PRP$ Our) (NNS experiments)) (VP (VBP show) (SBAR (IN that) (S (S (VP (VBG using) (NP (DT the) (NN type) (NN checker)) (ADVP (RB incrementally)))) (VP (VBZ is) (PRN (-LRB- -LRB-) (ADVP (RB almost)) (-RRB- -RRB-)) (ADVP (RB always)) (ADJP (VBG rewarding)))))) (. .))
