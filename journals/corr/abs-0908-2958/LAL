(S (NP (DT A) (JJ typical) (NN enterprise)) (VP (VBZ uses) (NP (NP (DT a) (JJ local) (NN area) (NN network)) (PP (IN of) (NP (NNS computers)))) (S (VP (TO to) (VP (VB perform) (NP (PRP$ its) (NN business)))))) (. .))
(S (PP (IN During) (NP (DT the) (JJ off-working) (NNS hours))) (, ,) (NP (NP (DT the) (JJ computational) (NNS capacities)) (PP (IN of) (NP (DT these) (JJ networked) (NNS computers)))) (VP (VBP are) (ADJP (JJ underused) (CC or) (JJ unused))) (. .))
(S (SBAR (IN In) (NN order) (S (VP (TO to) (VP (VB utilize) (NP (DT this) (JJ computational) (NN capacity)))))) (NP (DT an) (NN application)) (VP (VBZ has) (S (VP (TO to) (VP (VB be) (VP (VBN recoded) (S (VP (TO to) (VP (VB exploit) (NP (NP (NN concurrency)) (ADJP (NN inherent) (PP (IN in) (NP (DT a) (NN computation)))) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB clearly)) (RB not) (ADJP (JJ possible)) (PP (IN for) (NP (NP (NN legacy) (NNS applications)) (PP (IN without) (NP (DT any) (NN source) (NN code))))))))))))))))) (. .))
(S (NP (DT This) (NN thesis)) (VP (VBZ presents) (NP (NP (DT the) (NN design)) (NP (NP (DT an) (NN implementation)) (PP (IN of) (NP (NP (DT a) (VBN distributed) (NN middleware)) (SBAR (WHNP (WDT which)) (S (VP (MD can) (ADVP (RB automatically)) (VP (VB execute) (NP (DT a) (NN legacy) (NN application)) (PP (IN on) (NP (JJ multiple) (JJ networked) (NNS computers))) (PP (IN by) (S (VP (VBG parallelizing) (NP (PRP it)))))))))))))) (. .))
(S (NP (DT This) (NN middleware)) (VP (VBZ runs) (NP (NP (JJ multiple) (NNS copies)) (PP (IN of) (NP (DT the) (JJ binary) (JJ executable) (NN code)))) (PP (IN in) (NP (NN parallel))) (PP (IN on) (NP (NP (JJ different) (NNS hosts)) (PP (IN in) (NP (DT the) (NN network)))))) (. .))
(S (NP (PRP It)) (VP (VBZ wraps) (PRT (RP up)) (NP (NP (DT the) (JJ binary) (JJ executable) (NN code)) (PP (IN of) (NP (DT the) (NN legacy) (NN application)))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VP (VB capture) (NP (DT the) (NNS kernel) (NN level) (NNS data) (NN access) (NN system) (VBZ calls))) (CC and) (VP (VB perform) (NP (PRP them)) (ADVP (RB distributively)) (PP (IN over) (NP (JJ multiple) (NNS computers))) (PP (IN in) (NP (DT a) (ADJP (JJ safe) (CC and) (ADJP (JJ conflict) (JJ free))) (NN manner))))))))) (. .))
(S (NP (DT The) (NN middleware)) (ADVP (RB also)) (VP (VBZ incorporates) (NP (NP (DT a) (JJ dynamic) (NN scheduling) (NN technique)) (SBAR (S (VP (TO to) (VP (VB execute) (NP (DT the) (NN target) (NN application)) (PP (IN in) (NP (JJ minimum) (NN time))) (PP (IN by) (S (VP (VBG scavenging) (NP (NP (DT the) (JJ available) (NNP CPU) (NNS cycles)) (PP (IN of) (NP (NP (DT the) (NNS hosts)) (PP (IN in) (NP (DT the) (NN network))))))))))))))) (. .))
(S (NP (DT This) (JJ dynamic) (NN scheduling)) (ADVP (RB also)) (VP (VBZ supports) (NP (NP (DT the) (NNP CPU) (NN availability)) (PP (IN of) (NP (DT the) (NNS hosts))) (SBAR (S (VP (TO to) (VP (VP (VB change) (PP (IN over) (NP (NN time)))) (CC and) (VP (ADVP (RB properly)) (VB reschedule) (NP (NP (DT the) (NN replicas)) (VP (VBG performing) (NP (DT the) (NN computation)))) (S (VP (TO to) (VP (VB minimize) (NP (DT the) (NN execution) (NN time)))))))))))) (. .))
(S (NP (NP (DT A) (JJ prototype) (NN implementation)) (PP (IN of) (NP (DT this) (NN middleware)))) (VP (VBZ has) (VP (VBN been) (VP (VBN developed) (PP (IN as) (NP (NP (DT a) (NN proof)) (PP (IN of) (NP (NP (NN concept)) (PP (IN of) (NP (DT the) (NN design)))))))))) (. .))
(S (S (NP (DT This) (NN implementation)) (VP (VBZ has) (VP (VBN been) (VP (VBN evaluated) (PP (IN with) (NP (DT a) (JJ few) (JJ typical) (NN case) (NNS studies))))))) (CC and) (S (NP (DT the) (NN test) (NNS results)) (VP (VBP confirm) (SBAR (IN that) (S (NP (DT the) (NN middleware)) (VP (VBZ works) (SBAR (IN as) (S (VP (VBN expected))))))))) (. .))
