(S (NP (NNP FreeST)) (VP (VBZ is) (NP (DT an) (JJ experimental) (NN concurrent) (NN programming) (NN language))) (. .))
(S (S (VP (VBN Based) (PP (IN on) (NP (DT a) (NN core) (JJ linear) (JJ functional) (NN programming) (NN language))))) (, ,) (NP (PRP it)) (VP (VBZ features) (NP (NP (NNS primitives)) (SBAR (S (VP (SBAR (S (VP (TO to) (VP (VB fork) (NP (JJ new) (NNS threads)))))) (, ,) (CC and) (PP (IN for) (NP (NN channel) (NN creation) (CC and) (NN communication)))))))) (. .))
(S (NP (NP (DT A) (JJ powerful) (NN type) (NN system)) (PP (IN of) (NP (JJ context-free) (NN session) (NNS types)))) (VP (VBZ governs) (NP (NP (DT the) (NN interaction)) (PP (IN on) (NP (NNS channels))))) (. .))
(S (NP (DT The) (NN compiler)) (VP (VBZ builds) (PP (IN on) (NP (NP (DT a) (JJ novel) (NN algorithm)) (PP (IN for) (S (VP (VBG deciding) (NP (NP (JJ type) (NN equivalence)) (PP (IN of) (NP (JJ context-free) (NN session) (NNS types)))))))))) (. .))
(S (NP (DT This) (JJ abstract)) (VP (VP (VBZ provides) (NP (NP (DT a) (JJ gentle) (NN introduction)) (PP (TO to) (NP (DT the) (NN language))))) (CC and) (VP (VBZ discusses) (NP (DT the) (NX (NX (NN validation) (NN process)) (CC and) (NX (NN runtime) (NN system)))))) (. .))
