(S (NP (DT Both) (JJ algorithms)) (VP (NN assume) (NP (NP (JJ random) (JJ read-only) (NN access)) (PP (TO to) (NP (VB random) (NNS bits))))) (. .))
(S (PP (NNP Modulo) (NP (DT this) (JJ mild) (NN assumption))) (, ,) (NP (DT this)) (VP (VBZ resolves) (NP (NP (DT a) (JJ long-standing) (JJ open) (NN problem)) (PP (IN in) (NP (NP (JJ exact) (NN algorithms)) (PP (IN for) (NP (NNP NP-hard) (NNS problems))))))) (. .))
(S (NP (DT These) (NNS results)) (VP (MD can) (VP (VB be) (VP (VBN extended) (S (VP (TO to) (VP (VB solve) (NP (NNP Binary) (NNP Linear) (VBG Programming)) (PP (IN on) (NP (ADJP ($ $) (JJ n) ($ $)) (NNS variables))) (PP (IN with) (NP (JJ few) (NNS constraints))) (PP (IN in) (NP (DT a) (JJ similar) (NN running) (NN time))))))))) (. .))
(SINV (VP (VBG Underlying) (NP (DT these) (NNS results))) (VP (VBZ is)) (NP (NP (DT an) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ determines) (SBAR (IN whether) (S (NP (NP (CD two) (VBN given) (NNS lists)) (PP (IN of) (NP (JJ length) (QP ($ $) (JJ n) ($ $)))) (PP (IN with) (NP (NP (NNS integers)) (VP (VBN bounded) (PP (IN by) (NP (NP (DT a) (NN polynomial)) (PP (IN in) (NP ($ $) (JJ n) ($ $))))))))) (VP (NN share) (NP (DT a) (JJ common) (NN value))))))))) (. .))
