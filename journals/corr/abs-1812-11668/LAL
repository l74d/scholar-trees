(S (NP (DT This) (NN paper)) (VP (VBZ describes) (NP (NP (DT the) (NN design) (CC and) (NN implementation)) (PP (IN of) (NP (NP (DT a) (JJ comprehensive) (NNP OCaml) (NN interface)) (PP (TO to) (NP (NP (DT the) (NNP Sundials) (NN library)) (PP (IN of) (NP (NP (JJ numeric) (NNS solvers)) (PP (IN for) (NP (NP (JJ ordinary) (JJ differential) (NNS equations)) (, ,) (NP (JJ differential) (NN algebraic) (NNS equations)) (, ,) (CC and) (NP (JJ non-linear) (NNS equations)))))))))))) (. .))
(S (NP (DT The) (NN interface)) (VP (VP (VBZ provides) (NP (NP (DT a) (NN convenient) (CC and) (JJ memory-safe) (NN alternative)) (PP (TO to) (S (VP (VBG using) (NP (NNS Sundials)) (ADVP (RB directly)) (PP (IN from) (NP (NNP C)))))))) (CC and) (VP (VBZ facilitates) (NP (NN application) (NN development)) (PP (IN by) (S (VP (VBG integrating) (PP (IN with) (NP (NP (JJ higher-level) (NN language) (NNS features)) (, ,) (PP (IN like) (NP (NP (JJ garbage-collected) (NN memory) (NN management)) (, ,) (NP (VB algebraic) (NNS data) (NNS types)) (, ,) (CC and) (NP (NNS exceptions))))))))))) (. .))
(S (S (NP (PRP$ Our) (NN benchmark) (NNS results)) (VP (VBP suggest) (SBAR (IN that) (S (NP (DT the) (NN interface) (NN overhead)) (VP (VBZ is) (ADJP (JJ acceptable))))))) (: :) (S (NP (DT the) (NN standard) (NNS examples)) (VP (VBP are) (ADJP (ADVP (RB rarely)) (ADJP (RB twice) (IN as) (JJ slow) (PP (IN in) (NP (NNP OCaml))) (PP (IN than) (PP (IN in) (NP (NNP C)))))) (, ,) (CC and) (ADJP (ADVP (RB often)) (ADJP (NP (QP (JJR less) (IN than) (CD 50)) (NN %)) (JJR slower))))) (. .))
(S (NP (NP (DT The) (NNS challenges)) (PP (IN in) (S (VP (VBG interfacing) (PP (IN with) (NP (NNS Sundials))))))) (VP (VBP are) (S (VP (VP (TO to) (VP (ADVP (RB efficiently) (CC and) (RB safely)) (NN share) (NP (NNS data) (NNS structures)) (PP (IN between) (NP (NNP OCaml) (CC and) (NNP C))))) (, ,) (VP (TO to) (VP (VB support) (NP (NP (JJ multiple) (NNS implementations)) (PP (IN of) (NP (NP (NN vector) (NNS operations)) (CC and) (NP (JJ linear) (NNS solvers))))) (PP (IN through) (NP (DT a) (JJ common) (NN interface))))) (, ,) (CC and) (VP (TO to) (VP (VB manage) (NP (NP (NP (NNS calls)) (CC and) (NP (NN error) (NN signalling))) (PP (TO to) (CC and) (IN from) (NP (NNP OCaml))))))))) (. .))
(S (NP (PRP We)) (VP (VBP explain) (SBAR (WHADVP (WRB how)) (S (NP (PRP we)) (VP (VBP overcame) (NP (DT these) (NNS difficulties)) (S (VP (VBG using) (NP (NP (DT a) (NN combination)) (PP (IN of) (NP (NP (NP (JJ standard) (NNS techniques)) (PP (JJ such) (IN as) (NP (NP (NN phantom) (NNS types)) (CC and) (NP (JJ polymorphic) (NNS variants))))) (, ,) (CC and) (NP (ADJP (RB carefully) (VBN crafted)) (NN data) (NNS representations))))))))))) (. .))
