(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (NN library)) (PP (IN for) (NP (JJ generic) (NN programming))) (PP (IN in) (NP (NNP OCaml)))) (, ,) (S (VP (VBG adapting) (NP (NP (DT some) (NNS techniques)) (VP (VBN borrowed) (PP (IN from) (NP (JJ other) (JJ functional) (NNS languages)))))))) (. .))
(S (NP (DT The) (NN library)) (VP (VBZ makes) (NP (NN use)) (PP (IN of) (NP (NP (NP (CD three) (JJ recent) (NNS additions)) (PP (TO to) (NP (VB OCaml)))) (: :) (S (S (NP (VBN generalised) (JJ abstract) (NNS datatypes)) (VP (VBP are) (ADJP (JJ essential)) (S (VP (TO to) (VP (VB reflect) (NP (NNS types))))))) (, ,) (S (NP (JJ extensible) (NNS variants)) (VP (VBP allow) (S (NP (DT this) (NN reflection)) (VP (TO to) (VP (VB be) (ADJP (JJ open) (PP (IN for) (NP (JJ new) (NNS additions))))))))) (, ,) (CC and) (S (NP (NN extension) (NNS points)) (VP (VP (VBP provide) (NP (JJ syntactic) (NN sugar))) (CC and) (VP (NN generate) (NP (NP (NN boiler) (NN plate) (NN code)) (SBAR (WHNP (WDT that)) (S (VP (VBZ simplify) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (DT the) (NN library))))))))))))))) (. .))
(S (NP (NP (DT The) (NN building) (NNS blocks)) (PP (IN of) (NP (DT the) (NN library)))) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB support) (NP (NP (JJ many) (NNS approaches)) (PP (TO to) (NP (VB generic) (VBG programming)))) (PP (IN through) (NP (NP (DT the) (NN concept)) (PP (IN of) (NP (NN view))))))))))) (. .))
(S (NP (JJ Generic) (NNS traversals)) (VP (VP (VBP are) (VP (VBN implemented) (PP (IN on) (NP (NP (NN top)) (PP (IN of) (NP (DT the) (NN library))))))) (CC and) (VP (VB provide) (S (NP (JJ powerful) (NNS combinators)) (VP (TO to) (VP (VB write) (NP (NP (JJ concise) (NNS definitions)) (PP (IN of) (NP (NP (JJ recursive) (NNS functions)) (PP (IN over) (NP (JJ complex) (JJ tree) (NNS types))))))))))) (. .))
(S (NP (PRP$ Our) (NN case) (NN study)) (VP (VBZ is) (NP (NP (DT a) (JJ type-safe) (NN deserialisation) (NN function)) (SBAR (WHNP (WDT that)) (S (VP (VBZ respects) (NP (JJ type) (NN abstraction))))))) (. .))
