(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT an) (JJ Angluin-style) (NN algorithm)) (SBAR (S (VP (TO to) (VP (VB learn) (NP (NP (JJ nominal) (NNS automata)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (NP (NP (NNS acceptors)) (PP (IN of) (NP (NNS languages))) (PP (IN over) (NP (NN infinite) (PRN (-LRB- -LRB-) (VBN structured) (-RRB- -RRB-)) (NNS alphabets)))))))))))))) (. .))
(S (NP (NP (DT The) (JJ abstract) (NN approach)) (SBAR (S (NP (PRP we)) (VP (VBP take))))) (VP (NNS allows) (S (NP (PRP us)) (VP (TO to) (VP (ADVP (VB seamlessly)) (VB extend) (NP (NP (JJ known) (NNS variations)) (PP (IN of) (NP (DT the) (NN algorithm)))) (PP (TO to) (NP (DT this) (JJ new) (NN setting))))))) (. .))
(S (PP (IN In) (NP (JJ particular))) (NP (PRP we)) (VP (MD can) (VP (VB learn) (NP (NP (DT a) (NN subclass)) (PP (IN of) (NP (JJ nominal) (JJ non-deterministic) (NN automata)))))) (. .))
(S (NP (NP (DT An) (NN implementation)) (VP (VBG using) (NP (DT a) (ADJP (RB recently) (VBN developed)) (NNP Haskell) (NN library)) (PP (IN for) (NP (JJ nominal) (NN computation))))) (VP (VBZ is) (VP (VBN provided) (PP (IN for) (NP (JJ preliminary) (NNS experiments))))) (. .))
