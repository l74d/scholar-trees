(S (NP (NNS Softwares) (NN source) (NN code)) (VP (VBZ is) (VP (VBG becoming) (ADJP (JJ large) (CC and) (JJ complex)))) (. .))
(S (NP (NP (NN Compilation)) (PP (IN of) (NP (JJ large) (NN base) (NN code)))) (VP (VBZ is) (NP (DT a) (ADJP (NN time) (VBG consuming)) (NN process))) (. .))
(S (NP (NP (NNP Parallel) (NN compilation)) (PP (IN of) (NP (NN code)))) (VP (MD will) (VP (VB help) (PP (IN in) (S (VP (VBG reducing) (NP (DT the) (NN time) (NN complexity))))))) (. .))
(S (NP (VBG Parsing)) (VP (VBZ is) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (NNS phases)) (PP (IN in) (NP (NN compiler))) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NP (JJ significant) (NN amount)) (PP (IN of) (NP (NP (NN time)) (PP (IN of) (NP (NN compilation)))))) (VP (VBZ is) (VP (VBN spent))))))))) (. .))
(S (NP (NP (NNS Techniques))) (VP (VBP have) (ADVP (RB already)) (VP (VBN been) (VP (VBN developed) (S (VP (TO to) (VP (VB extract) (NP (NP (DT the) (NN parallelism)) (ADJP (JJ available) (PP (IN in) (NP (NN parser))))))))))) (. .))
(S (NP (JJ Current) (NNP LR) (PRN (-LRB- -LRB-) (NN k) (-RRB- -RRB-)) (NN parallel) (VBG parsing) (NNS techniques)) (VP (CC either) (VP (VP (NN face) (NP (NP (NN difficulty)) (PP (IN in) (S (VP (VBG creating) (NP (NNP Abstract) (NNP Syntax) (NNP Tree))))))) (CC or) (VP (VBZ requires) (NP (NP (NN modification)) (PP (IN in) (NP (DT the) (NN grammar))))) (CC or) (VP (VBP are) (ADJP (JJ specific) (PP (TO to) (NP (ADJP (RBR less) (JJ expressive)) (NNS grammars))))))) (. .))
(S (S (NP (NP (JJS Most)) (PP (IN of) (NP (NP (DT the) (NN programming) (NNS languages)) (PP (IN like) (NP (NNP C) (, ,) (NP (NNP ALGOL))))))) (VP (VBP are) (ADJP (JJ block-structured)))) (, ,) (CC and) (S (PP (IN in) (NP (JJS most) (NNS languages) (VBP grammars))) (NP (NP (DT the) (NN grammar)) (PP (IN of) (NP (JJ different) (NNS blocks)))) (VP (VBZ is) (ADJP (JJ independent)) (, ,) (S (VP (VBG allowing) (S (NP (JJ different) (NNS blocks)) (VP (TO to) (VP (VB be) (VP (VBN parsed) (PP (IN in) (NP (NN parallel))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP are) (VP (VBG proposing) (NP (NP (DT a) (ADJP (NN block) (NN level)) (RB parallel) (RB parser)) (VP (VBN derived) (PP (IN from) (NP (NNP Incremental) (NNP Jump) (NNP Shift) (NNP Reduce) (NNP Parser))) (PP (IN by) (NP (NNP -LSB-) (CD 13) (NN -RSB-))))))) (. .))
(S (NP (NP (NNP Block) (NNP Parallelized) (NNP Parser)) (PRN (-LRB- -LRB-) (NP (NNP BPP)) (-RRB- -RRB-))) (VP (MD can) (ADVP (RB even)) (VP (VB work) (PP (IN as) (NP (DT a) (NN block) (NN parallel) (JJ incremental) (NN parser))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP define) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NNP Incremental) (NNP Categories))))) (CC and) (VP (VB create) (NP (NP (DT the) (NNS partitions)) (PP (IN of) (NP (DT a) (NN grammar))) (VP (VBN based) (PP (IN on) (NP (DT a) (NN rule))))))) (. .))
(S (SBAR (WHADVP (WRB When)) (S (NP (NN parser)) (VP (VBZ reaches) (NP (NP (DT the) (NN start)) (PP (IN of) (NP (DT the) (NN block) (NN symbol))))))) (NP (PRP it)) (VP (MD will) (VP (VB check) (SBAR (IN whether) (S (NP (DT the) (JJ current) (NN block)) (VP (VBZ is) (VP (VBN related) (PP (TO to) (NP (DT any) (JJ incremental) (NN category))))))))) (. .))
(S (SBAR (IN If) (S (NP (VBN block) (FW parallel) (NN parser)) (VP (VBP find) (NP (NP (DT the) (JJ incremental) (NN category)) (PP (IN for) (NP (PRP it))))))) (, ,) (NP (RB parser)) (VP (MD will) (VP (VB parse) (NP (DT the) (NN block)) (PP (IN in) (NP (NN parallel))))) (. .))
(S (NP (NNP Block) (CC parallel) (NN parser)) (VP (VBZ is) (VP (VBN developed) (PP (IN for) (NP (NNP LR) (PRN (-LRB- -LRB-) (CD 1) (-RRB- -RRB-)) (NN grammar))))) (. .))
(S (PP (IN Without) (S (VP (VBG making) (NP (NP (JJ major) (NNS changes)) (PP (IN in) (NP (NNP Shift) (NNP Reduce) (PRN (-LRB- -LRB-) (NNP SR) (-RRB- -RRB-)) (NNP LR) (PRN (-LRB- -LRB-) (CD 1) (-RRB- -RRB-)) (NN parsing) (NN algorithm))))))) (, ,) (NP (SBAR (FRAG (NN block) (NNS parallel))) (VBP parser)) (VP (MD can) (VP (VB create) (NP (DT an) (JJ Abstract) (NNP Syntax) (NN tree)) (ADVP (RB easily)))) (. .))
(S (NP (PRP We)) (VP (VBP believe) (SBAR (S (NP (DT this) (NN parser)) (VP (MD can) (VP (VP (VB be) (VP (ADVP (RB easily)) (VBN extended) (PP (TO to) (NP (NNP LR) (PRN (-LRB- -LRB-) (NN k) (-RRB- -RRB-)) (NNS grammars))))) (CC and) (ADVP (RB also)) (VP (VB be) (VP (VBN converted) (PP (TO to) (NP (DT an) (NNP LALR) (PRN (-LRB- -LRB-) (CD 1) (-RRB- -RRB-)) (NN parser)))))))))) (. .))
(S (NP (PRP We)) (VP (VBD implemented) (NP (NP (NP (NNP BPP)) (CC and) (NP (NNP SR) (NNP LR) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-)) (NN parsing) (NN algorithm))) (PP (IN for) (NP (NNP C) (NNP Programming) (NNP Language))))) (. .))
(S (NP (PRP We)) (VP (VBD evaluated) (NP (NP (NN performance)) (PP (IN of) (NP (DT both) (NNS techniques)))) (PP (IN by) (S (VP (VBG parsing) (NP (CD 10) (JJ random) (NNS files)) (PP (IN from) (NP (NNP Linux) (NNP Kernel) (NN source))))))) (. .))
(S (NP (NNP BPP)) (VP (VBD showed) (NP (ADJP (ADJP (CD 28) (NN %)) (CC and) (CD 52) (NN %)) (NN improvement)) (PP (IN in) (NP (NP (DT the) (NN case)) (PP (IN of) (S (VP (VP (VBG including) (NP (NN header) (NNS files))) (CC and) (VP (VBG excluding) (NP (NN header) (NNS files))) (ADVP (RB respectively)))))))) (. .))
