(S (NP (NP (NNS Softwares)) (NP (NN source) (NN code))) (VP (VBZ is) (VP (VBG becoming) (ADJP (JJ large) (CC and) (JJ complex)))) (. .))
(S (NP (NP (NN Compilation)) (PP (IN of) (NP (JJ large) (NN base) (NN code)))) (VP (VBZ is) (NP (DT a) (ADJP (NN time) (VBG consuming)) (NN process))) (. .))
(S (NP (NP (JJ Parallel) (NN compilation)) (PP (IN of) (NP (NN code)))) (VP (MD will) (VP (VB help) (PP (IN in) (S (VP (VBG reducing) (NP (DT the) (NN time) (NN complexity))))))) (. .))
(S (NP (NN Parsing)) (VP (VBZ is) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (NNS phases)) (PP (IN in) (NP (NP (NN compiler)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NP (JJ significant) (NN amount)) (PP (IN of) (NP (NP (NN time)) (PP (IN of) (NP (NN compilation)))))) (VP (VBZ is) (VP (VBN spent))))))))))) (. .))
(S (NP (NNS Techniques)) (VP (VBP have) (ADVP (RB already)) (VP (VBN been) (VP (VBN developed) (S (VP (TO to) (VP (VB extract) (S (NP (DT the) (NN parallelism)) (ADJP (JJ available) (PP (IN in) (NP (NN parser))))))))))) (. .))
(S (NP (NP (NML (NML (JJ Current) (NN LR)) (-LRB- -LRB-) (NML (NN k)) (-RRB- -RRB-)) (NN parallel)) (VP (VBG parsing) (NP (NP (NNS techniques)) (PP (CC either) (NP (NN face) (NN difficulty)))) (PP (IN in) (S (VP (VBG creating) (NP (NNP Abstract) (NNP Syntax) (NNP Tree))))))) (VP (VP (CC or) (VP (VBZ requires) (NP (NN modification)) (PP (IN in) (NP (DT the) (NN grammar))))) (CC or) (VP (VBP are) (ADJP (JJ specific) (PP (IN to) (NP (ADJP (JJR less) (JJ expressive)) (NNS grammars)))))) (. .))
(S (NP (NP (JJS Most)) (PP (IN of) (NP (NP (DT the) (NN programming) (NNS languages)) (PP (PP (IN like) (NP (NP (NN C)) (, ,) (NP (NP (NP (NNP ALGOL)) (SBAR (S (VP (VBP are) (NP (NN block)))))) (HYPH -) (VP (VBN structured))))) (, ,) (CC and) (PP (IN in) (NP (JJS most) (NNS languages))))))) (VP (VBZ grammars) (SBAR (S (NP (NP (DT the) (NN grammar)) (PP (IN of) (NP (JJ different) (NNS blocks)))) (VP (VBZ is) (ADJP (JJ independent))))) (, ,) (S (VP (VBG allowing) (NP (JJ different) (NNS blocks)) (S (VP (TO to) (VP (VB be) (VP (VBN parsed) (PP (IN in) (NP (NN parallel)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP are) (VP (VBG proposing) (NP (NP (DT a) (NML (NN block) (NN level)) (JJ parallel) (NN parser)) (VP (VBN derived) (PP (IN from) (NP (NML (NNP Incremental) (NNP Jump)) (NNP Shift))) (S (VP (VB Reduce) (NP (NN Parser)) (PP (IN by)))) (PRN (-LRB- [) (NP (CD 13)) (-RRB- ])))))) (. .))
(S (NP (NML (NNP Block) (NNP Parallelized)) (NN Parser) (PRN (-LRB- -LRB-) (NP (NN BPP)) (-RRB- -RRB-))) (VP (MD can) (ADVP (RB even)) (VP (VB work) (PP (IN as) (NP (DT a) (NN block) (JJ parallel) (JJ incremental) (NN parser))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP define) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (JJ Incremental) (NNS Categories))))) (CC and) (VP (VB create) (NP (NP (DT the) (NNS partitions)) (PP (IN of) (NP (DT a) (NN grammar)))) (PP (VBN based) (PP (IN on) (NP (DT a) (NN rule)))))) (. .))
(S (SBAR (WHADVP (WRB When)) (S (NP (NN parser)) (VP (VBZ reaches) (NP (NP (DT the) (NN start)) (PP (IN of) (NP (DT the) (NN block) (NN symbol))))))) (NP (PRP it)) (VP (MD will) (VP (VB check) (SBAR (IN whether) (S (NP (DT the) (JJ current) (NN block)) (VP (VBZ is) (VP (VBN related) (PP (IN to) (NP (DT any) (JJ incremental) (NN category))))))))) (. .))
(S (SBAR (IN If) (S (NP (NN block) (JJ parallel) (NN parser)) (VP (VB find) (NP (DT the) (JJ incremental) (NN category)) (PP (IN for) (NP (PRP it)))))) (, ,) (NP (NN parser)) (VP (MD will) (VP (VB parse) (NP (DT the) (NN block)) (PP (IN in) (NP (NN parallel))))) (. .))
(S (NP (NNP Block) (JJ parallel) (NN parser)) (VP (VBZ is) (VP (VBN developed) (PP (IN for) (NP (NML (NN LR) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-))) (NN grammar))))) (. .))
(S (PP (IN Without) (S (VP (VBG making) (NP (JJ major) (NNS changes)) (PP (IN in) (NP (NP (NML (NNP Shift) (NNP Reduce)) (-LRB- -LRB-) (NP (NNP SR)) (-RRB- -RRB-) (NN LR) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-))) (VP (VBG parsing) (NP (NN algorithm)))))))) (, ,) (NP (NN block) (JJ parallel) (NN parser)) (VP (MD can) (VP (VB create) (NP (DT an) (NML (NNP Abstract) (NNP Syntax)) (NN tree)) (ADVP (RB easily)))) (. .))
(S (NP (PRP We)) (VP (VBP believe) (SBAR (S (NP (DT this) (NN parser)) (VP (MD can) (VP (VP (VB be) (ADVP (RB easily)) (VP (VBN extended) (PP (IN to) (NP (NML (NN LR) (-LRB- -LRB-) (NN k) (-RRB- -RRB-)) (NNS grammars))))) (CC and) (ADVP (RB also)) (VP (VB be) (VP (VBN converted) (PP (IN to) (NP (DT an) (NN LALR))) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-)))) (NP (NN parser))))))) (. .))
(S (NP (PRP We)) (VP (VBD implemented) (NP (NP (NN BPP)) (CC and) (NP (NN SR) (NN LR) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-)))) (S (VP (VBG parsing) (NP (NN algorithm)) (PP (IN for) (NP (NN C))) (S (VP (VBG Programming) (NP (NNP Language))))))) (. .))
(S (NP (PRP We)) (VP (VBD evaluated) (NP (NP (NN performance)) (PP (IN of) (NP (DT both) (NNS techniques)))) (PP (IN by) (S (VP (VBG parsing) (NP (CD 10) (JJ random) (NNS files)) (PP (IN from) (NP (NNP Linux) (NNP Kernel) (NN source))))))) (. .))
(S (NP (NN BPP)) (VP (VBD showed) (NP (QP (CD 28) (NN %) (CC and) (CD 52) (NN %)) (NN improvement)) (PP (IN in) (NP (NP (DT the) (NN case)) (PP (IN of) (S (VP (VP (VBG including) (NP (NN header) (NNS files))) (CC and) (VP (VBG excluding) (NP (NN header) (NNS files)) (ADVP (RB respectively))))))))) (. .))
