(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (JJ new) (NN way)) (PP (IN of) (S (VP (VBG embedding) (NP (JJ functional) (NNS languages)) (PP (IN into) (NP (DT the) (NNP Coq) (NN proof) (NN assistant))) (PP (IN by) (S (VP (VBG using) (NP (NN meta-programming)))))))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (VP (VB develop) (NP (NP (NP (DT the) (NN meta-theory)) (PP (IN of) (NP (DT the) (NN language)))) (VP (VBG using) (NP (DT the) (JJ deep) (NN embedding)))))))) (CC and) (VP (VBZ provides) (NP (NP (DT a) (JJ convenient) (NN way)) (PP (IN for) (S (VP (VBG reasoning) (PP (IN about) (NP (NP (JJ concrete) (NNS programs)) (VP (VBG using) (NP (DT the) (JJ shallow) (NN embedding))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP connect) (NP (UCP (NP (DT the) (JJ deep)) (CC and) (NP (DT the) (JJ shallow))) (NNS embeddings)) (PP (IN by) (NP (DT a) (NN soundness) (NN theorem)))) (. .))
(S (PP (IN As) (NP (NP (DT an) (NN instance)) (PP (IN of) (NP (PRP$ our) (NN approach))))) (, ,) (NP (PRP we)) (VP (VP (VBP develop) (NP (NP (DT an) (NN embedding)) (PP (IN of) (NP (DT a) (NN core) (NN smart) (NN contract) (NN language))) (PP (IN into) (NP (NNP Coq))))) (CC and) (VP (VB verify) (NP (NP (NP (JJ several) (JJ important) (NNS properties)) (PP (IN of) (NP (DT a) (NN crowdfunding) (NN contract)))) (VP (VBN based) (PP (IN on) (NP (NP (DT a) (JJ previous) (NN formalisation)) (PP (IN of) (NP (JJ smart) (NN contract) (NN execution))) (PP (IN in) (NP (NNS blockchains))))))))) (. .))
