(S (NP (DT This) (NN paper)) (VP (VBZ proposes) (NP (NP (DT a) (JJ general) (NN algorithm)) (VP (VBN called) (NP (NNP Store) (HYPH -) (NNP zechin)) (PP (IN for) (S (ADVP (RB quickly)) (VP (VBG computing) (NP (NP (DT the) (JJ permanent)) (PP (IN of) (NP (DT an) (JJ arbitrary) (JJ square) (NN matrix)))))))))) (. .))
(S (NP (PRP$ Its) (JJ key) (NN idea)) (VP (VBZ is) (NP (NN storage) (, ,) (NN multiplexing) (, ,) (CC and) (NN recursion))) (. .))
(S (NP (DT That)) (VP (VBZ is) (, ,) (SBAR (S (PP (IN in) (NP (DT a) (JJ recursive) (NN process))) (, ,) (NP (NP (DT some) (NNS sub-terms)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (ADVP (RB already)) (VP (VBN been) (VP (VBN calculated))))))) (VP (VP (VBP are) (ADVP (RB no) (RBR longer)) (VP (VBN calculated))) (, ,) (CC but) (VP (VBP are) (ADVP (RB directly)) (VP (VBN substituted) (PP (IN with) (NP (DT the) (JJ previous) (NN calculation) (NNS results))))))))) (. .))
(S (NP (DT The) (JJ new) (NN algorithm)) (VP (VP (VBZ utilizes) (ADVP (RB sufficiently)) (NP (NN computer) (NNS memories))) (CC and) (VP (VBN stored) (NP (NNS data)) (S (VP (TO to) (VP (VB speed) (NP (NP (DT the) (NN computation)) (PP (IN of) (NP (DT a) (JJ permanent))))))))) (. .))
(S (NP (DT The) (NNS Analyses)) (VP (VBP show) (SBAR (IN that) (S (VP (VBG computating) (NP (NP (DT the) (JJ permanent)) (PP (IN of) (NP (NP (DT an) (NN n)) (NFP *) (NP (NP (NML (NML (NN n) (NN matrix)) (PP (IN by) (NP (NP (NNP Store) (HYPH -) (NNP zechin)) (SBAR (S (VP (VBZ requires) (NP (NP (-LRB- -LRB-) (NP (CD 2) (SYM ^)) (-LRB- -LRB-) (NP (NP (NML (NML (NML (NN n) (HYPH -) (CD 1)) (-RRB- -RRB-)) (HYPH -) (NML (CD 1))) (-RRB- -RRB-) (NN n) (NNS multiplications)) (CC and) (NP (-LRB- -LRB-) (NP (CD 2) (SYM ^)) (-LRB- -LRB-) (NP (NN n) (HYPH -) (CD 1)) (-RRB- -RRB-))) (-RRB- -RRB-)) (-LRB- -LRB-) (NP (NP (NP (NML (NML (NN n) (HYPH -) (CD 2)) (-RRB- -RRB-) (SYM +) (NML (CD 1))) (NNS additions)) (SBAR (IN while) (S (VP (VP (VBZ does) (NP (NP (NP (PRN (-LRB- -LRB-) (NP (CD 2)) (NP (SYM ^) (NN n) (HYPH -) (CD 1)) (-RRB- -RRB-)) (NN n)) (SYM +) (NP (CD 1) (NNS multiplications))) (CC and) (NP (NP (-LRB- -LRB-) (NML (NML (NP (CD 2) (SYM ^))) (NN n)) (HYPH -) (NN n) (-RRB- -RRB-) (PRN (-LRB- -LRB-) (NP (NN n) (SYM +) (CD 1)) (-RRB- -RRB-))) (HYPH -) (NP (CD 2) (NNS additions)))) (PP (IN by) (NP (DT the) (NNP Ryser) (NN algorithm)))) (, ,) (CC and) (VP (VBZ does))))) (PRN (-LRB- -LRB-) (NP (CD 2) (SYM ^)) (-LRB- -LRB-) (NP (NN n) (HYPH -) (CD 1)) (-RRB- -RRB-) (-RRB- -RRB-))) (NP (NP (NML (NN n) (SYM +)) (PRN (-LRB- -LRB-) (NP (NN n) (SYM +) (CD 2)) (-RRB- -RRB-)) (NNS multiplications)) (CC and) (NP (-LRB- -LRB-) (NP (CD 2) (SYM ^)) (-LRB- -LRB-) (NP (NN n) (HYPH -) (CD 1)) (-RRB- -RRB-)))) (-RRB- -RRB-)) (PRN (-LRB- -LRB-) (NP (NN n) (SYM +) (CD 1)) (-RRB- -RRB-)))))))) (SYM +)) (-LRB- -LRB-) (NP (NN n) (SYM ^) (CD 2) (HYPH -) (NN n) (NN -1)) (-RRB- -RRB-)))))) (NP-TMP (NP (NNS additions)) (PP (IN by) (NP (DT the) (NML (NN R) (HYPH -) (NN N) (HYPH -) (NN W)) (NN algorithm))))))) (. .))
(S (ADVP (RB Therefore)) (, ,) (NP (NNP Store) (HYPH -) (NNP zechin)) (VP (VP (VBZ is) (ADJP (ADJP (JJ excellent) (JJR more)) (PP (IN than) (NP (DT the) (JJ latter) (CD two) (NNS algorithms))))) (, ,) (CC and) (VP (VBZ has) (NP (DT a) (JJR better) (NN application) (NN prospect)))) (. .))
