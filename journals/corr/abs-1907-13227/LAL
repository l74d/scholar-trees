(S (S (NP (NP (DT The) (NN study)) (PP (IN of) (NP (NP (NN polarity)) (PP (IN in) (NP (NN computation)))))) (VP (VBZ has) (VP (VBN revealed) (SBAR (IN that) (S (NP (DT an) (`` ``) (NN ideal) ('' '') (VBG programming) (NN language)) (VP (NNS combines) (NP (DT both) (JJ call-by-value) (CC and) (JJ call-by-name) (NN evaluation)))))))) (: ;) (S (NP (DT the) (CD two) (VBG calling) (NNS conventions)) (VP (VBP are) (DT each) (ADJP (NN ideal)) (PP (IN for) (NP (NP (PDT half) (DT the) (NNS types)) (PP (IN in) (NP (DT a) (JJ programming) (NN language))))))) (. .))
(S (CC But) (NP (DT this) (JJ binary) (NN choice)) (VP (VBZ leaves) (PRT (RP out)) (NP (NP (NN call-by-need)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN used) (PP (IN in) (NP (NN practice))) (S (VP (TO to) (VP (VB implement) (NP (NP (JJ lazy-by-default) (NNS languages)) (PP (IN like) (NP (NNP Haskell))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (NP (NP (DT the) (NN notion)) (PP (IN of) (NP (NN polarity)))) (VP (MD can) (VP (VB be) (VP (VBN extended) (PP (IN beyond) (NP (DT the) (JJ value/name) (NN dichotomy))) (S (VP (TO to) (VP (VB include) (NP (JJ call-by-need))))) (PP (IN by) (S (VP (VBG adding) (NP (NP (DT a) (NN mechanism)) (PP (IN for) (NP (VBG sharing))) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADJP (JJ enough) (S (VP (TO to) (VP (VB compile) (NP (NP (DT a) (JJ Haskell-like) (JJ functional) (NN language)) (PP (IN with) (NP (JJ user-defined) (NNS types))))))))))))))))))))) (. .))
(S (S (NP (NP (DT The) (NN key)) (PP (TO to) (S (VP (VBG capturing) (NP (VBG sharing)) (PP (IN in) (NP (DT this) (NN mixed-evaluation) (NN setting))))))) (VP (VBZ is) (S (VP (TO to) (VP (VB generalize) (NP (NP (DT the) (JJ usual) (NN notion)) (PP (IN of) (NP (NN polarity) (`` ``) (NNS shifts))))))))) (: :) ('' '') (S (PP (RB rather) (IN than) (NP (NP (RB just) (CD two) (NNS shifts)) (PRN (-LRB- -LRB-) (PP (IN between) (NP (JJ positive) (CC and) (JJ negative))) (-RRB- -RRB-)))) (NP (PRP we)) (VP (VBP have) (NP (NP (DT a) (NN family)) (PP (IN of) (NP (CD four) (JJ dual) (NNS shifts)))))) (. .))
(S (NP (PRP We)) (VP (VBP expand) (PP (IN on) (NP (NP (NP (DT this) (NN idea)) (PP (IN of) (NP (JJ logical) (NN duality)))) (PRN (: —) (: -) (S ('' '') (CC and) ('' '') (VP (VBZ is) (ADJP (ADJP (JJ dual) (PP (PP (TO to)) (`` ``) (CC or))) (: ;) ('' '') (S (NP (NN proof)) (VP (VBZ is) (ADJP (JJ dual) (PP (TO to) (NP (VB refutation))))))))) (: —)))) (PP (VB -for) (NP (NP (DT the) (NN purpose)) (PP (IN of) (S (VP (VBG compiling) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (NNS types)))))))))) (. .))
(S (PP (VBN Based) (PP (IN on) (NP (NP (DT a) (JJ general) (NN notion)) (PP (IN of) (NP (NNS data) (CC and) (NNS codata)))))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (NP (JJ classical) (NNS connectives)) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB encode) (NP (NP (DT a) (JJ wide) (NN range)) (PP (IN of) (NP (ADJP (JJ built-in) (CC and) (JJ user-defined)) (NNS types))))))))))))) (. .))
(S (PP (IN In) (NP (NP (NN contrast)) (PP (IN with) (NP (NP (DT an) (JJ intuitionistic) (NN logic)) (VP (VBG corresponding) (PP (TO to) (NP (VB pure) (JJ functional) (NN programming)))))))) (, ,) (NP (DT these) (JJ classical) (NNS connectives)) (VP (VBP bring) (NP (NP (JJR more)) (PP (IN of) (NP (NP (DT the) (JJ pleasant) (NNS symmetries)) (PP (IN of) (NP (JJ classical) (NN logic)))))) (PP (TO to) (NP (DT the) (JJ computationally-relevant) (, ,) (JJ constructive) (NN setting)))) (. .))
(S (PP (IN In) (NP (JJ particular))) (, ,) (NP (NP (DT an) (JJ involutive) (NN pair)) (PP (IN of) (NP (NNS negations)))) (VP (VBP bridges) (NP (NP (DT the) (NN gulf)) (PP (IN between) (NP (NP (DT the) (JJ wide-spread) (NNS notions)) (PP (IN of) (NP (NP (NP (JJ parametric) (NN polymorphism)) (CC and) (NP (JJ abstract) (NNS data) (NNS types))) (PP (IN in) (NP (NN programming) (NNS languages))))))))) (. .))
(S (S (VP (TO To) (VP (VB complete) (NP (NP (DT the) (NN study)) (PP (IN of) (NP (NP (NN duality)) (PP (IN in) (NP (NN compilation))))))))) (, ,) (NP (PRP we)) (ADVP (RB also)) (VP (VBP consider) (NP (NP (DT the) (JJ dual)) (PP (TO to) (NP (NP (JJ call-by-need) (NN evaluation)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (NNS shares) (NP (NP (DT the) (NN computation)) (PP (IN within) (NP (NP (DT the) (NN control) (NN flow)) (PP (IN of) (NP (DT a) (NN program)))))) (PP (RB instead) (IN of) (NP (NP (NN computation)) (PP (IN within) (NP (DT the) (NN information) (NN flow)))))))))))) (. .))
