(S (SBAR (IN In) (NN order) (S (VP (TO to) (VP (VB find) (NP (JJ Hamiltonian) (NN cycle)))))) (, ,) (NP (NN algorithm)) (VP (MD should) (VP (VB find) (NP (NP (NNS edges)) (SBAR (WHNP (WDT that)) (S (VP (VBZ creates) (NP (DT a) (JJ Hamiltonian) (NN cycle)))))))) (. .))
(S (NP (NP (JJR Higher) (NN number)) (PP (IN of) (NP (NNS edges)))) (VP (NNS creates) (NP (JJR more) (NNS possibilities) (S (VP (TO to) (VP (VB check) (S (VP (TO to) (VP (VB solve) (NP (DT the) (NN problem)))))))))) (. .))
(S (NP (NNP Algorithm)) (VP (VBZ rests) (PP (IN on) (NP (NP (NN analysis)) (PP (IN of) (NP (NP (JJ original) (NN graph)) (CC and) (NP (NP (JJ opposite) (NN graph)) (PP (TO to) (NP (PRP it))))))))) (. .))
(S (NP (NNP Algorithm)) (VP (MD can) (VP (VP (VB remove) (NP (JJ unnecessary) (NNS edges)) (PP (IN from) (NP (NN graph)))) (CC and) (VP (NN test) (SBAR (WHADVP (WRB when)) (S (NP (JJ Hamiltonian) (NN cycle)) (VP (MD ca) (RB n't) (VP (VB exist) (PP (IN in) (NP (NN graph)))))))))) (. .))
(S (NP (NNP Algorithm)) (VP (NNS prefers) (`` ``) (VP (TO to) (VP (VB think) (PP (IN over) ('' '') (SBAR (WHNP (WDT which) (NNS paths)) (S (VP (MD should) (VP (VB be) (VP (VBN checked))))))))) (SBAR (IN than) (S (VP (VB check) (NP (JJ many) (JJ wrong) (NNS paths)))))) (. .))
