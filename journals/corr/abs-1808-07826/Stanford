(S (NP (JJ Incremental) (NNS computations)) (VP (VBP attempt) (S (VP (TO to) (VP (VB exploit) (NP (NP (NN input) (NNS similarities)) (PP (IN over) (NP (NN time)))) (, ,) (S (VP (VBG reusing) (NP (NP (NN work)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (JJ unaffected) (PP (IN by) (NP (NN input) (NNS changes)))))))))))))) (. .))
(S (S (VP (TO To) (VP (VB maximize) (S (NP (DT this)) (VP (VB reuse) (PP (IN in) (NP (DT a) (NML (JJ general) (HYPH -) (NN purpose)) (NN programming) (NN setting)))))))) (, ,) (NP (NNS programmers)) (VP (VBP need) (NP (DT a) (NN mechanism)) (S (VP (TO to) (VP (VB identify) (NP (NP (NP (JJ dynamic) (NNS allocations)) (-LRB- -LRB-) (PP (IN of) (NP (NNS data) (CC and) (NNS subcomputations))) (-RRB- -RRB-)) (SBAR (WHNP (WDT that)) (S (VP (VBP correspond) (PP (IN over) (NP (NN time))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (NNS Fungi)) (, ,) (NP (NP (DT a) (VBN typed) (JJ functional) (NN language)) (PP (IN for) (NP (JJ incremental) (NN computation))) (PP (IN with) (NP (NNS names)))))) (. .))
(S (PP (IN Unlike) (NP (NP (JJ prior) (NML (JJ general) (HYPH -) (NN purpose)) (NNS languages)) (PP (IN for) (NP (JJ incremental) (NN computing))))) (, ,) (NP (NP (NP (NNP Fungi) (POS 's)) (NN notion)) (PP (IN of) (NP (NNS names)))) (VP (VBZ is) (ADJP (ADJP (JJ formal)) (, ,) (ADJP (JJ general)) (, ,) (CC and) (ADJP (RB statically) (JJ verifiable)))) (. .))
(S (NP (NP (NNS Fungi) (POS 's)) (NML (NN type) (HYPH -) (CC and) (HYPH -) (NN effect)) (NN system)) (VP (VBZ permits) (NP (DT the) (NN programmer) (S (VP (VP (TO to) (VP (VB encode) (NP (NP (-LRB- -LRB-) (NN program) (HYPH -) (JJ specific) (-RRB- -RRB-)) (NP (JJ local) (NNS invariants))) (PP (IN about) (NP (NNS names))))) (, ,) (CC and) (VP (TO to) (VP (VB use) (NP (DT these) (NNS invariants)) (S (VP (TO to) (VP (VB establish) (NP (JJ global) (NN uniqueness)) (PP (IN for) (NP (NP (PRP$ their) (ADJP (VBN composed)) (NNS programs)) (, ,) (NP (NP (DT the) (NN property)) (PP (IN of) (S (VP (VBG using) (NP (NNS names)) (ADVP (RB correctly))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (S (NP (ADJP (RB that) (RB well) (HYPH -) (VBN typed)) (NNS Fungi)) (NP (NP (NNS programs)) (NP (NN respect) (JJ global) (NN uniqueness))))) (. .))
(S (S (NP (PRP We)) (VP (VBP derive) (NP (NP (DT a) (JJ bidirectional) (NN version)) (PP (IN of) (NP (DT the) (NML (NN type) (CC and) (NN effect)) (NN system)))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP have) (VP (VBN implemented) (NP (NP (DT a) (NN prototype)) (PP (IN of) (NP (NNP Fungi)))) (PP (IN in) (NP (NNP Rust)))))) (. .))
(S (NP (PRP We)) (VP (VBP apply) (NP (NNS Fungi)) (PP (IN to) (NP (NP (DT a) (NN library)) (PP (IN of) (NP (JJ incremental) (NNS collections))))) (, ,) (S (VP (VBG showing) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ is) (ADJP (JJ expressive) (PP (IN in) (NP (NN practice)))))))))) (. .))
