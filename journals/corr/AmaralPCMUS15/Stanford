(FRAG (S (NP (NNP Microservices) (NN architecture)) (VP (VBZ has) (VP (VBN started) (NP (NP (DT a) (JJ new) (NN trend)) (PP (IN for) (NP (NN application) (NN development)))) (PP (IN for) (NP (NP (DT a) (NN number)) (PP (IN of) (NP (NP (NNS reasons)) (: :) (NP (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-)) (NP (NP (NML (S (VP (TO to) (VP (VB reduce) (NP (NN complexity)) (PP (IN by) (S (VP (VBG using) (NP (NP (NP (ADJP (JJ tiny)) (NNS services)) (: ;) (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))) (SBAR (S (VP (TO to) (VP (VB scale) (, ,) (VB remove) (CC and) (VB deploy))))))))))))) (NNS parts)) (PP (IN of) (NP (NP (NP (NP (DT the) (NN system)) (ADVP (RB easily))) (: ;) (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-))) (SBAR (S (VP (TO to) (VP (VB improve) (NP (NN flexibility))))))))) (S (VP (TO to) (VP (VB use) (NP (JJ different) (NNS frameworks) (CC and) (NNS tools))))))))))))) (, ;) (SBAR (LST (-LRB- -LRB-) (LS 4) (-RRB- -RRB-)) (S (S (VP (TO to) (VP (VB increase) (NP (DT the) (JJ overall) (NN scalability) (: ;))))) (CC and) (S (FRAG (SBAR (LST (-LRB- -LRB-) (LS 5) (-RRB- -RRB-)) (S (NP (TO to)) (VP (VB improve) (NP (NP (DT the) (NN resilience)) (PP (IN of) (NP (DT the) (NN system))))))))))) (. .))
(S (NP (NNP Containers)) (VP (VBP have) (VP (VBN empowered) (NP (NP (DT the) (NN usage)) (PP (IN of) (NP (NNS microservices) (NNS architectures)))) (PP (IN by) (S (VP (VP (VBG being) (ADJP (JJ lightweight))) (, ,) (VP (VBG providing) (NP (NML (JJ fast) (NN start) (HYPH -) (NN up)) (NNS times))) (, ,) (CC and) (VP (VBG having) (NP (DT a) (JJ low) (NN overhead)))))))) (. .))
(S (NP (NNP Containers)) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB develop) (NP (NNS applications)) (PP (VBN based) (PP (IN on) (NP (NP (JJ monolithic) (NNS architectures)) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (JJ whole) (NN system)) (VP (VBZ runs) (PP (PP (IN inside) (NP (DT a) (JJ single) (NN container))) (CC or) (PP (IN inside) (NP (DT a) (NN microservices) (NN architecture)))) (SBAR (WHADVP (WRB where)) (S (NP (QP (CD one) (CC or) (JJ few)) (NNS processes)) (VP (VBP run) (PP (IN inside) (NP (DT the) (NNS containers)))))))))))))))))) (. .))
(S (NP (CD Two) (NNS models)) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB implement) (NP (DT a) (NNS microservices) (NN architecture)) (S (VP (VBG using) (NP (NP (NNS containers)) (: :) (NP (NN master) (HYPH -) (NN slave)) (, ,) (CC or) (NP (VBN nested) (HYPH -) (NN container))))))))))) (. .))
(S (NP (NP (DT The) (NN goal)) (PP (IN of) (NP (DT this) (NN work)))) (VP (VBZ is) (S (VP (TO to) (VP (VB compare) (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (NN CPU) (CC and) (NN network)))) (S (VP (VBG running) (NP (NNS benchmarks)) (PP (IN in) (NP (NP (DT the) (CD two) (JJ aforementioned) (NNS models)) (PP (IN of) (NP (NP (NNS microservices)) (SBAR (S (NP (NN architecture)) (ADVP (RB hence)) (VP (VBP provide) (NP (NP (DT a) (NN benchmark) (NN analysis) (NN guidance)) (PP (IN for) (NP (NN system) (NNS designers))))))))))))))))) (. .))
