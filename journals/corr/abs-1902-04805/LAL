(S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (NP (DT a) (JJ new) (NN algorithm)) (PP (IN for) (NP (NP (DT the) (NN fast) (, ,) (VBD shared) (NN memory) (, ,) (JJ multi-core) (NN computation)) (PP (IN of) (NP (JJ augmented) (NN contour) (NNS trees))) (PP (IN on) (NP (NNS triangulations))))))) (. .))
(S (PP (IN In) (NP (NP (NN contrast)) (PP (TO to) (NP (RBS most) (JJ existing) (NN parallel) (IN algorithms))))) (NP (PRP$ our) (NN technique)) (VP (NNS computes) (NP (VBD augmented) (NNS trees)) (, ,) (S (VP (VBG enabling) (NP (NP (DT the) (JJ full) (NN extent)) (PP (IN of) (NP (NP (ADJP (NN contour) (NN tree) (VBN based)) (NNS applications)) (PP (VBG including) (NP (NNS data) (NN segmentation))))))))) (. .))
(S (NP (PRP$ Our) (NN approach)) (VP (ADVP (RB completely)) (VBZ revisits) (NP (DT the) (JJ traditional) (, ,) (JJ sequential) (NN contour) (NN tree) (NN algorithm)) (S (VP (TO to) (VP (VB re-formulate) (NP (NP (PDT all) (DT the) (NNS steps)) (PP (IN of) (NP (DT the) (NN computation)))) (PP (IN as) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (JJ independent) (JJ local) (NNS tasks))))))))) (. .))
(S (NP (DT This)) (VP (VBZ includes) (NP (NP (DT a) (JJ new) (NN computation) (NN procedure)) (VP (VBN based) (PP (IN on) (NP (NP (NNP Fibonacci) (NNS heaps)) (PP (IN for) (NP (NP (DT the) (NN join) (CC and) (NN split) (NNS trees)) (, ,) (NP (NP (CD two) (JJ intermediate) (NNS data) (NNS structures)) (VP (VBN used) (S (VP (TO to) (VP (VB compute) (NP (DT the) (NN contour) (NN tree))))))) (, ,) (SBAR (WHNP (WP$ whose) (NNS constructions)) (S (VP (VBP are) (ADVP (RB efficiently)) (VP (VBN carried) (PRT (RP out)) (ADVP (RB concurrently)) (NP (NP (NNS thanks)) (PP (TO to) (NP (NP (DT the) (JJ dynamic) (NN scheduling)) (PP (IN of) (NP (NN task) (NN parallelism))))))))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP introduce) (NP (NP (DT a) (JJ new) (JJ parallel) (NN algorithm)) (PP (IN for) (NP (NP (DT the) (NN combination)) (PP (IN of) (NP (DT these) (CD two) (NNS trees)))))) (PP (IN into) (NP (DT the) (NN output) (JJ global) (NN contour) (NN tree)))) (. .))
(S (ADVP (JJ Overall)) (, ,) (NP (DT this)) (VP (NNS results) (PP (IN in) (NP (NP (JJ superior) (NN time) (NN performance)) (PP (IN in) (NP (NN practice))))) (, ,) (PP (PP (DT both) (PP (IN in) (NP (NN sequential))) (CC and) (PP (IN in) (NP (JJ parallel)))) (NP (NP (NNS thanks)) (PP (TO to) (NP (DT the) (NNP OpenMP) (NN task) (NN runtime)))))) (. .))
(S (NP (PRP We)) (VP (VBP report) (NP (NP (NN performance) (NNS numbers)) (SBAR (WHNP (WDT that)) (S (VP (VBP compare) (NP (PRP$ our) (NN approach)) (PP (TO to) (NP (NP (VB reference) (ADJP (JJ sequential) (CC and) (JJ multi-threaded)) (NNS implementations)) (PP (IN for) (NP (NP (DT the) (NN computation)) (PP (IN of) (NP (JJ augmented) (NN merge) (CC and) (NN contour) (NNS trees)))))))))))) (. .))
(S (NP (DT These) (NNS experiments)) (VP (VBP demonstrate) (NP (NP (NP (DT the) (JJ run-time) (NN efficiency)) (PP (IN of) (NP (PRP$ our) (NN approach)))) (CC and) (NP (NP (PRP$ its) (NN scalability)) (PP (IN on) (NP (JJ common) (NNS workstations)))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (NP (NP (DT the) (NN utility)) (PP (IN of) (NP (PRP$ our) (NN approach)))) (PP (IN in) (NP (NNS data) (NN segmentation) (NNS applications)))) (. .))
