(S (NP (DT The) (NN algorithm)) (ADVP (RB cleanly)) (VP (VBZ separates) (NP (NP (JJ numerical)) (PP (IN from) (NP (JJ combinatorial) (NN computation))))) (. .))
(S (S (PP (VBN Based) (PP (IN on) (NP (DT this)))) (, ,) (NP (DT the) (JJ numerical) (NN part)) (ADVP (RB provably)) (VP (VBZ computes) (NP (NP (RB only) (DT the) (NN information)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (RB strictly) (JJ necessary) (PP (IN for) (NP (DT the) (VBG following) (JJ combinatorial) (NN part)))))))))) (, ,) (CC and) (S (NP (DT the) (JJ combinatorial) (NN part)) (VP (MD may) (VP (VB optimize) (NP (PRP$ its) (NN computation)) (PP (VBN based) (PP (IN on) (NP (NP (DT the) (JJ numerical) (NN information)) (VP (VBN computed) (ADVP (RB before))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP present) (NP (JJ computational) (NNS experiments)) (PP (VBN based) (PP (IN on) (NP (NP (DT an) (NN implementation)) (PP (IN of) (NP (DT the) (NN algorithm))))))) (. .))
(S (ADVP (RB Also)) (, ,) (PP (IN in) (NP (NP (NN contrast)) (PP (IN to) (NP (JJ previous) (NN work))))) (, ,) (NP (DT the) (NN algorithm)) (VP (VP (VBZ does) (RB not) (VP (VB assume) (NP (NP (NN knowledge)) (PP (IN of) (NP (NP (DT a) (NNP Lipschitz) (NN constant)) (PP (IN of) (NP (DT the) (NN function) (NN f)))))))) (, ,) (CC and) (VP (VBZ works) (PP (IN for) (NP (NP (JJ arbitrary) (JJ continuous) (NNS functions)) (SBAR (WHPP (IN for) (WHNP (WDT which))) (S (NP (NP (DT some) (NN notion)) (PP (IN of) (NP (NN interval) (NN arithmetic)))) (VP (MD can) (VP (VB be) (VP (VBN defined)))))))))) (. .))
