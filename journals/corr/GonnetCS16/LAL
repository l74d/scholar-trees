(S (NP (DT This) (NN paper)) (VP (VBZ describes) (NP (NP (NNP QuickSched)) (, ,) (NP (NP (DT a) (ADJP (NN compact) (CC and) (JJ efficient)) (NNP Open-Source) (NNP C-language) (NN library)) (PP (IN for) (NP (JJ task-based) (JJ shared-memory) (NN parallel) (NN programming)))))) (. .))
(S (NP (VBN QuickSched)) (VP (VBZ extends) (NP (NP (DT the) (JJ standard) (JJ dependency-only) (NN scheme)) (PP (IN of) (NP (JJ task-based) (NN programming)))) (PP (IN with) (NP (NP (DT the) (NN concept)) (PP (IN of) (NP (NP (NN task) (NNS conflicts)) (, ,) (NP (NP (NNS i.e.~sets)) (PP (IN of) (NP (NNS tasks))) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB be) (VP (VBN executed) (UCP (PP (IN in) (NP (DT any) (NN order))) (, ,) (RB yet) (RB not) (ADVP (RB concurrently)))))))))))))) (. .))
(S (NP (DT These) (NNS conflicts)) (VP (VBP are) (VP (VBN modelled) (S (VP (VBG using) (NP (ADJP (RB exclusively) (JJ lockable)) (JJ hierarchical) (NNS resources)))))) (. .))
(S (NP (NP (DT The) (NN scheduler)) (NP (PRP itself))) (VP (VP (VBZ prioritizes) (NP (NNS tasks)) (PP (IN along) (NP (NP (DT the) (JJ critical) (NN path)) (PP (IN of) (NP (NN execution)))))) (CC and) (VP (VBZ is) (VP (VBN shown) (S (VP (TO to) (VP (VB perform) (CC and) (VB scale) (ADVP (RB well)) (PP (IN on) (NP (DT a) (JJ 64-core) (JJ parallel) (JJ shared-memory) (NN machine))) (PP (IN for) (NP (NP (CD two) (NN example) (NNS problems)) (: :) (NP (NP (DT A) (JJ tiled) (NNP QR) (NN decomposition)) (CC and) (NP (DT a) (JJ task-based) (NNP Barnes-Hut) (NN tree) (NN code))))))))))) (. .))
