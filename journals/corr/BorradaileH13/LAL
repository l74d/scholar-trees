(S (NP (PRP We)) (VP (VBP give) (NP (NP (DT an) (JJ iterative) (NN algorithm)) (PP (IN for) (S (VP (VBG finding) (NP (NP (DT the) (JJ maximum) (NN flow)) (PP (IN between) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (NNS sources) (CC and) (NNS sinks)) (SBAR (WHNP (WDT that)) (S (VP (VBP lie) (PP (IN on) (NP (NP (DT the) (NN boundary)) (PP (IN of) (NP (DT a) (NN planar) (NN graph)))))))))))))))))) (. .))
(S (NP (PRP$ Our) (NN algorithm)) (VP (VBZ uses) (NP (NP (RB only) (NNP O) (PRN (-LRB- -LRB-) (NN n) (-RRB- -RRB-)) (NNS queries)) (PP (TO to) (NP (VB simple) (NNS data) (NNS structures)))) (, ,) (S (VP (VBG achieving) (NP (NP (DT an) (NNP O) (PRN (-LRB- -LRB-) (JJ n) (NN log) (NN n) (-RRB- -RRB-)) (NN running) (NN time)) (SBAR (WHNP (IN that)) (S (NP (PRP we)) (VP (VBP expect) (S (VP (TO to) (VP (VB be) (ADJP (JJ practical)) (PP (VBN given) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (JJ simple) (NNS primitives))))))))))))))) (. .))
(S (NP (NP (DT The) (JJ only) (VBG existing) (NN algorithm)) (PP (IN for) (NP (DT this) (NN problem)))) (VP (VP (VBZ uses) (NP (RB divide) (CC and) (NN conquer))) (CC and) (, ,) (SBAR (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB achieve) (NP (DT an) (NNP O) (PRN (-LRB- -LRB-) (JJ n) (NN log) (NN n) (-RRB- -RRB-)) (NN running) (NN time)))))) (, ,) (VP (VBZ requires) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NP (DT the) (PRN (-LRB- -LRB-) (VBN complicated) (-RRB- -RRB-)) (JJ linear-time) (JJ shortest-paths) (NN algorithm)) (PP (IN for) (NP (NN planar) (NN graphs))))))))) (. .))
