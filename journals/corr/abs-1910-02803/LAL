(S (NP (PRP We)) (VP (VBP present) (PP (IN in) (NP (DT this) (NN paper))) (NP (DT a) (ADJP (NN Work) (VBG Stealing)) (JJ lightweight) (NNP PYTHON) (NN simulator))) (. .))
(S (NP (PRP$ Our) (NN simulator)) (VP (VBZ is) (VP (VBN used) (S (VP (TO to) (VP (VB execute) (NP (NP (DT an) (NN application)) (PRN (-LRB- -LRB-) (NP (NP (NN list)) (PP (IN of) (NP (NP (NNS tasks)) (PP (IN with) (CC or) (IN without) (NP (NNS dependencies)))))) (-RRB- -RRB-))) (, ,) (PP (IN on) (NP (NP (DT a) (JJ multiple) (NNS processors) (NN platform)) (VP (VBN linked) (PP (IN by) (NP (JJ specific) (NN topology))))))))))) (. .))
(S (S (NP (PRP We)) (ADVP (RB first)) (VP (VBP give) (NP (NP (DT an) (NN overview)) (PP (IN of) (NP (NP (DT the) (JJ different) (NNS variants)) (PP (IN of) (NP (DT the) (NN work) (VBG stealing) (NNS algorithm)))))))) (, ,) (S (ADVP (RB then)) (NP (PRP we)) (VP (VBP present) (NP (NP (DT the) (NN architecture)) (PP (IN of) (NP (PRP$ our) (JJ light) (NNP Work) (NNP Stealing) (NN simulator)))))) (. .))
(S (NP (PRP$ Its) (NN architecture)) (VP (VBZ facilitates) (NP (NP (DT the) (NN development)) (PP (IN of) (NP (NP (NP (JJ other) (NNS types)) (PP (IN of) (NP (NNS applications)))) (CC and) (NP (NP (JJ other) (NNS topologies)) (PP (IN for) (S (VP (VBG interconnecting) (NP (DT the) (NNS processors)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (NP (DT the) (NN use) (NNS cases)) (PP (IN of) (NP (DT the) (NN simulator)))) (CC and) (NP (NP (DT the) (JJ different) (NNS types)) (PP (IN of) (NP (NNS results)))))) (. .))
