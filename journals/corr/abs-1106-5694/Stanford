(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP modify) (NP (NP (DT a) (JJ fast) (NN heuristic) (NN solver)) (PP (IN for) (NP (NP (DT the) (NNP Linear) (NNP Sum) (NNP Assignment) (NNP Problem) (PRN (-LRB- -LRB-) (NP (NNP LSAP)) (-RRB- -RRB-))) (PP (IN for) (NP (NN use)))))) (PP (IN on) (NP (JJ Graphical) (NNP Processing) (NNP Units))) (PRN (-LRB- -LRB-) (NP (NNS GPUs)) (-RRB- -RRB-))) (. .))
(S (NP (DT The) (VBG motivating) (NN scenario)) (VP (VBZ is) (NP (DT an) (JJ industrial) (NN application)) (SBAR (IN for) (S (NP (NN P2P)) (VP (VBP live) (NP (NP (NN streaming)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (VP (VBN moderated) (PP (IN by) (NP (NP (DT a) (JJ central) (NN node)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB periodically)) (VP (VBG solving) (NP (NN LSAP) (NNS instances)) (PP (IN for) (S (VP (VBG assigning) (NP (NNS peers)) (PP (IN to) (NP (CD one) (DT another))))))))))))))))))))) (. .))
(S (NP (DT The) (JJ central) (NN node)) (VP (VBZ needs) (S (VP (TO to) (VP (VB handle) (NP (NP (NN LSAP) (NNS instances)) (PP (VBG involving) (NP (NP (NNS thousands)) (PP (IN of) (NP (NP (NNS peers)) (PP (IN in) (ADVP (ADVP (RB as) (JJ near) (PP (IN to) (NP (JJ real) (HYPH -) (NN time)))) (SBAR (IN as) (FRAG (ADJP (JJ possible))))))))))))))) (. .))
(S (NP (PRP$ Our) (NNS findings)) (VP (VBP are) (ADJP (JJ generic) (JJ enough) (S (VP (TO to) (VP (VB be) (VP (VBN applied) (PP (IN in) (NP (JJ other) (NNS contexts))))))))) (. .))
(S (NP (PRP$ Our) (JJ main) (NN result)) (VP (VBZ is) (NP (NP (DT a) (JJ parallel) (NN version)) (PP (IN of) (NP (NP (DT a) (NN heuristic) (NN algorithm)) (VP (VBN called) (NP (NP (NNP Deep) (NNP Greedy)) (VP (VBG Switching) (NP (NP (-LRB- -LRB-) (NN DGS) (-RRB- -RRB-)) (PP (IN on) (NP (NP (NNS GPUs)) (VP (VBG using) (NP (DT the) (NNP CUDA) (NN programming) (NN language))))))))))))) (. .))
(S (NP (NN DGS) (NNS sacrifices)) (VP (VP (NP (JJ absolute) (NN optimality)) (PP (IN in) (NP (NP (NN favor)) (PP (IN of) (NP (NML (JJ low) (NN computation)) (NN time)))))) (CC and) (VP (VBD was) (VP (VBN designed) (PP (IN as) (NP (DT an) (NN alternative))) (PP (IN to) (NP (NP (NML (JJ classical) (NN LSAP)) (NNS solvers)) (PP (JJ such) (IN as) (NP (NP (DT the) (JJ Hungarian)) (CC and) (NP (NN auctioning) (NNS methods))))))))) (. .))
(S (S (NP (NP (DT The) (NN contribution)) (PP (IN of) (NP (DT the) (NN paper)))) (VP (VBZ is) (ADVP (RB threefold)))) (: :) (S (ADVP (RB First)) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (NP (DT the) (NN process)) (PP (IN of) (NP (NN trial) (CC and) (NN error)))) (SBAR (S (NP (PRP we)) (VP (VBD went) (ADVP (RB through)) (, ,) (PP (IN in) (NP (NP (DT the) (NN hope)) (SBAR (IN that) (S (NP (PRP$ our) (NN experience)) (VP (MD will) (VP (VB be) (ADJP (JJ beneficial) (PP (IN to) (NP (NP (NNS adopters)) (PP (IN of) (NP (NNP GPU) (NN programming)))))) (PP (IN for) (NP (JJ similar) (NNS problems))))))))))))))) (. .))
(S (ADVP (RB Second)) (, ,) (NP (PRP we)) (VP (VBP show) (NP (NP (DT the) (NNS modifications)) (VP (VBN needed) (S (VP (TO to) (VP (VB parallelize) (NP (DT the) (NN DGS) (NN algorithm)))))))) (. .))
(S (ADVP (JJ Third)) (, ,) (NP (PRP we)) (VP (VBP show) (NP (NP (DT the) (NN performance) (NNS gains)) (PP (IN of) (NP (PRP$ our) (NN approach)))) (PP (VBN compared) (PP (IN to) (NP (CC both) (NP (NP (DT a) (ADJP (NP (JJ sequential) (NN CPU)) (HYPH -) (VBN based)) (NN implementation)) (PP (IN of) (NP (NN DGS)))) (CC and) (NP (NP (DT a) (ADJP (NP (JJ parallel) (NN GPU)) (HYPH -) (VBN based)) (NN implementation)) (PP (IN of) (NP (DT the) (VBG auctioning) (NN algorithm)))))))) (. .))
