(S (NP (NNP Workflow) (NN graphs)) (VP (VBP extend) (NP (JJ classical) (NN flow) (NNS charts)) (PP (IN with) (NP (JJ concurrent) (NN fork) (CC and) (NN join) (NNS nodes)))) (. .))
(S (NP (PRP They)) (VP (VBP constitute) (NP (NP (DT the) (NN core)) (PP (IN of) (NP (NP (NN business) (NN processing) (NNS languages)) (PP (JJ such) (IN as) (NP (NP (NNP BPMN)) (CC or) (NP (NNP UML) (NNP Activity) (NNP Diagrams)))))))) (. .))
(S (NP (NP (DT The) (NNS activities)) (PP (IN of) (NP (DT a) (JJ workflow) (NN graph)))) (VP (VBP are) (VP (VBN executed) (PP (IN by) (NP (NP (NNS humans) (CC or) (NNS machines)) (, ,) (VP (ADVP (RB generically)) (VBD called) (S (NP (NNS resources)))))))) (. .))
(S (SBAR (IN If) (S (NP (JJ concurrent) (NNS activities)) (VP (MD can) (RB not) (VP (VB be) (VP (VBN executed) (PP (IN in) (NP (NN parallel))) (PP (IN by) (NP (NP (NN lack)) (PP (IN of) (NP (NNS resources)))))))))) (, ,) (NP (NP (DT the) (NN time)) (VP (VBN needed) (S (VP (TO to) (VP (VB execute) (NP (DT the) (NN workflow))))))) (VP (NNS increases)) (. .))
(S (NP (PRP We)) (VP (VBP study) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG computing) (NP (NP (DT the) (JJ minimal) (NN number)) (PP (IN of) (NP (NNS resources))) (ADJP (JJ necessary) (S (VP (TO to) (VP (VP (ADVP (RB fully)) (VB exploit) (NP (NP (DT the) (NN concurrency)) (PP (IN of) (NP (DT a) (VBN given) (NN workflow))))) (, ,) (CC and) (VP (VB execute) (NP (PRP it)) (ADVP (ADVP (ADVP (RB as) (RB fast)) (PP (IN as) (ADJP (JJ possible)))) (PRN (-LRB- -LRB-) (JJ i.e.) (, ,) (ADVP (ADVP (RB as) (RB fast)) (PP (IN as) (PP (IN with) (NP (JJ unlimited) (NNS resources))))) (-RRB- -RRB-)))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP model) (NP (DT this) (NN problem)) (S (VP (VBG using) (NP (NP (JJ free-choice) (NNP Petri) (NNS nets)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (VP (VBN known) (S (VP (TO to) (VP (VB be) (ADJP (JJ equivalent) (PP (TO to) (NP (VB workflow) (NN graphs))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP analyze) (NP (NP (DT the) (JJ computational) (NN complexity)) (PP (IN of) (NP (NP (NP (CD two) (NNS versions)) (PP (IN of) (NP (DT the) (NN problem)))) (: :) (S (VP (VBG computing) (NP (DT the) (NN resource) (CC and) (NN concurrency) (NNS thresholds)))))))) (. .))
(S (NP (PRP We)) (VP (VBP use) (NP (DT the) (NNS results)) (S (VP (TO to) (VP (VP (VB design) (NP (NP (DT an) (NN algorithm)) (SBAR (S (VP (TO to) (VP (VB approximate) (NP (DT the) (NN concurrency) (NN threshold)))))))) (, ,) (CC and) (VP (VB evaluate) (NP (PRP it)) (PP (IN on) (NP (NP (DT a) (JJ benchmark) (NN suite)) (PP (IN of) (NP (CD 642) (JJ industrial) (NNS examples)))))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ performs) (ADVP (RB very) (RB well)) (PP (IN in) (NP (NN practice)))))))) (: :) (S (NP (PRP It)) (VP (VP (ADVP (RB always)) (VBZ provides) (NP (DT the) (JJ exact) (NN value))) (, ,) (CC and) (VP (ADVP (RB never)) (VBZ takes) (NP (QP (JJR more) (IN than) (CD 30)) (NNS milliseconds)) (PP (IN for) (NP (DT any) (NN workflow))) (, ,) (PP (RB even) (IN for) (NP (NP (DT those)) (PP (IN with) (NP (NP (DT a) (JJ huge) (NN number)) (PP (IN of) (NP (JJ reachable) (NNS markings)))))))))) (. .))
