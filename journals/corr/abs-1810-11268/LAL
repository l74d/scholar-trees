(S (NP (NP (DT The) (JJ last) (NNS improvements)) (PP (IN in) (NP (NP (VBG programming) (NNS languages)) (, ,) (NP (VBG programming) (NNS models)) (, ,) (CC and) (NP (NNS frameworks))))) (VP (VBP have) (VP (VBN focused) (PP (IN on) (S (VP (VBG abstracting) (NP (DT the) (NNS users)) (PP (IN from) (NP (JJ many) (VBG programming) (NNS issues)))))))) (. .))
(S (PP (IN Among) (NP (NNS others))) (, ,) (NP (JJ recent) (NN programming) (NNS frameworks)) (VP (VBP include) (NP (NP (JJ simpler) (NN syntax)) (, ,) (NP (NP (JJ automatic) (NN memory) (NN management)) (CC and) (NP (NP (NN garbage) (NN collection)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ simplifies) (NP (NP (NN code) (NN re-usage)) (PP (IN through) (NP (JJ library) (NNS packages))))))))) (, ,) (CC and) (NP (NP (ADJP (RB easily) (JJ configurable)) (NNS tools)) (PP (IN for) (NP (NN deployment)))))) (. .))
(S (PP (IN For) (NP (NN instance))) (, ,) (NP (NNP Python)) (VP (VBZ has) (VP (VBN risen) (PP (TO to) (NP (NP (DT the) (NN top)) (PP (IN of) (NP (NP (DT the) (NN list)) (PP (IN of) (NP (DT the) (NN programming) (NNS languages))))))) (PP (JJ due) (TO to) (NP (NP (DT the) (NN simplicity)) (PP (IN of) (NP (PRP$ its) (NN syntax))))) (, ,) (SBAR (IN while) (S (ADVP (RB still)) (VP (VBG achieving) (NP (DT a) (JJ good) (NN performance)) (S (VP (ADVP (RB even)) (VP (VBG being) (NP (DT an) (JJ interpreted) (NN language)))))))))) (. .))
(S (ADVP (RB Moreover)) (, ,) (NP (DT the) (NN community)) (VP (VBZ has) (VP (VBN helped) (S (VP (TO to) (VP (VB develop) (NP (NP (DT a) (JJ large) (NN number)) (PP (IN of) (NP (NNS libraries) (CC and) (NNS modules))))))) (, ,) (S (VP (VBG tuning) (NP (PRP them)) (S (VP (TO to) (VP (VB obtain) (NP (JJ great) (NN performance))))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (EX there)) (VP (VBZ is) (ADVP (RB still)) (NP (NP (NN room)) (PP (IN for) (NP (NN improvement)))) (SBAR (WHADVP (WRB when)) (S (VP (VBG preventing) (NP (NNS users)) (PP (IN from) (S (VP (VBG dealing) (ADVP (RB directly)) (PP (IN with) (NP (ADJP (VBN distributed) (CC and) (JJ parallel)) (VBG computing) (NNS issues)))))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ proposes) (CC and) (VBZ evaluates) (NP (NP (NNP AutoParallel)) (, ,) (NP (NP (DT a) (NNP Python) (NN module)) (SBAR (S (VP (TO to) (VP (ADVP (RB automatically)) (VB find) (NP (NP (NP (DT an) (JJ appropriate) (JJ task-based) (NN parallelization)) (PP (IN of) (NP (JJ affine) (NN loop) (NNS nests)))) (SBAR (S (VP (TO to) (VP (VB execute) (NP (PRP them)) (PP (IN in) (NP (NN parallel))) (PP (IN in) (NP (DT a) (JJ distributed) (NN computing) (NN infrastructure))))))))))))))) (. .))
(S (NP (DT This) (NN parallelization)) (VP (MD can) (ADVP (RB also)) (VP (VB include) (NP (NP (DT the) (NN building)) (PP (IN of) (NP (NN data) (NNS blocks))) (SBAR (S (VP (TO to) (VP (VB increase) (NP (NN task) (NN granularity)) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB achieve) (NP (DT a) (JJ good) (NN execution) (NN performance))))))))))))) (. .))
(S (ADVP (RB Moreover)) (, ,) (NP (NNP AutoParallel)) (VP (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (JJ sequential) (NN programming))))) (CC and) (VP (ADVP (RB only)) (VBZ contains) (NP (NP (DT a) (JJ small) (NN annotation)) (PP (IN in) (NP (NP (DT the) (NN form)) (PP (IN of) (NP (DT a) (NNP Python) (NN decorator)))))) (SBAR (IN so) (IN that) (S (NP (NP (NN anyone)) (PP (IN with) (NP (JJ little) (VBG programming) (NNS skills)))) (VP (MD can) (VP (VB scale) (PRT (RP up)) (NP (DT an) (NN application)) (PP (TO to) (NP (NP (NNS hundreds)) (PP (IN of) (NP (NNS cores))))))))))) (. .))
