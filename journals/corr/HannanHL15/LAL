(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VP (VBP demonstrate) (NP (NP (DT the) (NN effectiveness)) (PP (IN of) (NP (NP (NNP Cheney) (POS 's)) (NNP Copy) (NNP Algorithm))) (PP (IN for) (NP (DT a) (JJ Lisp-like) (NN system))))) (CC and) (VP (ADVP (RB experimentally)) (VB show) (NP (NP (DT the) (NN infeasability)) (PP (IN of) (S (VP (VBG developing) (NP (DT an) (JJ optimal) (NN garbage) (NN collector)) (PP (IN for) (NP (JJ general) (NN use))))))))) (. .))
(S (NP (PRP We)) (VP (VBP summarize) (CC and) (JJ compare) (NP (NP (JJ several) (NN garbage-collection) (NNS algorithms)) (PP (VBG including) (NP (NP (NP (NNP Cheney) (POS 's)) (NNP Algorithm)) (, ,) (NP (DT the) (JJ canonical) (NNP Mark) (CC and) (NNP Sweep) (NNP Algorithm)) (, ,) (CC and) (NP (NP (NNP Knuth) (POS 's)) (NNP Classical) (NNP Lisp) (CD 2) (NNP Algorithm)))))) (. .))
(S (NP (PRP We)) (VP (VBP implement) (CC and) (VBP analyze) (NP (DT these) (CD three) (NNS algorithms)) (PP (IN in) (NP (NP (DT the) (NN context)) (PP (IN of) (NP (DT a) (NN custom) (NNP MicroLisp) (NN environment)))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP conclude) (CC and) (VBP present) (NP (NP (DT the) (NN core) (NNS considerations)) (PP (IN behind) (NP (NP (DT the) (NN development)) (PP (IN of) (NP (DT a) (NN garbage) (NN collector))) (PRN (: —) (PP (ADVP (RB -specifically)) (IN for) (NP (NNP Lisp))) (: —)))))) (VBP -and) (VP (VBP make) (NP (DT an) (NN attempt) (S (VP (TO to) (VP (VB investigate) (NP (DT these) (NNS issues)) (PP (IN in) (NP (NN depth))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP discuss) (NP (NP (JJ experimental) (NNS results)) (SBAR (WHNP (WDT that)) (S (VP (VBP imply) (NP (NP (DT the) (NN effectiveness)) (PP (IN of) (NP (NP (NNP Cheney) (POS 's)) (NN algorithm))) (PP (IN over) (NP (NNP Mark-Sweep))) (PP (IN for) (NP (NNP Lisp-like) (NNS languages))))))))) (. .))
