(S (S (VP (VBZ Traces))) (CC and) (S (NP (NP (PRP$ their) (NN extension)) (VP (VBN called) (NP (VBN combined) (NNS traces))) (PRN (-LRB- -LRB-) (NP (NNS comtraces)) (-RRB- -RRB-))) (VP (VBP are) (NP (NP (CD two) (JJ formal) (NNS models)) (VP (VBN used) (PP (IN in) (NP (NP (DT the) (NN analysis) (CC and) (NN verification)) (PP (IN of) (NP (JJ concurrent) (NNS systems))))))))) (. .))
(S (S (NP (DT Both) (NNS models)) (VP (VBP are) (VP (VBN based) (PP (IN on) (NP (NP (NNS concepts)) (VP (VBG originating) (PP (IN in) (NP (NP (DT the) (NN theory)) (PP (IN of) (NP (JJ formal) (NNS languages))))))))))) (, ,) (CC and) (S (NP (PRP they)) (VP (VBP are) (ADJP (JJ able) (S (VP (TO to) (VP (VB capture) (NP (NP (DT the) (NNS notions)) (PP (IN of) (NP (NN causality) (CC and) (NN simultaneity))) (PP (IN of) (NP (NP (JJ atomic) (NNS actions)) (SBAR (WHNP (WDT which)) (S (VP (VBP take) (NP (NN place)) (PP (IN during) (NP (NP (DT the) (NN process)) (PP (IN of) (NP (NP (DT a) (NN system) (POS 's)) (NN operation))))))))))))))))) (. .))
(S (NP (NP (DT The) (NN aim)) (PP (IN of) (NP (DT this) (NN paper)))) (VP (VBZ is) (NP (NP (DT a) (NN transfer)) (PP (IN to) (NP (NP (NP (DT the) (NN domain)) (PP (IN of) (NP (NNS comtraces)))) (CC and) (NP (NP (VBG developing)) (PP (IN of) (NP (NP (DT some) (JJ fundamental) (NNS notions)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBD proved) (S (VP (TO to) (VP (VB be) (ADJP (JJ successful) (PP (IN in) (NP (NP (DT the) (NN theory)) (PP (IN of) (NP (NNS traces))))))))))))))))))) (. .))
(S (PP (IN In) (ADJP (JJ particular))) (, ,) (NP (PRP we)) (VP (VP (VBP introduce)) (CC and) (ADVP (RB then)) (VP (VB apply) (NP (NP (DT the) (NN notion)) (PP (IN of) (NP (NP (JJ indivisible) (NNS steps)) (, ,) (NP (NP (DT the) (JJ lexicographical) (JJ canonical) (NN form)) (PP (IN of) (NP (NNS comtraces)))) (, ,) (CONJP (RB as) (RB well) (IN as)) (NP (NP (DT the) (NN representation)) (PP (IN of) (NP (NP (DT a) (NN comtrace)) (VP (VBG utilising) (NP (PRP$ its) (JJ linear) (NNS projections)) (PP (IN to) (NP (JJ binary) (NN action) (NNS subalphabets)))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP provide) (NP (NP (CD two) (NNS algorithms)) (VP (VBN related) (PP (IN to) (NP (DT the) (JJ new) (NNS notions)))))) (. .))
(S (S (VP (VBG Using) (NP (PRP them)))) (, ,) (NP (PRP one)) (VP (MD can) (VP (VB solve) (, ,) (PP (IN in) (NP (DT an) (JJ efficient) (NN way))) (, ,) (NP (NP (DT the) (NN problem)) (PP (IN of) (NP (NN step) (NML (NN sequence) (NN equivalence)))) (PP (IN in) (NP (NP (DT the) (NN context)) (PP (IN of) (NP (NNS comtraces)))))))) (. .))
(S (NP (CD One)) (VP (MD may) (VP (VB view) (NP (PRP$ our) (NNS results)) (PP (IN as) (NP (NP (DT a) (JJ first) (NN step)) (PP (IN towards) (NP (NP (NP (DT the) (NN development)) (PP (IN of) (NP (JJ infinite) (VBN combined) (NNS traces)))) (, ,) (CONJP (RB as) (RB well) (IN as)) (NP (NP (JJ recognisable) (NNS languages)) (PP (IN of) (NP (VBN combined) (NNS traces)))))))))) (. .))
