(S (NP (PRP We)) (VP (VBP provide) (NP (NP (CD two) (JJ distributed) (NN confidence) (NN ball) (NN algorithms)) (PP (IN for) (S (VP (VBG solving) (NP (JJ linear) (NN bandit) (NNS problems)) (PP (IN in) (NP (NP (ADJP (NN peer) (TO to) (VB peer)) (NNS networks)) (PP (IN with) (NP (JJ limited) (NN communication) (NNS capabilities)))))))))) (. .))
(S (PP (IN For) (NP (DT the) (JJ first))) (, ,) (NP (PRP we)) (VP (VP (VBP assume) (SBAR (IN that) (S (NP (PDT all) (DT the) (NNS peers)) (VP (VBP are) (VP (VBG solving) (NP (DT the) (JJ same) (JJ linear) (NN bandit) (NN problem))))))) (, ,) (CC and) (VP (VB prove) (SBAR (DT that) (S (NP (PRP$ our) (NN algorithm)) (VP (VBZ achieves) (NP (NP (DT the) (JJ optimal) (JJ asymptotic) (NN regret) (NN rate)) (PP (IN of) (NP (NP (DT any) (JJ centralised) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (ADVP (RB instantly)) (VP (VB communicate) (NP (NN information)) (PP (IN between) (NP (DT the) (NNS peers))))))))))))))) (. .))
(S (PP (IN For) (NP (DT the) (JJ second))) (, ,) (S (NP (PRP we)) (VP (VBP assume) (SBAR (IN that) (S (NP (EX there)) (VP (VBP are) (NP (NP (NNS clusters)) (PP (IN of) (NP (NNS peers))) (VP (VBG solving) (NP (DT the) (JJ same) (NN bandit) (NN problem))) (PP (IN within) (NP (DT each) (NN cluster))))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP prove) (SBAR (IN that) (S (NP (PRP$ our) (NN algorithm)) (VP (VBZ discovers) (NP (DT these) (NNS clusters)) (, ,) (SBAR (IN while) (S (VP (VBG achieving) (NP (DT the) (JJ optimal) (JJ asymptotic) (NN regret) (NN rate)) (PP (IN within) (NP (DT each) (CD one))))))))))) (. .))
(S (PP (IN Through) (NP (NP (NNS experiments)) (PP (IN on) (NP (JJ several) (JJ real-world) (NNS datasets))))) (, ,) (NP (PRP we)) (VP (VBP demonstrate) (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (VBN proposed) (NNS algorithms))) (PP (VBN compared) (PP (TO to) (NP (DT the) (NN state-of-the-art)))))) (. .))
