(S (NP (VBN Bounded) (JJ linear) (NNS types)) (VP (VBP have) (VP (VBN proved) (S (VP (TO to) (VP (VB be) (ADJP (JJ useful) (PP (IN for) (NP (NP (JJ automated) (NN resource) (NN analysis) (CC and) (NN control)) (PP (IN in) (NP (JJ functional) (NN programming) (NNS languages))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP introduce) (NP (NP (DT an) (NN affine) (VBD bounded) (JJ linear) (VBG typing) (NN discipline)) (PP (IN on) (NP (NP (DT a) (JJ general) (NN notion)) (PP (IN of) (NP (NN resource))) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB be) (VP (VBN modeled) (PP (IN in) (NP (DT a) (NN semiring)))))))))))) (. .))
(S (PP (IN For) (NP (DT this) (NN type) (NN system))) (NP (PRP we)) (VP (VBP provide) (NP (DT both) (NP (NP (DT a) (JJ general) (NN type-inference) (NN procedure)) (, ,) (VP (VBN parameterized) (PP (IN by) (NP (NP (DT the) (NN decision) (NN procedure)) (PP (IN of) (NP (DT the) (VBG semiring) (JJ equational) (NN theory))))))) (, ,) (CC and) (NP (DT a) (PRN (-LRB- -LRB-) (NN coherent) (-RRB- -RRB-)) (JJ categorical) (NNS semantics)))) (. .))
(S (S (NP (DT This)) (VP (VBZ is) (NP (NP (DT a) (ADJP (RB very) (JJ useful)) (ADJP (JJ type-theoretic) (CC and) (JJ denotational)) (NN framework)) (PP (IN for) (NP (NP (JJ many) (NNS applications)) (PP (TO to) (NP (JJ resource-sensitive) (NN compilation)))))))) (, ,) (CC and) (S (NP (PRP it)) (VP (VBZ represents) (NP (NP (DT a) (NN generalization)) (PP (IN of) (NP (JJ several) (VBG existing) (JJ type) (NNS systems)))))) (. .))
(S (PP (IN As) (NP (DT a) (JJ non-trivial) (NN instance))) (, ,) (S (VP (VBN motivated) (PP (IN by) (NP (NP (PRP$ our) (JJ ongoing) (NN work)) (PP (IN on) (NP (NN hardware) (NN compilation))))))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT a) (JJ complex) (JJ new) (NN application)) (PP (TO to) (S (VP (VBG calculating) (CC and) (VBG controlling) (NP (NP (NN timing)) (PP (IN of) (NP (NN execution)))) (PP (IN in) (NP (NP (DT a) (PRN (-LRB- -LRB-) (JJ recursion-free) (-RRB- -RRB-)) (NN higher-order) (JJ functional) (NN programming) (NN language)) (PP (IN with) (NP (JJ local) (NN store)))))))))) (. .))
