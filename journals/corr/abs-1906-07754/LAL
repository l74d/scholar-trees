(S (NP (PRP We)) (VP (VBP introduce) (NP (NP (DT the) (NNP Constrained) (NNP Least-cost) (NNP Tour) (PRN (-LRB- -LRB-) (NNP CLT) (-RRB- -RRB-)) (NN problem)) (: :) (S (PP (VBN given) (NP (NP (DT an) (JJ undirected) (NN graph)) (PP (IN with) (NP (NP (NN weight) (CC and) (NN cost) (NNS functions)) (PP (IN on) (NP (DT the) (NNS edges))))))) (, ,) (VB minimise) (NP (NP (DT the) (JJ total) (NN cost)) (PP (IN of) (NP (NP (DT a) (NN tour)) (VP (VBN rooted) (PP (IN at) (NP (DT a) (NN start) (NN vertex))))))) (SBAR (JJ such) (IN that) (S (NP (DT the) (JJ total) (NN weight)) (VP (VBZ lies) (PP (IN within) (NP (DT a) (VBN given) (NN range))))))))) (. .))
(S (NP (NNP CLT)) (VP (VP (VBZ is) (ADJP (VBN related) (PP (TO to) (NP (NP (DT the) (NN family)) (PP (IN of) (NP (NP (VBG Travelling) (NNP Salesman) (NNPS Problems)) (PP (IN with) (NP (NNS Profits))))))))) (, ,) (CC but) (VP (NNS differs) (PP (PP (IN by) (S (VP (VBG defining) (NP (DT the) (NN weight) (NN function)) (PP (IN on) (NP (NP (NNS edges)) (CONJP (RB instead) (IN of)) (NP (NNS vertices))))))) (, ,) (CC and) (PP (IN by) (S (VP (VBG requiring) (S (NP (DT the) (JJ total) (NN weight)) (VP (TO to) (VP (VP (VB be) (PP (IN within) (NP (DT a) (NN range)))) (CONJP (RB instead) (IN of)) (VP (VBG being) (NP (ADVP (IN at) (JJS least)) (DT some) (NN quota)))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP derive) (NP (DT an) (JJ informative) (JJR lower) (NN bound)) (PP (IN by) (S (VP (VBG relaxing) (NP (NP (DT the) (NN integrality)) (PP (IN of) (NP (NNS edges)))))))) (CC and) (VP (VB propose) (NP (NP (DT a) (JJ heuristic)) (VP (VBN motivated) (PP (IN by) (NP (DT this) (NN relaxation))))))) (. .))
(S (PP (IN For) (NP (NP (DT the) (NN case)) (SBAR (WHNP (WDT that)) (S (VP (VBZ requires) (S (NP (DT the) (NN tour)) (VP (TO to) (VP (VB be) (NP (DT a) (JJ simple) (NN cycle)))))))))) (, ,) (NP (PRP we)) (VP (VBP develop) (NP (NP (CD two) (NNS heuristics)) (SBAR (WHNP (WDT which)) (S (VP (VBP exploit) (NP (NP (NNP Suurballe) (POS 's)) (NN algorithm)) (S (VP (TO to) (VP (VB find) (NP (JJ low-cost) (, ,) (JJ weight-feasible) (NNS cycles)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (NP (PRP$ our) (NN algorithms)) (PP (IN by) (S (VP (VBG addressing) (NP (NP (NP (DT a) (NN real-world) (NN problem)) (SBAR (WHNP (WDT that)) (S (VP (VBZ affects) (NP (JJ urban) (NNS populations)))))) (: :) (S (VP (NN finding) (NP (NP (NNS routes)) (SBAR (WHNP (IN that)) (S (VP (NN minimise) (NP (NN air) (NN pollution) (NN exposure)) (PP (IN for) (NP (NP (NN walking) (, ,) (VBG running) (CC and) (NN cycling)) (PP (IN in) (NP (NP (DT the) (NN city)) (PP (IN of) (NP (NNP London)))))))))))))))))) (. .))
