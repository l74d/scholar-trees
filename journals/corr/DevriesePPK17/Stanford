(S (NP (DT A) (NN compiler)) (VP (VBZ is) (ADJP (RB fully) (HYPH -) (JJ abstract)) (SBAR (IN if) (S (NP (NP (DT the) (NN compilation)) (PP (IN from) (NP (NN source) (NN language) (NNS programs))) (S (VP (TO to) (VP (VB target) (NP (NN language) (NNS programs)))))) (VP (VBZ reflects) (CC and) (VBZ preserves) (NP (JJ behavioural) (NN equivalence)))))) (. .))
(S (NP (JJ Such) (NNS compilers)) (VP (VBP have) (NP (JJ important) (NN security) (NNS benefits)) (, ,) (SBAR (IN as) (S (NP (PRP they)) (VP (VBP limit) (NP (NP (DT the) (NN power)) (PP (IN of) (NP (NP (DT an) (NN attacker)) (VP (VBG interacting) (PP (IN with) (NP (NP (DT the) (NN program)) (PP (IN in) (NP (DT the) (NN target) (NN language))))) (PP (IN to) (NP (NP (DT that)) (PP (IN of) (NP (NP (DT an) (NN attacker)) (VP (VBG interacting) (PP (IN with) (NP (NP (DT the) (NN program)) (PP (IN in) (NP (DT the) (NN source) (NN language)))))))))))))))))) (. .))
(S (S (VP (VBG Proving) (NP (NN compiler)))) (NP (JJ full) (HYPH -) (NN abstraction)) (VP (VBZ is) (, ,) (ADVP (RB however)) (, ,) (ADJP (RB rather) (JJ complicated))) (. .))
(S (NP (DT A) (JJ common) (NN proof) (NN technique)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (DT the) (NN back) (HYPH -) (NN translation)) (PP (IN of) (NP (NML (NN target) (HYPH -) (NN level)) (NN program) (NNS contexts))))) (PP (IN to) (NP (ADJP (RB behaviourally) (HYPH -) (JJ equivalent)) (NML (NN source) (HYPH -) (NN level)) (NNS contexts))))) (. .))
(S (ADVP (RB However)) (, ,) (S (VP (VBG constructing) (NP (PDT such) (DT a) (NML (RB back) (HYPH -) (NN translation))))) (VP (VBZ is) (ADJP (JJ problematic)) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN source) (NN language)) (VP (VBZ is) (RB not) (ADJP (JJ strong) (RB enough) (S (VP (TO to) (VP (VB embed) (NP (NP (DT an) (NN encoding)) (PP (IN of) (NP (DT the) (NN target) (NN language)))))))))))) (. .))
(S (PP (IN For) (NP (NN instance))) (, ,) (SBAR (WHADVP (WRB when)) (S (VP (VBG compiling) (PP (IN from) (NP (NNP STLC))) (PP (IN to) (NP (NNP ULC)))))) (, ,) (NP (NP (DT the) (NN lack)) (PP (IN of) (NP (NP (JJ recursive) (NNS types)) (PP (IN in) (NP (DT the) (JJ former)))))) (VP (VBZ prevents) (NP (PDT such) (DT a) (NML (RB back) (HYPH -) (NN translation)))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT a) (ADJP (JJ general) (CC and) (JJ elegant)) (NN solution)) (PP (IN for) (NP (DT this) (NN problem))))) (. .))
(S (NP (DT The) (JJ key) (NN insight)) (VP (VBZ is) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ suffices) (S (VP (TO to) (VP (VB construct) (NP (DT an) (JJ approximate) (NN back) (HYPH -) (NN translation))))))))) (. .))
(S (S (NP (DT The) (NN approximation)) (VP (VBZ is) (ADJP (RB only) (JJ accurate)) (ADVP (ADVP (IN up) (PP (IN to) (NP (NP (NP (DT a) (JJ certain) (NN number)) (PP (IN of) (NP (NNS steps)))) (CC and) (NP (NP (JJ conservative)) (PP (IN beyond) (NP (DT that)))))) (, ,) (PP (IN in) (NP (DT the) (NN sense)))) (SBAR (IN that) (S (NP (NP (DT the) (NN context)) (VP (VBN generated) (PP (IN by) (NP (DT the) (NML (NN back) (HYPH -) (NN translation)))))) (VP (MD may) (VP (VB diverge) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN original)) (VP (MD would) (RB not))))))))))) (, ,) (CC but) (FRAG (RB not) (ADVP (RB vice) (RB versa))) (. .))
(S (PP (VBN Based) (PP (IN on) (NP (DT this) (NN insight)))) (, ,) (NP (PRP we)) (VP (VP (VBP describe) (NP (DT a) (JJ general) (NN technique)) (PP (IN for) (S (VP (VBG proving) (NP (NN compiler) (NML (JJ full) (HYPH -) (NN abstraction))))))) (CC and) (VP (VBP demonstrate) (NP (PRP it)) (PP (IN on) (NP (NP (DT a) (NN compiler)) (PP (IN from) (NP (NNP STLC))))) (PP (IN to) (NP (NNP ULC))))) (. .))
(S (NP (DT The) (NN proof)) (VP (VP (VBZ uses) (NP (ADJP (NP (JJ asymmetric) (NN cross-language)) (JJ logical)) (NNS relations))) (CC and) (VP (VBZ makes) (NP (NP (JJ innovative) (NN use)) (PP (IN of) (NP (NN step) (HYPH -) (NN indexing)))) (S (VP (TO to) (VP (VB express) (NP (NP (DT the) (NN relation)) (PP (IN between) (NP (NP (DT a) (NN context)) (CC and) (NP (PRP$ its) (JJ approximate) (NML (NN back) (HYPH -) (NN translation))))))))))) (. .))
(S (S (NP (DT The) (NN proof)) (VP (VBZ extends) (ADVP (RB easily)) (PP (IN to) (NP (NP (JJ common) (NN compiler) (NNS patterns)) (PP (JJ such) (IN as) (NP (JJ modular) (NN compilation))))))) (CC and) (S (NP (PRP it)) (, ,) (PP (IN to) (NP (NP (DT the) (JJS best)) (PP (IN of) (NP (PRP$ our) (NN knowledge))))) (, ,) (NP (PRP it)) (VP (VBZ is) (NP (DT the) (ADJP (NP (JJ first) (NN compiler)) (JJ full)) (NN abstraction) (NN proof) (S (VP (TO to) (VP (VB have) (VP (VBN been) (ADVP (RB fully)) (VP (VBN mechanised) (PP (IN in) (NP (NNP Coq))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP believe) (SBAR (S (NP (DT this) (NN proof) (NN technique)) (VP (MD can) (VP (VP (VB scale) (PP (IN to) (NP (JJ challenging) (NNS settings)))) (CC and) (VP (VB enable) (NP (NP (JJR simpler) (, ,) (ADJP (RBR more) (JJ scalable)) (NNS proofs)) (PP (IN of) (NP (NN compiler) (NML (JJ full) (HYPH -) (NN abstraction))))))))))) (. .))
