(S (NP (DT A) (NN compiler)) (VP (VBZ is) (ADJP (JJ fully-abstract)) (SBAR (IN if) (S (NP (NP (DT the) (NN compilation)) (PP (IN from) (NP (NN source) (NN language) (NNS programs))) (PP (TO to) (NP (VB target) (NN language) (NNS programs)))) (VP (VBZ reflects) (CC and) (VBZ preserves) (NP (JJ behavioural) (NN equivalence)))))) (. .))
(S (NP (JJ Such) (NNS compilers)) (VP (VBP have) (NP (JJ important) (NN security) (NNS benefits)) (, ,) (SBAR (IN as) (S (NP (PRP they)) (VP (VBP limit) (NP (NP (DT the) (NN power)) (PP (IN of) (NP (NP (DT an) (NN attacker)) (VP (VBG interacting) (PP (IN with) (NP (NP (DT the) (NN program)) (PP (IN in) (NP (DT the) (NN target) (NN language))))))))) (PP (TO to) (NP (NP (DT that)) (PP (IN of) (NP (NP (DT an) (NN attacker)) (VP (VBG interacting) (PP (IN with) (NP (NP (DT the) (NN program)) (PP (IN in) (NP (DT the) (NN source) (NN language)))))))))))))) (. .))
(S (S (VP (VBG Proving) (NP (NN compiler) (NN full-abstraction)))) (VP (VBZ is) (, ,) (ADVP (RB however)) (, ,) (ADJP (RB rather) (VBN complicated))) (. .))
(S (NP (DT A) (JJ common) (NN proof) (NN technique)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (DT the) (NN back-translation)) (PP (IN of) (NP (JJ target-level) (NN program) (NN contexts))) (PP (TO to) (NP (JJ behaviourally-equivalent) (JJ source-level) (NN contexts))))))) (. .))
(S (ADVP (RB However)) (, ,) (S (VP (VBG constructing) (NP (JJ such) (DT a) (JJ back-) (NN translation)))) (VP (VBZ is) (ADJP (JJ problematic)) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN source) (NN language)) (VP (VBZ is) (RB not) (ADJP (JJ strong) (RB enough) (S (VP (TO to) (VP (VB embed) (NP (NP (DT an) (NN encoding)) (PP (IN of) (NP (DT the) (NN target) (NN language)))))))))))) (. .))
(S (PP (IN For) (NP (NN instance))) (, ,) (SBAR (WHADVP (WRB when)) (S (VP (VBG compiling) (PP (IN from) (NP (NNP STLC))) (PP (TO to) (NP (NNP ULC)))))) (, ,) (NP (NP (DT the) (NN lack)) (PP (IN of) (NP (JJ recursive) (NNS types))) (PP (IN in) (NP (DT the) (JJ former)))) (VP (NNS prevents) (NP (JJ such) (DT a) (NN back-translation))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT a) (ADJP (JJ general) (CC and) (JJ elegant)) (NN solution)) (PP (IN for) (NP (DT this) (NN problem))))) (. .))
(S (NP (DT The) (JJ key) (NN insight)) (VP (VBZ is) (SBAR (IN that) (S (NP (NP (PRP it))) (VP (VBZ suffices) (S (VP (TO to) (VP (VB construct) (NP (DT an) (JJ approximate) (NN back-translation))))))))) (. .))
(S (NP (DT The) (NN approximation)) (VP (VBZ is) (ADJP (ADVP (RB only)) (JJ accurate) (PP (RP up) (PP (TO to) (NP (NP (DT a) (JJ certain) (NN number)) (PP (IN of) (NP (NNS steps))))))) (CC and) (ADJP (ADJP (JJ conservative)) (PP (IN beyond) (NP (DT that)))) (, ,) (PP (IN in) (NP (DT the) (NN sense) (SBAR (IN that) (S (S (NP (NP (DT the) (NN context)) (VP (VBN generated) (PP (IN by) (NP (DT the) (NN back-translation))))) (VP (MD may) (VP (VB diverge) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (JJ original)) (VP (MD would) (RB not))))))) (, ,) (CC but) (FRAG (RB not) (ADVP (NN vice) (NN versa)))))))) (. .))
(S (PP (VBN Based) (PP (IN on) (NP (DT this) (NN insight)))) (, ,) (NP (PRP we)) (VP (VP (VBP describe) (NP (NP (DT a) (JJ general) (NN technique)) (PP (IN for) (S (VP (VBG proving) (NP (NN compiler) (NN full-abstraction))))))) (CC and) (VP (VB demonstrate) (NP (PRP it)) (PP (IN on) (NP (NP (DT a) (NN compiler)) (PP (PP (IN from) (NP (NNP STLC))) (PP (TO to) (NP (NNP ULC)))))))) (. .))
(S (NP (DT The) (NN proof)) (VP (VP (VBZ uses) (NP (JJ asymmetric) (JJ cross-language) (JJ logical) (NNS relations))) (CC and) (VP (VBZ makes) (NP (NP (JJ innovative) (NN use)) (PP (IN of) (NP (NN step-indexing)))) (S (VP (TO to) (VP (VB express) (NP (NP (DT the) (NN relation)) (PP (IN between) (NP (NP (DT a) (NN context)) (CC and) (NP (PRP$ its) (JJ approximate) (NN back-translation)))))))))) (. .))
(S (S (NP (DT The) (NN proof)) (VP (VBZ extends) (ADVP (RB easily)) (PP (TO to) (NP (NP (JJ common) (NN compiler) (NNS patterns)) (PP (JJ such) (IN as) (NP (JJ modular) (NN compilation))))))) (CC and) (S (NP (PRP it)) (, ,) (PP (TO to) (NP (NP (DT the) (JJS best)) (PP (IN of) (NP (PRP$ our) (NN knowledge))))) (, ,) (NP (PRP it)) (VP (VBZ is) (NP (NP (DT the) (JJ first) (NN compiler) (JJ full) (NN abstraction) (NN proof)) (SBAR (S (VP (TO to) (VP (VB have) (VP (VBN been) (VP (ADVP (RB fully)) (VBN mechanised) (PP (IN in) (NP (NNP Coq)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP believe) (SBAR (S (NP (DT this) (NN proof) (NN technique)) (VP (MD can) (VP (VP (VB scale) (PP (TO to) (NP (VBG challenging) (NNS settings)))) (CC and) (VP (JJ enable) (NP (NP (NN simpler) (, ,) (ADJP (RBR more) (JJ scalable)) (NN proofs)) (PP (IN of) (NP (NN compiler) (NN full-abstraction)))))))))) (. .))
