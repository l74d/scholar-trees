(S (PP (IN In) (NP (JJ functional) (NN programming) (VBZ languages))) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (JJ infinite) (NNS structures)))) (VP (VBZ is) (NP (JJ common) (NN practice))) (. .))
(S (PP (IN For) (NP (NP (JJ total) (NN correctness)) (PP (IN of) (NP (NP (NNS programs)) (VP (VBG dealing) (PP (IN with) (NP (JJ infinite) (NNS structures)))))))) (NP (CD one)) (VP (MD must) (VP (VB guarantee) (SBAR (IN that) (S (NP (NP (DT every) (JJ finite) (NN part)) (PP (IN of) (NP (DT the) (NN result)))) (VP (MD can) (VP (VB be) (VP (VBN evaluated) (PP (IN in) (NP (ADJP (RB finitely) (JJ many)) (NNS steps)))))))))) (. .))
(S (NP (DT This)) (VP (VBZ is) (VP (VBN known) (PP (IN as) (NP (NN productivity))))) (. .))
(S (PP (IN For) (NP (NP (VBG programming)) (PP (IN with) (NP (JJ infinite) (NNS structures))))) (, ,) (NP (NN productivity)) (VP (VBZ is) (SBAR (WHNP (WP what)) (S (NP (NP (NN termination)) (PP (IN in) (NP (JJ well-defined) (NNS results)))) (VP (VBZ is) (PP (IN for) (NP (NP (VBG programming)) (PP (IN with) (NP (JJ finite) (NNS structures))))))))) (. .))
(S (NP (NNP Fractran)) (VP (VBZ is) (NP (NP (DT a) (JJ simple) (JJ Turing-complete) (NN programming) (NN language)) (VP (VBN invented) (PP (IN by) (NP (NNP Conway)))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT the) (NN question) (SBAR (IN whether) (S (NP (DT a) (NNP Fractran) (NN program)) (VP (NNS halts) (PP (IN on) (NP (DT all) (JJ positive) (NNS integers))))))) (VP (VBZ is) (ADJP (NNP Pi^0_2-complete)))))) (. .))
(S (PP (IN In) (NP (JJ functional) (NN programming))) (, ,) (NP (NN productivity)) (ADVP (RB typically)) (VP (VBZ is) (NP (NP (DT a) (NN property)) (PP (IN of) (NP (JJ individual) (NNS terms)))) (PP (IN with) (NP (NP (NN respect)) (PP (TO to) (NP (DT the) (JJ inbuilt) (NN evaluation) (NN strategy)))))) (. .))
(S (PP (IN By) (S (VP (VBG encoding) (NP (NNP Fractran) (NNS programs)) (PP (IN as) (NP (NP (NNS specifications)) (PP (IN of) (NP (JJ infinite) (NNS lists)))))))) (, ,) (NP (PRP we)) (VP (VB establish) (SBAR (IN that) (S (NP (NP (DT this) (NN notion)) (PP (IN of) (NP (NN productivity)))) (VP (VBZ is) (ADJP (NNP Pi^0_2-complete)) (PP (ADVP (RB even)) (IN for) (NP (DT the) (ADJP (RBS most) (JJ simple)) (NNS specifications))))))) (. .))
(S (ADVP (IN Therefore)) (NP (PRP it)) (VP (VBZ is) (ADJP (ADJP (JJR harder)) (PP (IN than) (NP (NP (NN termination)) (PP (IN of) (NP (JJ individual) (NNS terms))))))) (. .))
(S (PP (IN In) (NP (NN addition))) (, ,) (NP (PRP we)) (VP (VP (VBP explore) (NP (NP (JJ possible) (NNS generalisations)) (PP (IN of) (NP (NP (DT the) (NN notion)) (PP (IN of) (NP (NN productivity)))))) (PP (IN in) (NP (NP (DT the) (NN framework)) (PP (IN of) (NP (NN term) (NN rewriting)))))) (, ,) (CC and) (VP (VB prove) (SBAR (DT that) (S (NP (PRP$ their) (JJ computational) (NN complexity)) (VP (VBZ is) (ADJP (NNP Pi^1_1-complete)) (, ,) (S (ADVP (RB thus)) (VP (VBG exceeding) (NP (NP (DT the) (JJ expressive) (NN power)) (PP (IN of) (NP (JJ first-order) (NN logic))))))))))) (. .))
