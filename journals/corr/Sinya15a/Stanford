(S (NP (DT A) (NML (CD zero) (HYPH -) (CD one)) (NN language) (NN L)) (VP (VBZ is) (NP (NP (DT a) (JJ regular) (NN language)) (SBAR (WHNP (WP$ whose)) (S (NP (JJ asymptotic) (NN probability)) (VP (VBZ converges) (PP (IN to) (NP (CC either) (CD zero) (CC or) (CD one)))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN case))) (, ,) (NP (PRP we)) (VP (VBP say) (SBAR (IN that) (S (NP (NN L)) (VP (VBZ obeys) (NP (DT the) (NML (CD zero) (HYPH -) (CD one)) (NN law)))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (SBAR (IN that) (S (NP (DT a) (JJ regular) (NN language)) (VP (VBZ obeys) (NP (DT the) (NML (CD zero) (HYPH -) (CD one)) (NN law)) (ADVP (IN if))))) (CC and) (SBAR (RB only) (IN if) (S (NP (PRP$ its) (JJ syntactic) (NN monoid)) (VP (VBZ has) (NP (DT a) (CD zero) (NN element)) (, ,) (PP (IN by) (NP (NP (NNS means)) (PP (IN of) (NP (NP (NNP Eilenberg) (POS 's)) (NN variety) (JJ theoretic) (NN approach)))))))))) (. .))
(S (S (NP (PRP$ Our) (NN proof)) (VP (VBZ gives) (NP (DT an) (JJ effective) (NN automata)) (NP (NP (NN characterisation)) (PP (IN of) (NP (NP (DT the) (NML (CD zero) (HYPH -) (CD one)) (NN law)) (PP (IN for) (NP (JJ regular) (NNS languages)))))))) (, ,) (CC and) (S (NP (PRP it)) (VP (VBZ leads) (PP (IN to) (NP (NP (DT a) (JJ linear) (NN time) (NN algorithm)) (PP (IN for) (S (VP (VBG testing) (SBAR (IN whether) (S (NP (DT a) (VBN given) (JJ regular) (NN language)) (VP (VBZ is) (NP (CD zero) (HYPH -) (CD one)))))))))))) (. .))
(S (PP (IN In) (NP (NN addition))) (, ,) (NP (PRP we)) (VP (VBP discuss) (NP (NP (DT the) (JJ logical) (NNS aspects)) (PP (IN of) (NP (NP (DT the) (NML (CD zero) (HYPH -) (CD one)) (NN law)) (PP (IN for) (NP (JJ regular) (NNS languages))))))) (. .))
