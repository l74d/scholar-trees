(S (SBAR (IN While) (S (NP (DT a) (JJ normal) (NNP DFS) (NN algorithm)) (VP (NNS results) (PP (IN in) (NP (DT a) (NNP DFS-tree))) (PRN (-LRB- -LRB-) (SBAR (IN in) (NN case) (S (NP (DT the) (NN graph)) (VP (VBZ is) (VP (VBN connected))))) (-RRB- -RRB-))))) (, ,) (NP (PRP$ our) (NN space) (NNS bounds)) (VP (VBP do) (RB not) (VP (VB permit) (S (NP (PRP us)) (ADVP (RB even)) (VP (TO to) (VP (VB store) (NP (JJ such) (DT a) (NN tree))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (PRP$ our) (NN algorithm)) (VP (ADVP (RB correctly)) (VBZ outputs) (NP (NP (DT all) (NNS edges)) (PP (IN of) (NP (DT the) (NNP DFS-tree))))) (. .))
(S (NP (NP (DT The) (JJ main) (JJ open) (NN question)) (VP (VBD left) (ADVP (RP behind)) (PP (IN in) (NP (DT this) (NN area))))) (VP (VBD was) (S (VP (TO to) (VP (VB design) (NP (NP (RBR faster) (NN algorithm)) (PP (IN for) (NP (NNP DFS))) (VP (VBG using) (NP (NP ($ $) (NNP O) (PRN (-LRB- -LRB-) (FW n) (-RRB- -RRB-)) ($ $) (NNS bits)) (PP (IN of) (NP (NN space)))))))))) (. .))
(S (NP (PRP$ Our) (NN algorithm)) (VP (NNS answers) (NP (DT this) (JJ open) (NN question)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ has) (NP (DT a) (ADJP (RB nearly) (JJ optimal)) (JJ running) (NN time)) (PRN (-LRB- -LRB-) (SBAR (IN as) (S (NP (DT the) (NNP DFS)) (VP (VBZ takes) (NP ($ $) (NNP O) (PRN (-LRB- -LRB-) (NN m+n) (-RRB- -RRB-)) ($ $) (NN time)) (SBAR (RB even) (IN if) (S (NP (EX there)) (VP (VBZ is) (NP (DT no) (NN space) (NN restriction)))))))) (-RRB- -RRB-)))))) (. .))
