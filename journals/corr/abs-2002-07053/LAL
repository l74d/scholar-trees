(S (NP (DT A) (JJ common) (NN problem)) (SBAR (WHADVP (WRB when)) (S (VP (VBG implementing) (NP (NN concurrent) (NNS programs))))) (VP (VBZ is) (VP (ADVP (RB efficiently)) (VBG protecting) (PP (IN against) (NP (NP (JJ unsafe) (NNS races)) (PP (IN between) (NP (NP (NP (NNS processes)) (VP (VP (VBG reading)) (CC and) (VP (ADVP (RB then)) (VBG using)) (NP (NP (DT a) (NN resource)) (PRN (-LRB- -LRB-) (JJ e.g.) (, ,) (NP (NP (NN memory) (NNS blocks)) (, ,) (NP (NN file) (NNS descriptors)) (, ,) (CC or) (NP (NN network) (NNS connections))) (-RRB- -RRB-))))) (CC and) (NP (NP (JJ other) (NNS processes)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (VP (VP (ADVP (RB concurrently)) (VBG overwriting)) (CC and) (VP (ADVP (RB then)) (VBG destructing)) (NP (DT the) (JJ same) (NN resource))))))))))))) (. .))
(S (NP (JJ Such) (NN read-destruct) (NNS races)) (VP (MD can) (VP (VB be) (VP (VBN protected) (PP (PP (IN with) (NP (NNS locks))) (, ,) (CC or) (PP (IN with) (NP (NP (JJ lock-free) (NNS solutions)) (PP (JJ such) (IN as) (NP (NP (NNS hazard-pointers)) (CC or) (NP (NP (NN read-copy-update)) (PRN (-LRB- -LRB-) (NP (NNP RCU)) (-RRB- -RRB-))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP describe) (NP (NP (DT a) (NN method)) (PP (IN for) (S (VP (VBG protecting) (NP (NN read-destruct) (NNS races)) (PP (PP (IN with) (NP (NP (VBN expected) (JJ constant) (NN time) (NN overhead)) (, ,) (NP (ADJP ($ $) (NNP O)) (PRN (-LRB- -LRB-) (NNP P^2) (-RRB- -RRB-)) ($ $) (NN space)) (CC and) (NP (ADJP ($ $) (NNP O)) (PRN (-LRB- -LRB-) (NNP P^2) (-RRB- -RRB-)) ($ $) (VBN delayed) (NNS destructs)))) (, ,) (CC and) (PP (IN with) (NP (NP (RB just) (JJ single) (NN word) (JJ atomic) (NN memory) (NNS operations)) (PRN (-LRB- -LRB-) (NP (NNS reads) (, ,) (NNS writes) (, ,) (CC and) (NNP CAS)) (-RRB- -RRB-)))))))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (DT an) (NN interface)) (PP (IN with) (NP (NP (CD four) (NNS primitives)) (, ,) (NP (NP (NP (DT an) (JJ acquire-release) (NN pair)) (SBAR (S (VP (TO to) (VP (VB protect) (NP (NNS accesses))))))) (, ,) (CC and) (NP (NP (DT a) (JJ retire-eject) (NN pair)) (SBAR (S (VP (TO to) (VP (VB delay) (NP (DT the) (NN destruct)) (SBAR (IN until) (S (NP (PRP it)) (VP (VBZ is) (ADJP (JJ safe))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP refer) (PP (TO to) (NP (DT this))) (PP (IN as) (NP (DT the) (JJ acquire-retire) (NN interface)))) (. .))
(S (S (VP (VBG Using) (NP (DT the) (JJ acquire-retire) (NN interface)))) (, ,) (NP (PRP we)) (VP (VBP develop) (NP (NP (JJ simple) (NNS implementations)) (PP (IN for) (NP (NP (CD three) (JJ common) (NN use) (NNS cases)) (: :) (NP (NP (NP (ADJP (-LRB- -LRB-) (CD 1) (-RRB- -RRB-)) (NP (NN memory) (NN reclamation))) (PP (IN with) (NP (NP (NNS applications)) (PP (TO to) (NP (NNS stacks) (CC and) (NNS queues)))))) (, ,) (NP (PRN (-LRB- -LRB-) (CD 2) (-RRB- -RRB-)) (NN reference) (VBN counted) (NNS objects)) (, ,) (CC and) (NP (LST (-LRB- -LRB-) (CD 3) (-RRB- -RRB-)) (NP (NP (NNS objects)) (VP (NN manage) (PP (IN by) (NP (NN ownership))) (PP (IN with) (NP (NNS moves) (, ,) (NNS copies) (, ,) (CC and) (NNS destructs))))))))))) (. .))
(S (S (NP (DT The) (JJ first) (CD two) (NNS results)) (VP (ADVP (RB significantly)) (VB improve) (PP (IN on) (NP (JJ previous) (NNS results))))) (, ,) (CC and) (S (NP (DT the) (JJ third) (NN application)) (VP (VBZ is) (ADJP (JJ original)))) (. .))
(S (ADVP (RB Importantly)) (, ,) (NP (DT all) (NNS operations)) (VP (VBP have) (VP (VBN expected) (NP (JJ constant) (NN time) (NN overhead)))) (. .))
