(S (NP (DT This) (NN paper)) (VP (VBZ introduces) (NP (NP (DT a) (JJ new) (NN machine) (NN architecture)) (PP (IN for) (S (VP (VBG evaluating) (NP (JJ lambda) (NNS expressions)) (S (VP (VBG using) (NP (NP (DT the) (JJ normal-order) (NN reduction)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ guarantees) (SBAR (IN that) (S (NP (DT every) (NN lambda) (NN expression)) (VP (MD will) (VP (VB be) (VP (VBN evaluated) (SBAR (IN if) (S (S (NP (DT the) (NN expression)) (VP (VBZ has) (NP (PRP$ its) (JJ normal) (NN form)))) (CC and) (S (NP (DT the) (NN system)) (VP (VBZ has) (NP (JJ enough) (NN memory)))))))))))))))))))))) (. .))
(S (NP (NP (DT The) (NN architecture)) (VP (VBN considered) (ADVP (RB here)))) (VP (VBZ operates) (S (VP (VBG using) (NP (JJ heap) (NN memory)) (ADVP (RB only))))) (. .))
(S (S (NP (JJ Lambda) (NNS expressions)) (VP (VBP are) (VP (VBN represented) (PP (IN as) (NP (NN graphs)))))) (, ,) (CC and) (S (NP (NP (DT all) (NNS algorithms)) (VP (VBN used) (PP (IN in) (NP (NP (DT the) (NN processing) (NN unit)) (PP (IN of) (NP (DT this) (NN machine))))))) (VP (VBP are) (ADJP (JJ non-recursive)))) (. .))
