(S (NP (NP (DT The) (ADJP (RBS most) (JJ efficient)) (NNS algorithms)) (PP (IN for) (S (VP (VBG finding) (NP (JJ maximum) (JJ independent) (NNS sets)) (PP (IN in) (NP (NP (DT both) (NN theory)) (CC and) (NP (NN practice) (NN use) (NN reduction) (NNS rules)))) (S (VP (TO to) (VP (VB obtain) (NP (DT a) (ADJP (RB much) (JJR smaller)) (NN problem) (NN instance))))))))) (VP (VBD called) (NP (DT a) (NN kernel))) (. .))
(S (NP (DT The) (NN kernel)) (MD can) (RB then) (VP (VP (VB be) (VP (VBN solved) (S (S (ADVP (RB quickly)) (VP (VP (VBG using) (ADVP (RB exact))) (CC or) (NP (NN heuristic) (NNS algorithms)))) (, ---) (CC or) (S (ADVP (IN by) (RB repeatedly)) (VP (VBG kernelizing) (ADVP (RB recursively)) (PP (IN in) (NP (DT the) (NN branch)))))))) (HYPH -) (CC and) (HYPH -) (VP (VB reduce) (NP (NN paradigm)))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (PP (IN of) (NP (NP (JJ critical) (NN importance)) (PP (IN for) (NP (NP (DT these) (NNS algorithms)) (SBAR (WHNP (WDT that)) (S (NP (NN kernelization)) (VP (VP (VBZ is) (ADJP (JJ fast))) (CC and) (VP (VBZ returns) (NP (DT a) (JJ small) (NN kernel))))))))))) (. .))
(S (NP (JJ Current) (NNS algorithms)) (VP (VP (VBP are) (ADVP (RB either)) (ADJP (JJ slow))) (CC but) (VP (VP (VBP produce) (NP (NP (DT a) (JJ small) (NN kernel)) (, ,) (CC or) (ADVP (RB fast)))) (CC and) (VP (VB give) (NP (DT a) (JJ large) (NN kernel))))) (. .))
(S (NP (PRP We)) (VP (VBP attempt) (S (VP (TO to) (VP (VB accomplish) (NP (NP (DT both)) (PP (IN of) (NP (DT these) (NNS goals)))) (ADVP (RB simultaneously))))) (, ,) (PP (IN by) (S (VP (VBG giving) (NP (DT an) (JJ efficient) (JJ parallel) (NN kernelization)) (NP (NP (NN algorithm)) (PP (VBN based) (PP (IN on) (NP (NP (NN graph) (NN partitioning)) (CC and) (NP (JJ parallel) (JJ bipartite) (NN maximum) (NN matching)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP combine) (NP (PRP$ our) (NN parallelization) (NNS techniques)) (PP (IN with) (NP (NP (NP (CD two) (NNS techniques)) (SBAR (S (VP (TO to) (VP (VB accelerate) (NP (NN kernelization)) (ADVP (RB further))))))) (: :) (NP (NP (NN dependency) (NN checking)) (SBAR (WHNP (WDT that)) (S (VP (VBZ prunes) (NP (NP (NNS reductions)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (RB not) (VP (VB be) (VP (VBN applied))))))))))) (, ,) (CC and) (NP (NP (NN reduction) (NN tracking)) (SBAR (WHNP (WDT that)) (S (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (VP (VB stop) (NP (NN kernelization)) (SBAR (WHADVP (WRB when)) (S (NP (NNS reductions)) (VP (VBP become) (ADJP (RBR less) (JJ fruitful))))))))))))))) (. .))
(S (NP (PRP$ Our) (NN algorithm)) (VP (VBZ produces) (NP (NP (NNS kernels)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (ADJP (NP (NP (NNS orders)) (PP (IN of) (NP (NN magnitude)))) (JJR smaller)) (PP (IN than) (NP (DT the) (JJS fastest) (NN kernelization) (NNS methods)))) (, ,) (SBAR (IN while) (S (VP (VBG having) (NP (DT a) (JJ similar) (NN execution) (NN time)))))))))) (. .))
(S (ADVP (RB Furthermore)) (, ,) (NP (PRP$ our) (NN algorithm)) (VP (VBZ is) (ADJP (JJ able) (S (VP (TO to) (VP (VP (VB compute) (NP (NNS kernels)) (PP (IN with) (NP (NN size))) (S (ADJP (JJ comparable) (PP (IN to) (NP (DT the) (ADJP (JJS smallest) (VBN known)) (NNS kernels)))))) (, ,) (CC but) (ADVP (IN up) (PP (IN to) (NP (NP (CD two) (NNS orders)) (PP (IN of) (NP (NN magnitude)))))) (VP (ADVP (ADVP (RBR faster)) (SBAR (IN than) (FRAG (ADJP (RB previously) (JJ possible))))))))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NN kernelization) (NN algorithm)) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB accelerate) (S (VP (VBG existing) (NP (ADJP (NN state) (HYPH -) (IN of) (HYPH -) (DT the) (HYPH -) (NN art)) (NN heuristic) (NNS algorithms))))))) (, ,) (S (VP (VBG allowing) (NP (PRP us)) (S (VP (TO to) (VP (VB find) (NP (JJR larger) (JJ independent) (NNS sets)) (ADVP (RBR faster)) (PP (IN on) (NP (NP (JJ large) (NML (JJ real) (HYPH -) (NN world)) (NNS networks)) (CC and) (NP (JJ synthetic) (NNS instances))))))))))))))) (. .))
