(S (NP (PRP We)) (VP (VBP introduce) (S (NP (NP (CD two) (JJ new) (NNS packages)) (, ,) (NP (NNP Nemo) (CC and) (NNP Hecke)) (, ,)) (VP (VBN written) (PP (IN in) (NP (NP (DT the) (NNP Julia) (NN programming) (NN language)) (PP (IN for) (NP (NP (NN computer) (NN algebra)) (CC and) (NP (NN number) (NN theory))))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (SBAR (IN that) (S (NP (NML (JJ high) (NN performance)) (JJ generic) (NNS algorithms)) (VP (MD can) (VP (VB be) (VP (VBN implemented) (PP (IN in) (NP (NNP Julia))) (, ,) (PP (IN without) (NP (DT the) (NN need) (S (VP (TO to) (VP (VB resort) (PP (IN to) (NP (DT a) (NML (JJ low) (HYPH -) (NN level)) (NN C) (NN implementation)))))))))))))) (. .))
(S (PP (IN For) (NP (VBN specialised) (NNS algorithms))) (, ,) (NP (PRP we)) (VP (VBP use) (NP (NP (NNP Julia) (POS 's)) (ADJP (JJ efficient) (JJ native)) (NN C) (NN interface)) (S (VP (TO to) (VP (VB wrap) (NP (NP (VBG existing) (NML (NNP C) (HYPH /) (NNP C++)) (NNS libraries)) (PP (JJ such) (IN as) (NP (NP (NNP Flint) (, ,) (NNP Arb) (, ,) (NNP Antic)) (CC and) (NP (JJ Singular))))))))) (. .))
(S (NP (PRP We)) (VP (VBP give) (NP (NP (NNS examples)) (PP (IN of) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VP (VB use) (NP (NNP Hecke) (CC and) (NNP Nemo))) (CC and) (VP (VB discuss) (NP (NP (DT some) (NNS algorithms)) (SBAR (WHNP (WDT that)) (S (NP (PRP we)) (VP (VBP have) (VP (VBN implemented) (S (VP (TO to) (VP (VB provide) (NP (NML (JJ high) (NN performance)) (JJ basic) (NN arithmetic)))))))))))))))))) (. .))
