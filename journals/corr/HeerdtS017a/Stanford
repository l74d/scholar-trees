(S (NP (NN Automata) (NN learning)) (VP (VBZ has) (VP (VBN been) (ADVP (RB successfully)) (VP (VBN applied) (PP (IN in) (NP (NP (DT the) (NN verification)) (PP (IN of) (NP (NN hardware) (CC and) (NN software)))))))) (. .))
(S (S (NP (NP (DT The) (NN size)) (PP (IN of) (NP (NP (DT the) (NN automaton) (NN model)) (VP (VBN learned))))) (VP (VBZ is) (NP (NP (DT a) (NN bottleneck)) (PP (IN for) (NP (NN scalability)))))) (, ,) (CC and) (S (ADVP (RB hence)) (NP (NP (NNS optimizations)) (SBAR (WHNP (WDT that)) (S (VP (VBP enable) (NP (NP (NN learning)) (PP (IN of) (NP (JJ compact) (NNS representations)))))))) (VP (VBP are) (ADJP (JJ important)))) (. .))
(S (NP-TMP (NP (DT This) (NN paper) (NNS exploits)) (SBAR (S (NP (NP (NNS monads)) (, ,) (NP (NP (DT both)) (PP (IN as) (NP (NP (DT a) (JJ mathematical) (NN structure)) (CC and) (NP (DT a) (NN programming) (NN construct))))) (, ,)) (VP (TO to) (VP (VB design)))))) (, ,) (VP (VP (VB prove) (ADJP (JJ correct))) (, ,) (CC and) (VP (VB implement) (NP (NP (DT a) (JJ wide) (NN class)) (PP (IN of) (NP (JJ such) (NNS optimizations)))))) (. .))
(S (NP (NP (DT The) (JJ former) (NN perspective)) (PP (IN on) (NP (NNS monads)))) (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (VP (VB develop) (NP (NP (NP (DT a) (JJ new) (NN algorithm)) (CC and) (NP (VBG accompanying) (NN correctness) (NNS proofs))) (, ,) (VP (VBG building) (PP (IN upon) (NP (NP (DT a) (JJ general) (NN framework)) (PP (IN for) (NP (NN automata) (NN learning))))) (PP (VBN based) (PP (IN on) (NP (NN category) (NN theory)))))))))) (. .))
(S (NP (DT The) (JJ new) (NN algorithm)) (VP (VBZ is) (ADJP (JJ parametric) (PP (IN on) (NP (NP (DT a) (NN monad)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ provides) (NP (DT a) (JJ rich) (JJ algebraic) (NN structure)) (S (VP (TO to) (VP (VB capture) (NP (NN non-determinism) (CC and) (JJ other) (NN side) (HYPH -) (NNS effects)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NN approach)) (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (ADVP (RB uniformly)) (VP (VP (VB capture) (NP (VBG existing) (NNS algorithms))) (, ,) (VP (VB develop) (NP (JJ new) (NNS ones))) (, ,) (CC and) (VP (VB add) (NP (NNS optimizations)))))))))) (. .))
(S (S (NP (DT The) (JJ latter) (NN perspective)) (VP (VBZ allows) (NP (PRP us)) (PP (IN to) (S (ADVP (RB effortlessly)) (VP (VB translate) (NP (DT the) (NN theory)) (PP (IN into) (NP (NN practice)))))))) (: :) (S (S (NP (PRP we)) (VP (VBP provide) (NP (DT a) (NNP Haskell) (NN library)) (S (VP (VBG implementing) (NP (PRP$ our) (JJ general) (NN framework)))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP show) (NP (JJ experimental) (NNS results)) (PP (IN for) (NP (CD two) (JJ specific) (NNS instances))) (: :) (UCP (ADJP (JJ non-deterministic)) (CC and) (NP (JJ weighted) (NN automata)))))) (. .))
