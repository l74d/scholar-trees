(S (NP (PRP We)) (VP (VBP present) (NP (DT the) (JJ first) (JJ optimal) (NN algorithm)) (PP (IN for) (NP (NP (DT the) (JJ classical) (NN problem)) (PP (IN of) (S (VP (VBG listing) (NP (NP (PDT all) (DT the) (NNS cycles)) (PP (IN in) (NP (DT an) (JJ undirected) (NN graph)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP exploit) (NP (PRP$ their) (NNS properties)) (SBAR (IN so) (IN that) (S (NP (DT the) (JJ total) (NN cost)) (VP (VBZ is) (NP (NP (NP (DT the) (NN time)) (VP (VBN taken) (S (VP (TO to) (VP (VB read) (NP (NP (DT the) (NN input) (NN graph)) (CC plus) (NP (DT the) (NN time))) (S (VP (TO to) (VP (VB list) (NP (DT the) (NN output)))))))))) (, ,) (ADVP (RB namely)) (, ,) (NP (NP (DT the) (NNS edges)) (PP (IN in) (NP (NP (DT each)) (PP (IN of) (NP (DT the) (NNS cycles))))))))))) (. .))
(S (NP (DT The) (NN algorithm)) (VP (VBZ uses) (NP (DT a) (NN reduction)) (PP (IN to) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG listing) (NP (PDT all) (DT the) (NNS paths)) (PP (IN from) (NP (DT a) (NN vertex) (POS s))) (PP (IN to) (NP (NP (DT a) (JJ vertex) (NN t)) (SBAR (WHNP (WDT which)) (S (NP (PRP we)) (ADVP (RB also)) (VP (VB solve) (ADVP (RB optimally))))))))))))) (. .))
