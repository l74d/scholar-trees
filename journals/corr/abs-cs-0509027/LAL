(S (NP (NNP Haskell)) (VP (VBZ provides) (NP (NP (ADJP (JJ type-class-bounded) (CC and) (JJ parametric)) (NN polymorphism)) (SBAR (IN as) (S (VP (VBN opposed) (PP (TO to) (NP (NP (VB subtype) (NN polymorphism)) (PP (IN of) (NP (NP (JJ object-oriented) (NNS languages)) (PP (JJ such) (IN as) (NP (NNP Java) (CC and) (NNP OCaml)))))))))))) (. .))
(S (NP (NP (PRP It))) (VP (VBZ is) (NP (DT a) (JJ contentious) (NN question)) (SBAR (IN whether) (S (NP (NP (NNP Haskell) (CD 98)) (PP (PP (IN without) (NP (NNS extensions))) (, ,) (CC or) (PP (IN with) (NP (JJ common) (NNS extensions))) (, ,) (CC or) (PP (IN with) (NP (JJ new) (NNS extensions))))) (VP (MD can) (VP (ADVP (RB fully)) (VB support) (NP (JJ conventional) (JJ object-oriented) (NN programming)) (PP (IN with) (NP (NP (NN encapsulation)) (, ,) (NP (JJ mutable) (NN state)) (, ,) (NP (NN inheritance)) (, ,) (NP (VBG overriding)) (, ,) (ADJP (ADJP (RB statically) (VBN checked)) (NN implicit) (CC and) (JJ explicit)) (NN subtyping) (, ,) (CC and) (ADVP (RB so) (IN on))))))))) (. .))
(S (NP (PRP We)) (VP (ADVP (RB systematically)) (VBP substantiate) (SBAR (IN that) (S (NP (NNP Haskell) (CD 98)) (, ,) (PP (IN with) (NP (DT some) (JJ common) (NNS extensions))) (, ,) (VP (VBZ supports) (NP (NP (PDT all) (DT the) (JJ conventional) (NNP OO) (VBZ features)) (CC plus) (NP (NP (ADJP (RBR more) (JJ advanced)) (NNS ones)) (, ,) (PP (VBG including) (NP (NP (NN first-class) (ADJP (RB lexically) (VBD scoped)) (NNS classes)) (, ,) (NP (ADJP (RB implicitly) (JJ polymorphic)) (NNS classes)) (, ,) (NP (JJ flexible) (JJ multiple) (NN inheritance)) (, ,) (NP (JJ safe) (NNS downcasts)) (CC and) (NP (JJ safe) (JJ co-variant) (NNS arguments)))))))))) (. .))
(S (NP (NNP Haskell)) (ADVP (RB indeed)) (VP (MD can) (VP (VB support) (NP (NP (NN width) (CC and) (NN depth)) (, ,) (NP (ADJP (JJ structural) (CC and) (JJ nominal)) (NN subtyping))))) (. .))
(S (NP (PRP We)) (VP (VBP address) (NP (DT the) (JJ particular) (NN challenge) (S (VP (TO to) (VP (VB preserve) (NP (NP (NNP Haskell) (POS 's)) (NN type) (NN inference)) (PP (ADVP (RB even)) (IN for) (NP (NP (NNS objects)) (CC and) (NP (JJ object-operating) (NNS functions))))))))) (. .))
(S (NP (DT The) (NNP OO) (NNS features)) (VP (VBP are) (VP (VBN introduced) (PP (IN in) (NP (NNP Haskell))) (PP (IN as) (NP (DT the) (NNP OOHaskell) (NN library))))) (. .))
(S (NP (NNP OOHaskell)) (VP (VBZ lends) (NP (PRP itself)) (PP (IN as) (NP (NP (DT a) (NN sandbox)) (PP (IN for) (NP (JJ typed) (NNP OO) (NN language) (NN design)))))) (. .))
