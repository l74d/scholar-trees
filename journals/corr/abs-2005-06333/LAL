(S (NP (NP (NNP Multiparty) (NNP Session) (NNP Types)) (PRN (-LRB- -LRB-) (NP (NNP MPST)) (-RRB- -RRB-))) (VP (VBZ is) (NP (NP (DT a) (JJ typing) (NN discipline)) (PP (IN for) (NP (NN communication) (NNS protocols))))) (. .))
(S (NP (PRP It)) (VP (VBZ ensures) (NP (NP (DT the) (NN absence)) (PP (IN of) (NP (NP (NN communication) (NNS errors)) (CC and) (NP (NNS deadlocks)))) (PP (IN for) (NP (JJ well-typed) (NN communicating) (NNS processes))))) (. .))
(S (NP (NP (DT The) (JJ state-of-the-art) (NNS implementations)) (PP (IN of) (NP (DT the) (NNP MPST) (NN theory)))) (VP (RB rely) (PP (IN on) (NP (NP (NP (PRN (-LRB- -LRB-) (CD 1) (-RRB- -RRB-)) (NN runtime) (NN linearity) (NNS checks)) (SBAR (S (VP (TO to) (VP (VB ensure) (NP (NP (JJ correct) (NN usage)) (PP (IN of) (NP (NN communication) (NNS channels))))))))) (CC and) (NP (NP (PRN (-LRB- -LRB-) (CD 2) (-RRB- -RRB-)) (JJ external) (JJ domain-specific) (NNS languages)) (PP (IN for) (S (VP (VBG specifying) (CC and) (VBG verifying) (NP (NN multiparty) (NNS protocols))))))))) (. .))
(S (S (VP (TO To) (VP (VB overcome) (NP (DT these) (NNS limitations))))) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (NP (NP (DT a) (NN library)) (PP (IN for) (S (VP (VBG programming) (PP (IN with) (NP (JJ global) (NNS combinators))))))) (: —) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NNS functions))) (PP (IN for) (S (VP (NN writing) (CC and) (VBG verifying) (NP (NN multiparty) (NNS protocols)) (PP (IN in) (NP (NNP OCaml))))))))) (. .))
(S (NP (NP (JJ Local) (NNS behaviours)) (PP (IN for) (NP (NP (DT all) (NNS processes)) (PP (IN in) (NP (DT a) (NN protocol)))))) (VP (VBP are) (VP (VBN inferred) (ADVP (IN at) (RB once)) (PP (IN from) (NP (DT a) (JJ global) (NN combinator))))) (. .))
(S (S (NP (PRP We)) (VP (VP (VBP formalise) (NP (JJ global) (NNS combinators))) (CC and) (VP (VB prove) (NP (NP (DT a) (NN sound) (NN realisability)) (PP (IN of) (NP (JJ global) (NNS combinators))))))) (: —) (S (NP (DT a) (JJ well-typed) (JJ global) (NN combinator)) (VP (VBZ derives) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (JJ local) (NNS types))) (, ,) (SBAR (WHPP (IN by) (WHNP (WDT which))) (S (NP (VBD typed) (NN endpoint) (NNS programs)) (VP (MD can) (VP (VB ensure) (NP (NN type) (CC and) (NN communication) (NN safety))))))))) (. .))
(S (NP (PRP$ Our) (NN approach)) (VP (VBZ enables) (S (NP (NP (JJ fully-static) (NN verification) (CC and) (NN implementation)) (PP (IN of) (NP (NP (DT the) (JJ whole) (NN protocol)) (, ,) (PP (PP (IN from) (NP (DT the) (NN protocol) (NN specification))) (PP (TO to) (NP (DT the) (NN process) (NNS implementations)))) (, ,)))) (VP (TO to) (VP (VB happen) (PP (IN in) (NP (DT the) (JJ same) (NN language))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP compare) (NP (PRP$ our) (NN implementation)) (PP (TO to) (NP (JJ untyped) (CC and) (JJ continuation-passing) (NN style) (NNS implementations)))) (, ,) (CC and) (VP (VB demonstrate) (NP (PRP$ its) (NN expressiveness)) (PP (IN by) (S (VP (VBG implementing) (NP (NP (DT a) (NN plethora)) (PP (IN of) (NP (NNS protocols))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (S (NP (PRP$ our) (NN library)) (VP (MD can) (VP (VB interoperate) (PP (IN with) (NP (VBG existing) (NNS libraries) (CC and) (NNS services))) (, ,) (S (VP (VBG implementing) (NP (NP (NNP DNS) (PRN (-LRB- -LRB-) (NNP Domain) (NNP Name) (NNP Service) (-RRB- -RRB-)) (NN protocol)) (CC and) (NP (DT the) (NNP OAuth) (PRN (-LRB- -LRB-) (NNP Open) (NNP Authentication) (-RRB- -RRB-)) (NN protocol)))))))))) (. .))
