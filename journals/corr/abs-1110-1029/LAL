(S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (NP (DT the) (JJ current) (NN state)) (PP (IN of) (NP (NP (PRP$ our) (NN work)) (PP (IN on) (NP (NP (DT an) (JJ interactive) (NN toplevel)) (PP (IN for) (NP (DT the) (NNP OCaml) (NN language))) (VP (VBN based) (PP (IN on) (NP (DT the) (VBG optimizing) (NX (NX (JJ native) (NN code) (NN compiler)) (CC and) (NX (NN runtime)))))))))))) (. .))
(S (NP (PRP$ Our) (JJ native) (NN toplevel)) (VP (VBZ is) (ADJP (ADJP (QP (IN up) (TO to) (CD 100) (NNS times)) (RBR faster)) (PP (IN than) (NP (NP (DT the) (NN default) (NNP OCaml) (NN toplevel)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (DT the) (NN byte) (NN code) (NN compiler) (CC and) (NN interpreter))))))))))) (. .))
(S (NP (PRP It)) (VP (VP (VBZ uses) (NP (NNP Just-In-Time) (NNS techniques)) (S (VP (TO to) (VP (VB compile) (NP (NN toplevel) (NNS phrases)) (PP (TO to) (NP (JJ native) (NN code))) (PP (IN at) (NP (NN runtime))))))) (, ,) (CC and) (VP (ADVP (RB currently)) (VBZ works) (PP (IN with) (NP (NP (JJ various) (JJ Unix-like) (NNS systems)) (VP (VBG running) (PP (IN on) (NP (NN x86) (CC or) (JJ x86-64) (NNS processors)))))))) (. .))
