(S (NP (JJ Parallel) (NN dataflow) (NNS systems)) (VP (VBP are) (NP (NP (DT a) (JJ central) (NN part)) (PP (IN of) (NP (JJS most) (JJ analytic) (NNS pipelines))) (PP (IN for) (NP (JJ big) (NNS data))))) (. .))
(S (NP (NP (DT The) (JJ iterative) (NN nature)) (PP (IN of) (NP (JJ many) (NML (NML (NN analysis)) (CC and) (NML (NN machine) (NN learning))) (NNS algorithms)))) (, ,) (ADVP (RB however)) (, ,) (VP (VBZ is) (ADVP (RB still)) (NP (NP (DT a) (NN challenge)) (PP (IN for) (NP (JJ current) (NNS systems))))) (. .))
(S (SBAR (IN While) (S (NP (NP (JJ certain) (NNS types)) (PP (IN of) (NP (JJ bulk) (JJ iterative) (NNS algorithms)))) (VP (VBP are) (VP (VBN supported) (PP (IN by) (NP (JJ novel) (NN dataflow) (NNS frameworks))))))) (, ,) (NP (DT these) (NNS systems)) (VP (MD can) (RB not) (VP (VB exploit) (NP (JJ computational) (NNS dependencies)) (UCP (ADJP (JJ present) (PP (IN in) (NP (JJ many) (NNS algorithms)))) (, ,) (PP (JJ such) (IN as) (NP (NN graph) (NNS algorithms)))))) (. .))
(S (PP (IN As) (NP (DT a) (NN result))) (, ,) (NP (DT these) (NNS algorithms)) (VP (VP (VBP are) (ADVP (RB inefficiently)) (VP (VBN executed))) (CC and) (VP (VBP have) (VP (VBN led) (PP (IN to) (NP (JJ specialized) (NNS systems))) (PP (VBN based) (PP (IN on) (NP (NP (JJ other) (NNS paradigms)) (, ,) (PP (JJ such) (IN as) (NP (NP (NN message) (NN passing)) (CC or) (NP (VBN shared) (NN memory)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (DT a) (NN method)) (S (VP (TO to) (VP (VB integrate) (NP (NP (JJ incremental) (NNS iterations)) (, ,) (NP (NP (DT a) (NN form)) (PP (IN of) (NP (NN workset) (NNS iterations)))) (, ,)) (PP (IN with) (NP (JJ parallel) (NNS dataflows))))))) (. .))
(S (PP (IN After) (S (VP (VBG showing) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB integrate) (NP (JJ bulk) (NNS iterations)) (PP (IN into) (NP (NP (DT a) (NN dataflow) (NN system)) (CC and) (NP (PRP$ its) (NN optimizer))))))))))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (DT an) (NN extension)) (PP (IN to) (NP (NP (DT the) (NN programming) (NN model)) (PP (IN for) (NP (JJ incremental) (NNS iterations)))))) (. .))
(S (NP (DT The) (NN extension)) (VP (VP (VBZ alleviates) (PP (IN for) (NP (NP (DT the) (NN lack)) (PP (IN of) (NP (NP (JJ mutable) (NN state)) (PP (IN in) (NP (NNS dataflows)))))))) (CC and) (VP (VBZ allows) (PP (IN for) (S (VP (VBG exploiting) (S (NP (DT the) (JJ sparse) (JJ computational) (NNS dependencies)) (ADJP (JJ inherent) (PP (IN in) (NP (JJ many) (JJ iterative) (NNS algorithms)))))))))) (. .))
(S (NP (NP (DT The) (NN evaluation)) (PP (IN of) (NP (DT a) (JJ prototypical) (NN implementation)))) (VP (VBZ shows) (SBAR (IN that) (S (NP (DT those) (NNS aspects)) (VP (VBP lead) (PP (IN to) (ADVP (RB up))) (PP (IN to) (NP (NP (CD two) (NNS orders)) (PP (IN of) (NP (NN magnitude) (NN speedup))))) (PP (IN in) (NP (NN algorithm) (NN runtime))) (, ,) (SBAR (WHADVP (WRB when)) (S (VP (VBN exploited)))))))) (. .))
(S (PP (IN In) (NP (PRP$ our) (NNS experiments))) (, ,) (NP (DT the) (VBN improved) (NN dataflow) (NN system)) (VP (VBZ is) (ADJP (RB highly) (JJ competitive) (PP (IN with) (NP (JJ specialized) (NNS systems)))) (SBAR (IN while) (S (VP (VBG maintaining) (NP (DT a) (ADJP (JJ transparent) (CC and) (JJ unified)) (NN dataflow) (NN abstraction)))))) (. .))
