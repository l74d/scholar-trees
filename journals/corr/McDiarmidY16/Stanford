(S (S (NP (DT A) (NN graph)) (VP (VBZ is) (ADJP (JJ unipolar)) (SBAR (IN if) (S (NP (PRP it)) (VP (MD can) (VP (VB be) (VP (VBN partitioned) (PP (IN into) (NP (NP (DT a) (NML (NN clique) (CC and) (DT a) (NN disjoint)) (NN union)) (PP (IN of) (NP (NNS cliques)))))))))))) (, ,) (CC and) (S (NP (DT a) (NN graph)) (VP (VBZ is) (NP (DT a) (VBN generalised) (NN split) (NN graph)) (SBAR (IN if) (S (NP (NP (PRP it)) (CC or) (NP (PRP$ its) (NN complement))) (VP (VBZ is) (ADJP (JJ unipolar))))))) (. .))
(S (NP (NP (DT A) (JJ unipolar) (NN partition)) (PP (IN of) (NP (DT a) (NN graph)))) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB find) (ADVP (RB efficiently)) (NP (NP (DT the) (NN clique) (NN number)) (, ,) (NP (DT the) (NN stability) (NN number)) (, ,) (NP (DT the) (JJ chromatic) (NN number)) (, ,) (CC and) (S (VP (TO to) (VP (VB solve) (NP (NP (JJ other) (NNS problems)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (JJ hard) (PP (IN for) (NP (JJ general) (NNS graphs)))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (DT the) (JJ first) (NN $) (NML (NML (NN O) (PRN (-LRB- -LRB-) (NP (NN n) (SYM ^) (CD 2)) (-RRB- -RRB-))) (NML ($ $))) (NN time) (NN algorithm)) (PP (IN for) (NP (NP (NN recognition)) (PP (IN of) (NP (NP (NP ($ $)) (FRAG (NP (NN n)) (NP ($ $)))) (HYPH -) (NP (JJ vertex) (ADJP (JJ unipolar) (CC and) (JJ generalised)) (NN split) (NNS graphs)))))) (, ,) (S (VP (VBG improving) (PP (IN on) (NP (JJ previous) (NN $) (NN O) (PRN (-LRB- -LRB-) (NP (NN n) (SYM ^) (CD 3)) (-RRB- -RRB-)))) (NP (NML (NML ($ $)) (NN time)) (NNS algorithms))))) (. .))
