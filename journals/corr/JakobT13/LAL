(S (NP (NP (NN Error) (NN detection) (NNS facilities)) (PP (IN for) (NP (JJ dynamic) (NNS languages)))) (VP (VBP are) (ADVP (RB often)) (VP (VBN based) (PP (IN on) (NP (NN unit) (NN testing))))) (. .))
(S (ADVP (RB Thus)) (, ,) (NP (NP (DT the) (NN advantage)) (PP (IN of) (NP (NP (JJ rapid) (NN prototyping)) (CC and) (NP (NN flexibility))))) (VP (MD must) (VP (VB be) (VP (VBN weighed) (PP (IN against) (NP (ADJP (NN cumbersome) (CC and) (ADJP (NN time) (VBG consuming))) (NN test) (NN suite) (NN development)))))) (. .))
(S (NP (NP (NNP Lindahl) (CC and) (NNP Sagonas) (POS â€º)) (NN success) (NNS typings)) (VP (VBP provide) (NP (NP (DT a) (NN means)) (PP (IN of) (NP (NP (JJ static) (JJ must-fail) (NN detection)) (PP (IN in) (NP (NNP Erlang))))))) (. .))
(S (PP (JJ Due) (TO to) (NP (NP (DT the) (JJ constraint-based) (NN nature)) (PP (IN of) (NP (DT the) (NN approach))))) (, ,) (NP (NP (DT some) (NNS errors)) (VP (VBG involving) (NP (NP (JJ nested) (NNS tuples)) (CC and) (NP (NN recursion))))) (VP (MD can) (RB not) (VP (VB be) (VP (VBN detected)))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT an) (NN approach)) (SBAR (WHNP (WDT that)) (S (VP (VBZ uses) (NP (NP (DT an) (NN extension)) (PP (IN of) (NP (NN model) (VBG checking))) (PP (IN for) (NP (NP (JJ pattern-matching) (NN recursion) (NNS schemes)) (PP (IN with) (NP (JJ context-aware) (NNS ranked) (JJ tree) (NNS automata)))))) (S (VP (TO to) (VP (VB provide) (NP (NP (JJ improved) (NN success) (NNS typings)) (PP (IN for) (NP (DT a) (JJ constructor-based) (NN first-order) (NN prototype) (NN language)))))))))))) (. .))
