(S (NP (ADJP (NP (NP (DT The) (NN field)) (PP (IN of) (NP (NP (ADJP (JJ exact) (JJ exponential)) (NN time) (NNS algorithms)) (PP (IN for) (NP (NNP NP)))))) (HYPH -) (JJ hard)) (NNS problems)) (VP (VBZ has) (VP (VBN thrived) (PP (IN over) (NP (DT the) (JJ last) (NN decade))))) (. .))
(S (SBAR (IN While) (S (NP (JJ exhaustive) (NN search)) (VP (VBZ remains) (ADVP (RB asymptotically)) (NP (NP (DT the) (ADJP (RBS fastest) (JJ known)) (NN algorithm)) (PP (IN for) (NP (DT some) (JJ basic) (NNS problems))))))) (, ,) (NP (ADJP (JJ difficult) (CC and) (JJ non-trivial) (JJ exponential)) (NN time) (NNS algorithms)) (VP (VBP have) (VP (VBN been) (VP (VBN found) (PP (IN for) (NP (NP (NP (QP (DT a) (NN myriad))) (PP (IN of) (NP (NP (NNS problems)) (, ,) (PP (VBG including) (NP (NNP Graph) (NNP Coloring))))) (, ,) (NP (JJ Hamiltonian) (NN Path)) (, ,) (VP (VBG Dominating) (S (VP (VBN Set))))) (CC and) (NP (NML (CD 3) (SYM -)) (NNP CNF) (HYPH -) (NNP Sat))))))) (. .))
(S (PP (IN In) (NP (DT some) (NNS instances))) (, ,) (S (VP (VBG improving) (NP (DT these) (NNS algorithms)))) (ADVP (RB further)) (VP (VBZ seems) (S (VP (TO to) (VP (VB be) (ADJP (IN out) (PP (IN of) (NP (NN reach)))))))) (. .))
(S (NP (DT The) (NML (NNP CNF) (HYPH -) (NNP Sat)) (NN problem)) (VP (VBZ is) (NP (NP (DT the) (JJ canonical) (NN example)) (PP (IN of) (NP (NP (DT a) (NN problem)) (SBAR (WHPP (IN for) (WHNP (WDT which))) (S (NP (DT the) (JJ trivial) (JJ exhaustive) (NN search) (NN algorithm)) (VP (VBZ runs) (PP (IN in) (NP (NP (NN time) (NN O) (PRN (-LRB- -LRB-) (NP (CD 2) (SYM ^) (NN n)) (-RRB- -RRB-))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (NN n)) (VP (VBZ is) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NP (NNS variables)) (PP (IN in) (NP (DT the) (NN input) (NN formula)))))))))))))))))) (. .))
(S (S (SBAR (IN While) (S (NP (EX there)) (VP (VBP exist) (NP (JJ non-trivial) (NNS algorithms)) (PP (IN for) (NP (NP (NNP CNF) (HYPH -) (NNP Sat)) (SBAR (WHNP (WDT that)) (S (VP (VBP run) (PP (IN in) (NP (NN time) (NN o)))))))) (PRN (-LRB- -LRB-) (NP (CD 2) (SYM ^) (NN n)) (-RRB- -RRB-))))) (, ,) (NP (DT no) (NN algorithm)) (VP (VBD was) (ADJP (JJ able) (S (VP (TO to) (VP (VB improve) (NP (DT the) (NN growth) (NN rate) (CD 2)) (PP (IN to) (NP (DT a) (ADJP (JJR smaller) (JJ constant)))))))))) (, ,) (CC and) (S (ADVP (RB hence)) (NP (PRP it)) (VP (VBZ is) (ADJP (JJ natural) (PP (IN to) (NP (NN conjecture)))) (SBAR (WHADVP (WDT that)) (FRAG (SBAR (LST (LS 2)) (S (VP (VBZ is) (NP (DT the) (JJ optimal) (NN growth))) (NP (NN rate)))))))) (. .))
(S (NP (NP (NP (DT The) (ADJP (JJ strong) (JJ exponential)) (NN time) (NN hypothesis)) (-LRB- -LRB-) (NP (NNP SETH)) (-RRB- -RRB-)) (PP (IN by) (NP (NNP Impagliazzo) (CC and) (NNP Paturi))) (PRN (-LRB- [) (NP (NNP JCSS) (CD 2001)) (-RRB- ]))) (VP (VP (VBZ goes) (NP (DT a) (JJ little) (NN bit)) (ADVP (RBR further))) (CC and) (VP (VBZ asserts) (SBAR (WHNP (WHNP (DT that)) (, ,) (SBAR (IN for) (S (NP (DT every) (NN epsilon)) (VP (SYM <) (NP (CD 1))))) (, ,)) (S (NP (EX there)) (VP (VBZ is) (NP (DT a) (ADJP (-LRB- -LRB-) (JJ large) (-RRB- -RRB-)) (NN integer) (NN k)) (SBAR (JJ such) (IN that) (S (NP (DT that) (NML (NN k) (HYPH -) (NN CNF) (HYPH -)) (NNP Sat)) (VP (MD can) (RB not) (VP (VB be) (VP (VBN computed) (PP (IN in) (NP (NP (NP (NN time)) (NP (CD 2) (SYM ^))) (-LRB- {) (NP (NN epsilon) (NN n)) (-RRB- }))))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (, ,) (S (SBAR (IN for) (S (NP (DT every) (NN epsilon)) (VP (SYM <) (NP (CD 1))))) (, ,) (NP (DT the) (NNS problems)) (NP (NP (NNP Hitting) (NNP Set)) (, ,) (NP (NNP Set) (NNP Splitting)) (, ,) (CC and) (NP (NNP NAE) (HYPH -) (NNP Sat))) (VP (MD can) (RB not) (VP (VB be) (VP (VBN computed) (PP (IN in) (NP (NN time) (NN O) (PRN (-LRB- -LRB-) (NP (NP (CD 2)) (SYM ^) (NP (-LRB- {) (NN epsilon) (NN n) (-RRB- }))) (-RRB- -RRB-)))) (SBAR (IN unless) (S (NP (NNP SETH)) (VP (VBZ fails)))))))))) (. .))
(S (ADVP (RB Here)) (NP (NN n)) (VP (VBZ is) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NP (NNS elements) (CC or) (NNS variables)) (PP (IN in) (NP (DT the) (NN input))))))) (. .))
(S (PP (IN For) (NP (DT these) (NNS problems))) (, ,) (NP (PRP we)) (ADVP (RB actually)) (VP (VBP get) (NP (DT an) (NN equivalence)) (PP (IN to) (NP (NP (NNP SETH)) (PP (IN in) (NP (DT a) (JJ certain) (NN sense)))))) (. .))
(S (S (NP (PRP We)) (NP (NP (NN conjecture)) (SBAR (WHNP (WDT that)) (S (NP (NNP SETH)) (VP (VBZ implies) (NP (NP (DT a) (JJ similar) (NN statement)) (PP (IN for) (NP (NNP Set) (NNP Cover))))))))) (, ,) (CC and) (S (VP (VB prove) (SBAR (IN that) (, ,) (S (PP (IN under) (NP (DT this) (NN assumption))) (, ,) (NP (NP (DT the) (ADJP (RBS fastest) (JJ known)) (NNS algorithms)) (PP (IN for) (NP (NP (NNP Steinter) (NNP Tree)) (, ,) (NP (VBN Connected) (NML (NNP Vertex) (NNP Cover))) (, ,) (NP (NNP Set) (NNP Partitioning)) (, ,) (CC and) (NP (NP (DT the) (JJ pseudo-polynomial) (NN time) (NN algorithm)) (PP (IN for) (NP (NNP Subset) (NNP Sum))))))) (VP (MD can) (RB not) (VP (VB be) (ADJP (RB significantly) (VBN improved)))))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP justify) (NP (PRP$ our) (NN assumption)) (PP (IN about) (NP (NP (DT the) (NN hardness)) (PP (IN of) (NP (NNP Set) (NNP Cover))))) (PP (IN by) (S (VP (VBG showing) (SBAR (IN that) (S (NP (NP (DT the) (NN parity)) (PP (IN of) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (VBN set) (NNS covers)))))) (VP (MD can) (RB not) (VP (VB be) (VP (VBN computed) (PP (IN in) (NP (NP (NML (NN time) (NN O)) (-LRB- -LRB-) (CD 2) (SYM ^)) (-LRB- {) (NP (NN epsilon) (NN n)) (-RRB- }))) (-RRB- -RRB-) (PP (IN for) (S (NP (DT any) (NN epsilon)) (VP (SYM <) (NP (CD 1))))) (SBAR (IN unless) (S (NP (NNP SETH)) (VP (VBZ fails))))))))))))) (. .))
