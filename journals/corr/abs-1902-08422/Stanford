(S (NP (DT This) (NN paper)) (VP (VBZ is) (NP (NP (DT a) (NN contribution)) (PP (IN to) (S (VP (VBG exploring) (CC and) (VBG analyzing) (NP (NP (NN space) (HYPH -) (NNS improvements)) (PP (IN in) (NP (JJ concurrent) (NN programming) (NNS languages)))) (, ,) (PP (IN in) (NP (ADJP (JJ particular) (PP (IN in) (NP (DT the) (JJ functional) (NN process) (HYPH -) (NN calculus)))) (NN CHF)))))))) (. .))
(S (NP (NN Space) (HYPH -) (NNS improvements)) (VP (VBP are) (VP (VBN defined) (PP (IN as) (NP (NP (DT a) (NN generalization)) (PP (IN of) (NP (NP (DT the) (VBG corresponding) (NN notion)) (PP (IN in) (NP (JJ deterministic) (JJ pure) (JJ functional) (NNS languages))))))))) (. .))
(S (NP (NP (DT The) (JJ main) (NN part)) (PP (IN of) (NP (DT the) (NN paper)))) (VP (VBZ is) (NP (NP (DT the) (NML (NN O) (PRN (-LRB- -LRB-) (S (NP (NN n)) (VP (SYM *) (NP (NN log) (NN n)))) (-RRB- -RRB-))) (NN algorithm) (NNP SpOptN)) (PP (IN for) (NP (NP (ADVP (RB offline)) (NN space) (NN optimization)) (PP (IN of) (NP (JJ several) (JJ parallel) (JJ independent) (NNS processes))))))) (. .))
(S (NP (NP (NNS Applications)) (PP (IN of) (NP (DT this) (NN algorithm)))) (VP (VBP are) (: :) (NP (NP (LST (-LRB- -LRB-) (LS i) (-RRB- -RRB-)) (NP (NN affirmation)) (PP (IN of) (NP (NP (ADJP (NN space) (VBG improving)) (NNS transformations)) (PP (IN for) (NP (NP (JJ particular) (NNS classes)) (PP (IN of) (NP (NN program) (NNS transformations)))))))) (: ;) (NP (LST (-LRB- -LRB-) (LS ii) (-RRB- -RRB-)) (NP (NN support)) (PP (IN of) (NP (NP (DT an) (ADJP (NP (NN interpreter)) (HYPH -) (VBN based)) (NN method)) (PP (IN for) (NP (VBG refuting) (NN space) (HYPH -) (NNS improvements)))))) (: ;) (CC and) (NP (LST (-LRB- -LRB-) (LS iii) (-RRB- -RRB-)) (NP (ADJP (NP (QP (IN as) (DT a)) (NN stand)) (HYPH -) (JJ alone)) (ADVP (RB offline))) (PP (HYPH -) (NP (NN optimizer))) (PP (IN for) (NP (NP (NP (NN space)) (-LRB- -LRB-) (CC or) (NP (JJ similar) (NNS resources)) (-RRB- -RRB-)) (PP (IN of) (NP (NN parallel) (NNS processes)))))))) (. .))
