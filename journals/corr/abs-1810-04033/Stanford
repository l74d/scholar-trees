(S (NP (JJ Simple) (NN stencil) (NNS codes)) (VP (VP (VBP are)) (CC and) (VP (VBP remain) (NP (DT an) (JJ important) (NN building) (NN block)) (PP (IN in) (NP (JJ scientific) (NN computing))))) (. .))
(S (PP (IN On) (NP (VBN shared) (NN memory) (NNS nodes))) (, ,) (NP (PRP they)) (VP (VBP are) (ADVP (RB traditionally)) (VP (VBN parallelised) (PP (IN through) (NP (NP (NN colouring)) (CC or) (NP (-LRB- -LRB-) (JJ recursive) (-RRB- -RRB-) (NN tiling)))))) (. .))
(S (NP (JJ New) (NN OpenMP) (NNS versions)) (ADVP (RB alternatively)) (VP (VBP allow) (NP (NNS users)) (S (VP (VP (TO to) (VP (VB specify) (NP (NNS data) (NNS dependencies)) (ADVP (RB explicitly)))) (CC and) (VP (TO to) (VP (VB outsource) (NP (DT the) (NN decision)) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB distribute) (NP (DT the) (NN work)) (PP (IN to) (NP (DT the) (NN runtime) (NN system)))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP evaluate) (NP (JJ traditional) (NN multithreading) (NNS strategies)) (PP (IN on) (NP (DT both) (NNP Broadwell) (CC and) (NNP KNL))) (, ,) (S (VP (VB study) (NP (NP (DT the) (VBG arising) (NN assignment)) (PP (IN of) (NP (NP (NNS tasks)) (PP (IN to) (NP (NNS threads))))))))) (CC and) (, ,) (PP (IN from) (ADVP (RB there))) (, ,) (VP (VBP derive) (NP (CD two) (JJ efficient) (NNS ways)) (S (VP (TO to) (VP (VB parallelise) (NP (NN stencil) (NNS codes)) (PP (IN on) (NP (NP (JJ regular) (JJ Cartesian) (NNS grids)) (SBAR (WHNP (WDT that)) (S (VP (VBP fuse) (NP (ADJP (NP (NN colouring) (CC and) (NN task)) (HYPH -) (VBN based)) (NNS approaches)))))))))))) (. .))
