(S (NP (PRP We)) (VP (VBP present) (NP (NP (NP (DT a) (NN machine)) (HYPH -) (VP (VBN checked) (NP (NP (NN soundness) (NN proof)) (PP (IN of) (NP (NP (DT a) (NN translation)) (PP (IN of) (NP (NN Event) (HYPH -) (NN B)))))) (PP (IN to) (NP (DT the) (NNP Java))))) (VP (VBG Modeling) (NP (NNP Language)))) (PRN (-LRB- -LRB-) (NP (NNP JML)) (-RRB- -RRB-))) (. .))
(S (NP (DT The) (NN translation)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (DT an) (NN operator) (NN EventB2Jml)) (SBAR (WHNP (WDT that)) (S (VP (VBZ maps) (NP (NP (NP (NML (NNP Evnet) (HYPH -) (NNP B)) (NNS events)) (PP (IN to) (NP (NN JML) (NN method) (NNS specifications)))) (, ,) (CC and) (NP (NP (JJ deterministic)) (CC and) (NP (JJ non-deterministic) (NNS assignments)))) (PP (IN to) (NP (NN JML) (NN method) (NNS post-conditions)))))))))) (. .))
(S (NP (DT This) (NN translation)) (VP (VBZ has) (ADVP (RB previously)) (VP (VBN been) (VP (VBN implemented) (PP (IN as) (NP (DT the) (NN EventB2Jml) (NN tool)))))) (. .))
(S (S (NP (PRP We)) (VP (VBD adopted) (NP (DT a) (NML (S (VP (VBG taking) (NP (PRP$ our) (JJ own) (NN medicine))))) (NN approach)) (PP (IN in) (NP (NP (DT the) (NN formalisation)) (PP (IN of) (NP (PRP$ our) (NN proof))))) (SBAR (IN so) (IN that) (S (NP (NN Event) (HYPH -) (NML (NN B) (CONJP (RB as) (RB well) (IN as)) (NN JML))) (VP (VBP are) (VP (VBN formalised) (PP (IN in) (NP (NN Event) (HYPH -) (NN B))))))))) (CC and) (S (NP (DT the) (NN proof)) (VP (VBZ is) (VP (VBN discharged) (PP (IN with) (NP (DT the) (NNP Rodin) (NN platform)))))) (. .))
(S (ADVP (RB Hence)) (, ,) (PP (PP (IN for) (NP (DT any) (NML (NN Event) (HYPH -) (NN B)) (NN substitution) (PRN (-LRB- -LRB-) (SBAR (IN whether) (FRAG (NP (NP (DT an) (NN event)) (CC or) (NP (DT an) (NN assignment))))) (-RRB- -RRB-)))) (CC and) (PP (IN for) (NP (NP (DT the) (NN JML) (NN method) (NN specification)) (VP (VBN obtained) (PP (IN by) (S (VP (VBG applying) (NP (NN EventB2Jml)) (PP (IN to) (NP (DT the) (NN substitution)))))))))) (, ,) (NP (PRP we)) (VP (VBP prove) (SBAR (IN that) (S (NP (NP (DT the) (NNS semantics)) (PP (IN of) (NP (DT the) (NN JML) (NN method) (NN specification)))) (VP (VBZ is) (VP (VBN simulated) (PP (IN by) (NP (NP (DT the) (NNS semantics)) (PP (IN of) (NP (DT the) (NN substitution)))))))))) (. .))
(S (ADVP (RB Therefore)) (, ,) (NP (NP (DT the) (NN JML) (NN specification)) (VP (VBN obtained) (PP (IN as) (NP (NN translation))) (PP (IN from) (NP (DT the) (NML (NN Event) (HYPH -) (NN B)) (NN substitution))))) (VP (VBZ is) (NP (NP (DT a) (NN refinement)) (PP (IN of) (NP (DT the) (NN substitution))))) (. .))
(S (S (NP (PRP$ Our) (NN proof)) (VP (VBZ includes) (NP (NP (NNS invariants)) (CC and) (NP (DT the) (JJ standard) (NML (NN Event) (HYPH -) (NN B)) (NN initialising) (NN event))))) (, ,) (CC but) (S (NP (PRP it)) (VP (VBZ does) (RB not) (VP (VB include) (NP (NML (NML (JJ full) (NNS machines)) (CC or) (NML (NN Event) (HYPH -) (NN B))) (NNS contexts))))) (. .))
(S (S (NP (PRP We)) (VP (VBP assume) (SBAR (IN that) (S (NP (NP (DT the) (NNS semantics)) (PP (IN of) (NP (NP (NN JML)) (CC and) (NP (NN Event) (HYPH -) (NN B))))) (VP (VBP operate) (NP (DT both)) (PP (IN on) (NP (DT the) (JJ same) (JJ initial) (CC and) (JJ final) (NNS states)))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP justify) (NP (PRP$ our) (NN assumption)))) (. .))
