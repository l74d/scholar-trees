(S (SBAR (IN If) (S (S (NP (NN recursion)) (VP (VBZ is) (VP (VBN added) (PP (TO to) (NP (DT the) (NN language)))))) (CC and) (S (NP (CD one)) (VP (NNS attempts) (S (VP (TO to) (VP (VB adapt) (NP (DT the) (NNS models)) (PP (IN from) (NP (PRN (-LRB- -LRB-) (JJ nominal) (-RRB- -RRB-)) (NNS sets))) (PP (TO to) (NP (PRN (-LRB- -LRB-) (JJ nominal) (-RRB- -RRB-)) (NNS domains)))))))))) (, ,) (ADVP (RB however)) (, ,) (NP (NP (DT the) (JJ direct-style) (NN construction)) (PP (IN of) (NP (DT the) (NN allocation) (VBZ monad)))) (ADVP (RB no) (JJR longer)) (VP (NNS works)) (. .))
(S (NP (DT This) (NN issue)) (VP (VBZ has) (ADVP (RB previously)) (VP (VBN been) (VP (VBN addressed) (PP (IN by) (S (VP (VBG using) (NP (NP (DT a) (NN monad)) (SBAR (WHNP (WDT that)) (S (VP (VBZ combines) (NP (JJ dynamic) (NN allocation)) (PP (IN with) (NP (NNS continuations))) (, ,) (PP (IN at) (NP (NP (DT some) (NN cost)) (PP (TO to) (NP (NN abstraction))))))))))))))) (. .))
(S (ADVP (RB Apart) (PP (IN from) (S (VP (VBG providing) (NP (NP (DT a) (JJ fresh) (NN solution)) (PP (TO to) (NP (DT an) (JJ old) (NN problem)))))))) (, ,) (NP (DT this) (NN work)) (VP (VBZ provides) (NP (NP (DT an) (JJ accessible) (NN setting)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (VP (TO to) (VP (VB introduce) (NP (NP (NP (DT the) (NN use)) (PP (IN of) (NP (JJ proof-relevant) (JJ logical) (NNS relations)))) (, ,) (ADJP (JJ free) (PP (IN of) (NP (NP (DT the) (JJ additional) (NNS complexities)) (VP (VBN associated) (PP (IN with) (NP (NP (PRP$ their) (NN use)) (PP (IN for) (NP (ADJP (RBR more) (JJ sophisticated)) (NNS languages)))))))))))))))) (. .))
