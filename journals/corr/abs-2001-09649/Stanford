(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT an) (ADJP (RB operationally) (HYPH -) (VBN based)) (JJ deductive) (NN proof) (NN method)) (PP (IN for) (NP (NN program) (NN equivalence))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (S (VP (VBG encoding) (NP (DT the) (NN language) (NNS semantics)) (PP (IN as) (NP (NP (NP (ADJP (ADVP (RB logically)) (VBN constrained)) (NN term) (VBG rewriting) (NNS systems)) (-LRB- -LRB-) (NP (NNS LCTRSs)) (-RRB- -RRB-)) (CC and) (NP (NP (DT the) (CD two) (NNS programs)) (PP (IN as) (NP (NNS terms))))))))))) (. .))
(S (NP (NP (DT The) (JJ main) (NN feature)) (PP (IN of) (NP (PRP$ our) (NN method)))) (VP (VBZ is) (NP (PRP$ its) (NN flexibility))) (. .))
(S (NP (PRP We)) (VP (VBP illustrate) (NP (NP (DT this) (NN flexibility)) (PP (IN in) (NP (NP (CD two) (NNS applications)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (ADJP (JJ novel))))))))) (. .))
(S (PP (IN For) (NP (DT the) (JJ first) (NN application))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB encode) (NP (NP (NML (JJ low) (HYPH -) (NN level)) (NNS details)) (PP (JJ such) (IN as) (NP (NP (NN stack) (NN size)) (PP (IN in) (NP (DT the) (NN language) (NNS semantics)))))))))) (CC and) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB prove) (NP (NP (NN equivalence)) (PP (IN between) (NP (NP (CD two) (NNS programs)) (VP (VBG operating) (PP (IN at) (NP (NP (JJ different) (NNS levels)) (PP (IN of) (NP (NN abstraction))))))))))))))) (. .))
(S (PP (IN For) (NP (PRP$ our) (VBG running) (NN example))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (NP (PRP$ our) (NN method)) (VP (MD can) (VP (VB prove) (NP (NP (NN equivalence)) (PP (IN between) (NP (NP (DT a) (JJ recursive) (NN function)) (VP (VBG operating) (PP (IN with) (NP (NP (DT an) (ADJP (JJ unbounded)) (NN stack)) (CC and) (NP (NP (PRP$ its) (ADJP (NP (NN tail) (HYPH -) (JJ recursive)) (VBN optimized)) (NN version)) (VP (VBG operating) (PP (IN with) (NP (DT a) (VBN bounded) (NN stack)))))))))))))))) (. .))
(S (NP (NP (DT This) (NN type)) (PP (IN of) (NP (NN equivalence) (NN checking)))) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB ensure) (SBAR (IN that) (S (NP (NP (JJ new)) (, ,) (NP (JJ undesirable) (NN behavior))) (VP (VBZ is) (RB not) (VP (VBN introduced) (PP (IN by) (NP (NP (DT a) (ADJP (RBR more) (JJ concrete)) (NN level)) (PP (IN of) (NP (NN abstraction))))))))))))))) (. .))
(S (PP (IN For) (NP (DT the) (JJ second) (NN application))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VP (VB formalize) (VP (VBN read) (HYPH -) (NP (NNS sets)))) (CC and) (VP (VB write) (HYPH -) (NP (NNS sets)) (PP (IN of) (NP (JJ symbolic) (NNS expressions) (CC and) (NNS statements))) (PP (IN by) (S (VP (VBG extending) (NP (NP (DT the) (JJ operational) (NNS semantics)) (PP (IN in) (NP (DT a) (JJ conservative) (NN way))))))))))))) (. .))
(S (NP (DT This)) (VP (VBZ enables) (NP (NP (DT the) (JJ relational) (NN verification)) (PP (IN of) (NP (NP (NN program) (NNS schemas)) (, ,) (SBAR (WHNP (WDT which)) (S (NP (PRP we)) (VP (VBP exploit) (S (VP (TO to) (VP (VB prove) (NP (NP (NN correctness)) (PP (IN of) (NP (NP (NN compiler) (NNS optimizations)) (, ,) (SBAR (WHNP (NP (DT some)) (WHPP (IN of) (WHNP (WDT which)))) (S (VP (MD can) (RB not) (VP (VB be) (VP (VBN proven) (PP (IN by) (NP (VBG existing) (NNS tools))))))))))))))))))))) (. .))
(S (NP (PRP$ Our) (NN method)) (VP (VBZ requires) (NP (NP (DT an) (NN extension)) (PP (IN of) (NP (NP (JJ standard) (NNPS LCTRSs)) (PP (IN with) (NP (VBN axiomatized) (NNS symbols))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP present) (NP (NP (DT a) (NN prototype) (NN implementation)) (SBAR (WHNP (WDT that)) (S (VP (VBZ proves) (NP (NP (DT the) (NN feasibility)) (PP (IN of) (NP (NP (DT both) (NNS applications)) (SBAR (WHNP (WDT that)) (S (NP (PRP we)) (VP (VBP propose)))))))))))) (. .))
