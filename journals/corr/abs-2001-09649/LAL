(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT an) (JJ operationally-based) (JJ deductive) (NN proof) (NN method)) (PP (IN for) (NP (NN program) (NN equivalence))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (S (VP (VP (VBG encoding) (NP (DT the) (NN language) (NNS semantics)) (PP (IN as) (NP (NP (ADJP (RB logically) (JJ constrained)) (NN term) (VBG rewriting) (NNS systems)) (PRN (-LRB- -LRB-) (NP (NNP LCTRSs)) (-RRB- -RRB-))))) (CC and) (VP (NP (DT the) (CD two) (NNS programs)) (PP (IN as) (NP (NNS terms))))))))) (. .))
(S (NP (NP (DT The) (JJ main) (NN feature)) (PP (IN of) (NP (PRP$ our) (NN method)))) (VP (VBZ is) (NP (PRP$ its) (NN flexibility))) (. .))
(S (NP (PRP We)) (VP (VBP illustrate) (NP (DT this) (NN flexibility)) (PP (IN in) (NP (NP (CD two) (NNS applications)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (ADJP (JJ novel)))))))) (. .))
(S (PP (IN For) (NP (DT the) (JJ first) (NN application))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB encode) (NP (NP (JJ low-level) (NNS details)) (PP (JJ such) (IN as) (NP (NN stack) (NN size)))) (PP (IN in) (NP (DT the) (NN language) (NNS semantics))))))) (CC and) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB prove) (NP (NP (NN equivalence)) (PP (IN between) (NP (NP (CD two) (NNS programs)) (VP (VBG operating) (PP (IN at) (NP (NP (JJ different) (NNS levels)) (PP (IN of) (NP (NN abstraction))))))))))))))) (. .))
(S (PP (IN For) (NP (PRP$ our) (VBG running) (NN example))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (NP (PRP$ our) (NN method)) (VP (MD can) (VP (VB prove) (NP (NP (NN equivalence)) (PP (IN between) (NP (NP (NP (DT a) (JJ recursive) (NN function)) (VP (VBG operating) (PP (IN with) (NP (DT an) (JJ unbounded) (NN stack))))) (CC and) (NP (NP (PRP$ its) (JJ tail-recursive) (JJ optimized) (NN version)) (VP (VBG operating) (PP (IN with) (NP (DT a) (JJ bounded) (NN stack))))))))))))) (. .))
(S (NP (NP (DT This) (NN type)) (PP (IN of) (NP (NN equivalence) (NN checking)))) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB ensure) (SBAR (DT that) (S (NP (JJ new) (, ,) (JJ undesirable) (NN behavior)) (VP (VBZ is) (RB not) (VP (VBN introduced) (PP (IN by) (NP (NP (DT a) (ADJP (RBR more) (JJ concrete)) (NN level)) (PP (IN of) (NP (NN abstraction))))))))))))))) (. .))
(S (PP (IN For) (NP (DT the) (JJ second) (NN application))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB formalize) (NP (NP (NNS read-sets) (CC and) (NNS write-sets)) (PP (IN of) (NP (JJ symbolic) (NNS expressions) (CC and) (NNS statements)))) (PP (IN by) (S (VP (VBG extending) (NP (DT the) (JJ operational) (NNS semantics)) (PP (IN in) (NP (DT a) (JJ conservative) (NN way))))))))))) (. .))
(S (NP (DT This)) (VP (VBZ enables) (NP (NP (DT the) (JJ relational) (NN verification)) (PP (IN of) (NP (NN program) (NN schemas))) (, ,) (SBAR (WHNP (WDT which)) (S (NP (PRP we)) (VP (VBP exploit) (S (VP (TO to) (VP (VB prove) (NP (NP (NN correctness)) (PP (IN of) (NP (NP (NN compiler) (NNS optimizations)) (, ,) (SBAR (WHNP (WHNP (DT some)) (WHPP (IN of) (WHNP (WDT which)))) (S (VP (MD can) (RB not) (VP (VB be) (VP (VBN proven) (PP (IN by) (NP (VBG existing) (NNS tools))))))))))))))))))) (. .))
(S (NP (PRP$ Our) (NN method)) (VP (VBZ requires) (NP (NP (DT an) (NN extension)) (PP (IN of) (NP (JJ standard) (NNP LCTRSs))) (PP (IN with) (NP (JJ axiomatized) (NNS symbols))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBD present) (NP (NP (DT a) (NN prototype) (NN implementation)) (SBAR (WHNP (WDT that)) (S (VP (VBZ proves) (NP (NP (DT the) (NN feasibility)) (PP (IN of) (NP (NP (DT both) (NNS applications)) (SBAR (WHNP (IN that)) (S (NP (PRP we)) (VP (VBP propose)))))))))))) (. .))
