(NP (NNP Context) (. .))
(S (NP (DT An) (NN extension) (NN method)) (VP (VBZ is) (NP (NP (DT a) (NN method)) (VP (VBN declared) (PP (IN in) (NP (NP (DT a) (NN package)) (ADJP (JJ other) (PP (IN than) (NP (NP (DT the) (NN package)) (PP (IN of) (NP (PRP$ its) (NN host) (NN class))))))))))) (. .))
(S (S (NP (NP (NNS Thanks)) (PP (TO to) (NP (VB extension) (NNS methods)))) (, ,) (NP (NNS developers)) (VP (MD can) (VP (VB adapt) (PP (TO to) (NP (PRP$ their) (NNS needs))) (NP (NP (NNS classes)) (SBAR (S (NP (PRP they)) (VP (VBP do) (RB not) (VP (VB own))))))))) (: :) (S (S (VP (VBG adding) (NP (NNS methods)) (PP (TO to) (NP (VB core) (NNS classes))))) (VP (VBZ is) (NP (DT a) (JJ typical) (NN use) (NN case)))) (. .))
(S (NP (DT This)) (VP (VBZ is) (ADJP (RB particularly) (JJ useful) (UCP (PP (IN for) (S (VP (VBG adapting) (NP (NN software))))) (CC and) (ADVP (NN therefore)) (S (VP (TO to) (VP (VB increase) (NP (NN reusability)))))))) (. .))
(NP (NNP Inquiry) (. .))
(S (PP (IN In) (NP (JJS most) (JJ dynamically-typed) (NNS languages))) (, ,) (NP (NN extension) (NNS methods)) (VP (VBP are) (ADJP (RB globally) (JJ visible))) (. .))
(S (S (SBAR (IN Because) (S (NP (DT any) (NN developer)) (VP (MD can) (VP (VB define) (NP (NN extension) (NNS methods)) (PP (IN for) (NP (DT any) (NN class))))))) (, ,) (NP (VBG naming) (NNS conflicts)) (VP (VBP occur))) (: :) (S (SBAR (IN if) (S (NP (CD two) (NNS developers)) (VP (VBP define) (NP (NP (DT an) (NN extension) (NN method)) (PP (IN with) (NP (DT the) (JJ same) (NN signature)))) (PP (IN in) (NP (DT the) (JJ same) (NN class)))))) (, ,) (NP (RB only) (CD one) (NN extension) (NN method)) (VP (VP (VBZ is) (ADJP (JJ visible))) (CC and) (VP (VBZ overwrites) (NP (DT the) (JJ other))))) (. .))
(S (ADVP (RB Similarly)) (, ,) (SBAR (IN if) (S (NP (CD two) (NNS developers)) (DT each) (VP (NN define) (NP (NP (DT an) (NN extension) (NN method)) (PP (IN with) (NP (DT the) (JJ same) (NN name)))) (PP (IN in) (NP (DT a) (NN class) (NN hierarchy)))))) (, ,) (NP (CD one)) (VP (VBZ overrides) (NP (DT the) (JJ other))) (. .))
(S (S (VP (TO To) (VP (VB avoid) (NP (JJ such) (`` ``) (JJ accidental) (NNS overrides) ('' ''))))) (, ,) (NP (DT some) (JJ dynamically-typed) (NNS languages)) (VP (VBP limit) (NP (NP (DT the) (NN visibility)) (PP (IN of) (NP (DT an) (NN extension) (NN method)))) (PP (TO to) (NP (DT a) (JJ particular) (NN scope)))) (. .))
(S (ADVP (RB However)) (, ,) (NP (PRP$ their) (NNS semantics)) (VP (VBP have) (RB not) (VP (VBN been) (VP (ADVP (RB fully)) (VBN described) (CC and) (VBN compared)))) (. .))
(S (PP (IN In) (NP (NN addition))) (, ,) (NP (DT these) (NNS solutions)) (ADVP (RB typically)) (VP (VBP rely) (PP (IN on) (NP (DT a) (ADJP (VBN dedicated) (CC and) (JJ slow)) (NN method) (NN lookup) (NN algorithm))) (S (VP (TO to) (VP (VB resolve) (NP (NNS conflicts)) (PP (IN at) (NP (NN runtime))))))) (. .))
(NP (NN Approach) (. .))
(S (PP (IN In) (NP (DT this) (NN article))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT a) (NN formalization)) (PP (IN of) (NP (NP (DT the) (JJ underlying) (NNS models)) (PP (IN of) (NP (NP (NNP Ruby) (NNS refinements)) (, ,) (NP (NNP Groovy) (NNS categories)) (, ,) (NP (NNP Classboxes)) (, ,) (CC and) (NP (NNP Method) (NNP Shelters)))) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (VP (VBG scoping) (NP (NP (NN extension) (NN method) (NNS solutions)) (PP (IN in) (NP (JJ dynamically-typed) (NNS languages)))))))))))) (. .))
(NP (NNP Knowledge) (. .))
(S (NP (PRP$ Our) (JJ formal) (NN framework)) (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (VP (ADVP (RB objectively)) (VB compare) (CC and) (VB analyze) (NP (NP (DT the) (NNS shortcomings)) (PP (IN of) (NP (NP (DT the) (JJ studied) (NNS solutions)) (CC and) (NP (NP (JJ other) (JJ different) (NNS approaches)) (PP (JJ such) (IN as) (NP (NNP MultiJava))))))))))) (. .))
(S (PP (IN In) (NP (NN addition))) (, ,) (NP (NN language) (NNS designers)) (VP (MD can) (VP (VB use) (NP (PRP$ our) (JJ formal) (NN framework)) (S (VP (TO to) (VP (VB determine) (SBAR (WHNP (WDT which) (NN mechanism)) (S (VP (VBZ has) (NP (NP (JJR less) (NN risk)) (PP (IN of) (`` ``) (NP (JJ accidental) (NNS overrides)) ('' ''))))))))))) (. .))
(NP (VBG Grounding) (. .))
(S (NP (NP (PRP$ Our) (NN comparison) (CC and) (NN analysis)) (PP (IN of) (NP (VBG existing) (NNS solutions)))) (VP (VBZ is) (VP (VBN grounded) (SBAR (IN because) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (JJ denotational) (NNS semantics) (NNS formalizations))))))))) (. .))
(NP (NN Importance) (. .))
(S (NP (NN Extension) (NNS methods)) (VP (VBP are) (VP (ADVP (RB widely)) (VBN used) (PP (IN in) (NP (NP (NP (VBG programming) (NNS languages)) (SBAR (WHNP (WDT that)) (S (VP (VBP support) (NP (PRP them)))))) (, ,) (RB especially) (NP (NP (JJ dynamically-typed) (NNS languages)) (PP (JJ such) (IN as) (NP (NNP Pharo) (, ,) (NNP Ruby) (CC or) (NNP Python)))))))) (. .))
(S (ADVP (RB However)) (, ,) (PP (IN without) (NP (DT a) (ADJP (RB carefully) (VBN designed)) (NN mechanism))) (, ,) (NP (DT this) (NN feature)) (VP (VP (MD can) (VP (VB cause) (NP (JJ insidious) (JJ hidden) (NNS bugs)))) (CC or) (VP (MD can) (VP (VB be) (VP (ADVP (RB voluntarily)) (VBN used) (S (VP (TO to) (VP (VP (VB gain) (NP (NP (NN access)) (PP (TO to) (NP (VBN protected) (NNS operations))))) (, ,) (VP (JJ violate) (NP (NN encapsulation))) (CC or) (VP (VB break) (NP (JJ fundamental) (NNS invariants)))))))))) (. .))
