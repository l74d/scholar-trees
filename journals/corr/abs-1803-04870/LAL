(S (NP (NP (PRP It))) (VP (VBZ is) (NP (NP (DT a) (JJ neat) (NN result)) (PP (IN from) (NP (JJ functional) (NN programming)))) (SBAR (IN that) (S (NP (NP (NNS libraries)) (PP (IN of) (NP (NN parser) (NNS combinators)))) (VP (MD can) (VP (VB support) (NP (NP (JJ rapid) (NN construction)) (PP (IN of) (NP (NP (NNS decoders)) (PP (IN for) (NP (NP (RB quite) (DT a) (NN range)) (PP (IN of) (NP (NNS formats))))))))))))) (. .))
(S (PP (IN With) (NP (ADJP (NP (DT a) (JJ little)) (JJR more)) (NN work))) (, ,) (NP (DT the) (JJ same) (NN combinator) (NN program)) (VP (MD can) (VP (VB denote) (NP (DT both) (NP (DT a) (NN decoder)) (CC and) (NP (DT an) (NN encoder))))) (. .))
(S (ADVP (RB Unfortunately)) (, ,) (NP (DT the) (JJ real) (NN world)) (VP (VBZ is) (ADJP (JJ full) (PP (IN of) (NP (JJ gnarly) (NNS formats)))) (, ,) (PP (IN as) (PP (IN with) (NP (NP (DT the) (NN packet) (VBZ formats)) (SBAR (WHNP (WDT that)) (S (VP (VBP make) (PRT (RP up)) (NP (DT the) (JJ standard) (NNP Internet) (NN protocol) (NN stack))))))))) (. .))
(S (S (NP (JJS Most) (JJ past) (NN parser-combinator) (NNS approaches)) (VP (MD can) (RB not) (VP (VB handle) (NP (DT these) (NNS formats))))) (, ,) (CC and) (S (S (NP (DT the) (JJ few) (NNS exceptions)) (VBP require) (NP (NN redundancy))) (: â€”) (S (NP (NP (CD one) (NN part)) (PP (IN of) (NP (DT the) (JJ natural) (NN grammar)))) (VP (NNS needs) (S (VP (TO to) (VP (VB be) (VP (JJ hand-translated) (PP (IN into) (NP (NP (NNS hints)) (PP (IN in) (NP (NP (JJ multiple) (NNS parts)) (PP (IN of) (NP (DT a) (NN parser) (NN program)))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB recover) (NP (ADJP (RB very) (JJ natural) (CC and) (JJ nonredundant)) (NN format) (NNS specifications)) (, ,) (S (VP (VP (VBG covering) (NP (DT all) (JJ popular) (NN network) (NN packet) (NNS formats))) (CC and) (VP (VBG generating) (NP (DT both) (NNS decoders) (CC and) (NNS encoders)) (ADVP (RB automatically)))))))))) (. .))
(S (NP (DT The) (NN catch)) (VP (VBZ is) (SBAR (IN that) (S (NP (PRP we)) (VP (VBP use) (NP (DT the) (NNP Coq) (NN proof) (NN assistant)) (S (VP (TO to) (VP (VB derive) (NP (NP (DT both) (NNS kinds)) (PP (IN of) (NP (NNS artifacts)))) (S (VP (VBG using) (NP (NNS tactics)) (, ,) (ADVP (RB automatically)) (, ,) (PP (IN in) (NP (NP (DT a) (NN way)) (SBAR (WHNP (WDT that)) (S (VP (VBZ guarantees) (SBAR (IN that) (S (NP (PRP they)) (VP (VBP form) (NP (NP (NNS inverses)) (PP (IN of) (NP (DT each) (JJ other))))))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBD used) (NP (PRP$ our) (NN approach)) (S (VP (TO to) (VP (VB reimplement) (NP (NN packet) (NN processing)) (PP (IN for) (NP (DT a) (JJ full) (NNP Internet) (NN protocol) (NN stack)))))) (, ,) (S (VP (VBG inserting) (NP (PRP$ our) (NN replacement)) (PP (IN into) (NP (DT the) (JJ OCaml-based) (NNP MirageOS) (NN unikernel))))) (, ,) (S (VP (VBG resulting) (PP (IN in) (NP (JJ minimal) (NN performance) (NN degradation)))))) (. .))
