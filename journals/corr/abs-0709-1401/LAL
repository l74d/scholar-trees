(S (S (NP (NNP Ulrich) (NNP Berger)) (VP (VBD presented) (NP (NP (DT a) (JJ powerful) (NN proof)) (PP (IN of) (NP (NP (JJ strong) (NN normalisation)) (VP (VBG using) (NP (NNS domains)))))))) (, ,) (S (PP (IN in) (NP (JJ particular))) (NP (PRP it)) (VP (VBZ simplifies) (ADVP (RB significantly)) (NP (NP (NP (NNP Tait) (POS 's)) (NN proof)) (PP (IN of) (NP (NP (JJ strong) (NN normalisation)) (PP (IN of) (NP (NP (NNP Spector) (POS 's)) (NN bar) (NN recursion)))))))) (. .))
(S (NP (NP (DT The) (JJ main) (NN contribution)) (PP (IN of) (NP (DT this) (NN paper)))) (VP (VBZ is) (S (VP (TO to) (VP (VB show) (SBAR (IN that) (, ,) (S (S (VP (VBG using) (NP (NP (NNS ideas)) (PP (IN from) (NP (NP (NN intersection) (NNS types)) (CC and) (NP (NP (NP (NNP Martin-Lof) (POS 's)) (NN domain) (NN interpretation)) (PP (IN of) (NP (NN type) (NN theory))))))))) (NP (CD one)) (VP (MD can) (PP (IN in) (NP (VB turn))) (VP (JJ simplify) (ADVP (JJ further)) (NP (NP (NNP U.) (NNP Berger) (POS 's)) (NN argument)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP build) (NP (NP (NP (DT a) (NN domain) (NN model)) (PP (IN for) (NP (DT an) (JJ untyped) (NN programming) (NN language)))) (SBAR (WHADVP (WRB where)) (S (NP (NNP U.) (NNP Berger)) (VP (VP (VBZ has) (NP (NP (DT an) (NN interpretation)) (PP (ADVP (RB only)) (IN for) (NP (JJ typed) (NNS terms))))) (CC or) (VP (ADVP (RB alternatively)) (VBZ has) (NP (NP (DT an) (NN interpretation)) (PP (IN for) (NP (JJ untyped) (NNS terms))))) (CC but) (VP (VBP need) (NP (DT an) (JJ extra) (NN condition)) (S (VP (TO to) (VP (VB deduce) (NP (JJ strong) (NN normalisation))))))))))) (. .))
