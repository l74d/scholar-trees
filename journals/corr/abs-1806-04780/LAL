(S (NP (NP (JJ Non-volatile) (NN memory)) (PRN (-LRB- -LRB-) (NP (NNP NVM)) (-RRB- -RRB-))) (VP (VBZ promises) (NP (NP (JJ persistent) (JJ main) (NN memory)) (SBAR (WHNP (WDT that)) (S (VP (VBZ remains) (ADJP (JJ correct)) (PP (IN despite) (NP (NP (NN loss)) (PP (IN of) (NP (NN power)))))))))) (. .))
(S (NP (DT This)) (VP (VBZ has) (VP (VBN sparked) (NP (NP (DT a) (NN line)) (PP (IN of) (NP (NP (NN research)) (PP (IN into) (NP (NP (NN algorithms)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB recover) (PP (IN from) (NP (DT a) (NN system) (NN crash)))))))))))))) (. .))
(S (SBAR (IN Since) (S (NP (NNS caches)) (VP (VBP are) (VP (VBN expected) (S (VP (TO to) (VP (VB remain) (ADJP (JJ volatile))))))))) (, ,) (NP (JJ concurrent) (NN data) (NNS structures) (CC and) (VB algorithms)) (VP (MD must) (VP (VB be) (VP (VBN redesigned) (S (VP (TO to) (VP (VB guarantee) (SBAR (SBAR (IN that) (S (NP (PRP they)) (VP (VBP are) (VP (VBN left) (PP (IN in) (NP (DT a) (JJ consistent) (NN state))) (PP (IN after) (NP (DT a) (NN system) (NN crash))))))) (, ,) (CC and) (SBAR (IN that) (S (NP (DT the) (NN execution)) (VP (MD can) (VP (VB be) (VP (VBN continued) (PP (JJ upon) (NP (NN recovery))))))))))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NP (DT the) (NN prospect)) (PP (IN of) (S (VP (VBG redesigning) (NP (DT every) (NN concurrent) (NNS data) (NN structure) (CC or) (NN algorithm)) (SBAR (IN before) (S (NP (PRP it)) (VP (MD can) (VP (VB be) (VP (VBN used) (PP (IN in) (NP (NNP NVM) (NNS architectures)))))))))))) (VP (VBZ is) (ADJP (VBG daunting))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT a) (NN construction)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBZ takes) (NP (NP (DT any) (JJ concurrent) (NN program)) (PP (IN with) (NP (NP (NNS reads) (, ,) (NNS writes) (CC and) (NNP CASs)) (PP (TO to) (NP (VB shared) (NN memory))))))) (CC and) (VP (VBZ makes) (S (S (NP (PRP it)) (ADJP (JJ persistent))) (, ,) (FW i.e.) (, ,) (S (VP (MD can) (VP (VB be) (VP (VBN continued) (SBAR (IN after) (S (NP (CD one) (CC or) (JJR more) (NNS processes)) (VP (VP (NN fault)) (CC and) (VP (VBP have) (S (VP (TO to) (VP (VB restart))))))))))))))))))) (. .))
(S (ADVP (RB Importantly)) (NP (DT the) (VBN converted) (NN algorithm)) (VP (VBZ has) (NP (NP (NP (JJ constant) (JJ computational) (NN delay)) (PRN (-LRB- -LRB-) (S (VP (VBZ preserves) (NP (NP (NN instruction) (NNS counts)) (PP (IN on) (NP (DT each) (NN process)))) (PP (IN within) (NP (DT a) (JJ constant) (NN factor))))) (-RRB- -RRB-))) (, ,) (CONJP (RB as) (RB well) (IN as)) (NP (NP (JJ constant) (NN recovery) (NN delay)) (PRN (-LRB- -LRB-) (S (NP (DT a) (NN process)) (VP (MD can) (VP (VB recover) (PP (IN from) (NP (DT a) (NN fault))) (PP (IN in) (NP (NP (DT a) (JJ constant) (NN number)) (PP (IN of) (NP (NNS instructions)))))))) (-RRB- -RRB-))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP show) (NP (DT this)) (ADVP (JJ first)) (PP (IN for) (NP (DT a) (JJ simple) (NN transformation)))) (, ,) (CC and) (VP (ADVP (RB then)) (JJ present) (NP (NP (NNS optimizations)) (SBAR (S (VP (TO to) (VP (VB make) (S (NP (PRP it)) (ADJP (RBR more) (JJ practical))) (, ,) (S (VP (VBG allowing) (PP (IN for) (NP (NP (DT a) (NN tradeoff)) (PP (PP (IN for) (NP (NP (JJR better) (JJ constant) (NNS factors)) (PP (IN in) (NP (JJ computational) (NN delay))))) (, ,) (PP (IN for) (NP (ADJP (RB sometimes) (JJ increased)) (NN recovery) (NN delay))))))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP provide) (NP (NP (DT an) (JJ optimized) (NN transformation)) (SBAR (WHNP (WDT that)) (S (VP (VBZ works) (PP (IN for) (NP (DT any) (JJ normalized) (JJ lock-free) (NN data) (NN structure))))))) (, ,) (S (ADVP (RB thus)) (VP (VBG allowing) (NP (ADJP (RBR more) (JJ efficient)) (NNS constructions)) (PP (IN for) (NP (NP (DT a) (JJ large) (NN class)) (PP (IN of) (NP (JJ concurrent) (NN algorithms)))))))) (. .))
(S (NP (PRP We)) (VP (ADVP (RB experimentally)) (VB evaluate) (NP (PRP$ our) (NNS transformations)) (PP (IN by) (S (VP (VBG applying) (NP (PRP them)) (PP (TO to) (NP (DT a) (NN queue))))))) (. .))
