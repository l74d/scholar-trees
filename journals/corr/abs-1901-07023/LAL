(S (NP (ADJP (RB Totally) (JJ self-checking)) (PRN (-LRB- -LRB-) (NNP TSC) (-RRB- -RRB-)) (NNS circuits)) (VP (VBP are) (VP (VBN synthesised) (PP (IN with) (NP (NP (DT a) (NN grid)) (PP (IN of) (NP (NP (NNS computers)) (VP (VBG running) (NP (DT a) (VBN distributed) (NN population) (VBN based) (JJ stochastic) (NN optimisation) (NN algorithm))))))))) (. .))
(S (NP (DT The) (JJ presented) (NN method)) (VP (VBZ is) (NP (NP (DT the) (JJ first)) (SBAR (S (VP (TO to) (VP (ADVP (RB automatically)) (VB synthesise) (NP (NNP TSC) (NNS circuits)) (PP (IN from) (NP (JJ arbitrary) (NN logic)))))))) (SBAR (IN as) (S (NP (DT all) (JJ previous) (NNS methods)) (VP (VBP fail) (S (VP (TO to) (VP (VB guarantee) (SBAR (S (NP (DT the) (NN checker)) (VP (VBZ is) (VP (JJ self-testing) (PRN (-LRB- -LRB-) (NP (NNP ST)) (-RRB- -RRB-)) (PP (IN for) (NP (NP (NNS circuits)) (PP (IN with) (NP (JJ limited) (NN output) (NNS codespaces)))))))))))))))) (. .))
(S (NP (NP (DT The) (NNS circuits)) (VP (VBN synthesised) (PP (IN by) (NP (DT the) (VBN presented) (NN method))))) (VP (VBP have) (NP (NP (ADJP (RB significantly) (JJR lower)) (NN overhead)) (PP (IN than) (NP (DT the) (ADJP (RB previously) (VBN reported)) (JJS best))) (PP (IN for) (NP (NP (DT every) (CD one)) (PP (IN of) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (CD 11) (ADJP (RB frequently) (VBN used)) (NNS benchmarks))))))))) (. .))
(S (NP (NP (JJ Average) (JJ overhead)) (PP (IN across) (NP (DT the) (JJ entire) (NN set)))) (VP (VBZ is) (NP (NP (CD 23) (NN %)) (PP (IN of) (NP (NN duplication) (CC and) (NN comparison) (NN overhead)))) (, ,) (PP (VBN compared) (PP (IN with) (NP (NP (DT an) (NN average)) (PP (IN of) (NP (CD 69) (NN %))) (PP (IN for) (NP (NP (DT the) (JJ previous) (RBS best) (VBD reported) (NNS values)) (PP (IN across) (NP (DT the) (NN set))))))))) (. .))
(S (NP (NP (DT The) (NN methodology)) (VP (VBD presented))) (VP (VBZ represents) (NP (NP (DT a) (NN breakthrough)) (PP (IN in) (NP (NP (JJ concurrent) (NN error) (NN detection)) (PRN (-LRB- -LRB-) (NP (NNP CED)) (-RRB- -RRB-)))))) (. .))
(S (NP (NP (DT The) (ADJP (RB highly) (JJ efficient)) (, ,) (JJ novel) (NNS designs)) (VP (VBN produced))) (VP (VBP are) (VP (VBN tailored) (PP (TO to) (NP (NP (DT each) (NN circuit) (POS 's)) (NN function))) (, ,) (PP (RB rather) (IN than) (S (VP (VBG being) (VP (VBN constrained) (PP (IN by) (NP (DT a) (JJ particular) (NN modular) (NNP CED) (NN design) (NN methodology))))))))) (. .))
(S (NP (NNS Results)) (VP (VP (VBP are) (VP (JJ synthesised) (S (VP (VBG using) (NP (JJ two-input) (NNS gates)))))) (CC and) (VP (VBP are) (NP (NNP TSC)) (PP (IN with) (NP (NP (NN respect)) (PP (TO to) (NP (DT all) (NN gate) (NN input) (CC and) (NN output) (JJ stuck-at) (NNS faults))))))) (. .))
(S (NP (DT The) (NN method)) (VP (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB add) (NP (NNP CED)) (PP (IN with) (CC or) (IN without) (NP (NP (NNS modifications)) (PP (TO to) (NP (DT the) (JJ original) (NN logic))))))))))) (, ,) (CC and) (VP (MD can) (VP (VB be) (VP (VBN generalised) (PP (TO to) (NP (DT any) (NX (NX (NN implementation) (NN technology)) (CC and) (NX (NN fault) (NN model))))))))) (. .))
(S (NP (DT An) (NN example) (NN circuit)) (VP (VBZ is) (VP (VP (VBN analysed)) (CC and) (VP (ADVP (RB rigorously)) (VBN proven) (S (VP (TO to) (VP (VB be) (NP (NNP TSC)))))))) (. .))
