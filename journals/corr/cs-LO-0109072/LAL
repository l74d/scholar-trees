(S (NP (PRP We)) (VP (VBP address) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG complementing) (NP (NN higher-order) (NNS patterns)) (PP (IN without) (NP (NP (NNS repetitions)) (PP (IN of) (NP (JJ existential) (NNS variables)))))))))) (. .))
(S (ADVP (RB Differently) (PP (IN from) (NP (DT the) (JJ first-order) (NN case)))) (, ,) (NP (NP (DT the) (NN complement)) (PP (IN of) (NP (DT a) (NN pattern)))) (VP (MD can) (RB not) (, ,) (PP (IN in) (ADJP (JJ general))) (, ,) (VP (VB be) (VP (VBN described) (PP (PP (IN by) (NP (DT a) (NN pattern))) (, ,) (CC or) (ADVP (RB even)) (PP (IN by) (NP (NP (DT a) (JJ finite) (NN set)) (PP (IN of) (NP (NNS patterns))))))))) (. .))
(S (NP (PRP We)) (ADVP (VBP therefore)) (VP (VB generalize) (NP (DT the) (JJ simply-typed) (JJ lambda-calculus)) (S (VP (TO to) (VP (VB include) (NP (NP (DT an) (JJ internal) (NN notion)) (PP (IN of) (NP (JJ strict) (NN function))))))) (SBAR (IN so) (IN that) (S (NP (PRP we)) (VP (MD can) (VP (ADVP (RB directly)) (VB express) (SBAR (IN that) (S (NP (DT a) (NN term)) (VP (MD must) (VP (VB depend) (PP (IN on) (NP (DT a) (VBN given) (NN variable)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (DT that) (, ,) (S (PP (IN in) (NP (DT this) (ADJP (RBR more) (JJ expressive)) (NN calculus))) (, ,) (NP (NP (JJ finite) (NNS sets)) (PP (IN of) (NP (NP (NNS patterns)) (PP (IN without) (NP (VBN repeated) (NNS variables)))))) (VP (VBP are) (VP (VBN closed) (PP (IN under) (NP (NN complement) (CC and) (NN intersection)))))))) (. .))
(S (NP (PRP$ Our) (JJ principal) (NN application)) (VP (VBZ is) (NP (NP (DT the) (JJ transformational) (NN approach)) (PP (TO to) (NP (NN negation))) (PP (IN in) (NP (NN higher-order) (NN logic) (NNS programs))))) (. .))
