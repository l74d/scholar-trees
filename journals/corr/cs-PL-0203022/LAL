(S (SBAR (IN In) (NN order) (S (VP (TO to) (VP (VB improve) (NP (NN precision) (CC and) (NN efficiency)))))) (NP (VBG sharing) (NN analysis)) (VP (MD should) (VP (VB track) (NP (DT both) (NN freeness) (CC and) (NN linearity)))) (. .))
(S (S (NP (NP (DT The) (JJ abstract) (NN unification) (NN algorithms)) (PP (IN for) (NP (DT these) (VBN combined) (NNS domains)))) (VP (VBP are) (ADJP (JJ suboptimal)))) (, ,) (S (ADVP (RB hence)) (NP (EX there)) (VP (VBZ is) (NP (NP (NN scope)) (PP (IN for) (S (VP (VBG improving) (NP (NN precision)))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ proposes) (NP (NP (CD three) (NNS optimisations)) (PP (IN for) (S (VP (VBG tracing) (NP (VBG sharing))))) (PP (IN in) (NP (NP (NN combination)) (PP (IN with) (NP (NN freeness) (CC and) (NN linearity))))))) (. .))
(S (NP (NP (DT A) (JJ novel) (NN connection)) (PP (IN between) (NP (NP (NNS equations)) (CC and) (NP (VBG sharing) (NNS abstractions))))) (VP (VBZ is) (VP (VBN used) (S (VP (TO to) (VP (VB establish) (NP (NP (NN correctness)) (PP (IN of) (NP (DT these) (NNS optimisations)))) (PP (ADVP (RB even)) (IN in) (NP (NP (DT the) (NN presence)) (PP (IN of) (NP (JJ rational) (NNS trees)))))))))) (. .))
(S (NP (NP (DT A) (NN method)) (PP (IN for) (S (VP (VBG pruning) (NP (JJ intermediate) (VBG sharing) (NNS abstractions)) (S (VP (TO to) (VP (VB improve) (NP (NN efficiency))))))))) (VP (VBZ is) (ADVP (RB also)) (VP (VBN proposed))) (. .))
(S (S (NP (DT The) (NNS optimisations)) (VP (VBP are) (ADJP (JJ lightweight)))) (CC and) (ADVP (RB therefore)) (S (NP (NP (NP (DT some)) (, ,) (CONJP (IN if) (RB not)) (NP (DT all)) (, ,)) (PP (IN of) (NP (DT these) (NNS optimisations)))) (VP (MD will) (VP (VB be) (PP (IN of) (NP (NP (NN interest)) (PP (TO to) (NP (DT the) (NN implementor)))))))) (. .))
