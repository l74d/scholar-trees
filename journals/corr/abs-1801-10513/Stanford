(S (NP (NNP Elfe)) (VP (VBZ is) (NP (NP (DT an) (JJ interactive) (NN system)) (PP (IN for) (S (VP (VBG teaching) (NP (JJ basic) (NN proof) (NNS methods)) (PP (IN in) (NP (JJ discrete) (NNS mathematics)))))))) (. .))
(S (NP (NP (DT The) (NN user) (NNS inputs)) (NP (DT a) (JJ mathematical) (NN text))) (VP (VBN written) (PP (IN in) (NP (NP (JJ fair) (NNP English)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN converted) (PP (IN to) (NP (NP (DT a) (JJ special) (NN data) (HYPH -) (NN structure)) (PP (IN of) (NP (NML (JJ first) (HYPH -) (NN order)) (NNS formulas)))))))))))) (. .))
(S (NP (NP (JJ Certain) (NN proof) (NNS obligations)) (VP (VBN implied) (PP (IN by) (NP (DT this) (JJ intermediate) (NN representation))))) (VP (VBP are) (VP (VBN checked) (PP (IN by) (NP (NP (VBN automated) (NN theorem) (NNS provers)) (SBAR (WHNP (WDT which)) (S (VP (VBP try) (S (VP (TO to) (VP (CC either) (VP (VB prove) (NP (DT the) (NNS obligations))) (CC or) (VP (VB find) (NP (NNS countermodels)) (SBAR (IN if) (S (NP (DT an) (NN obligation)) (VP (VBZ is) (ADJP (JJ wrong)))))))))))))))) (. .))
(S (NP (NP (DT The) (NN result)) (PP (IN of) (NP (DT the) (NN verification) (NN process)))) (VP (VBZ is) (ADVP (RB then)) (VP (VBN returned) (PP (IN to) (NP (DT the) (NN user))))) (. .))
(S (NP (NNP Elfe)) (VP (VP (VBZ is) (VP (VBN implemented) (PP (IN in) (NP (NNP Haskell))))) (CC and) (VP (MD can) (VP (VB be) (VP (VBN accessed) (PP (PP (IN via) (NP (DT a) (JJ reactive) (NN web) (NN interface))) (CC or) (PP (IN from) (NP (DT the) (NN command) (NN line)))))))) (. .))
(S (NP (NP (NN Background) (NNS libraries)) (PP (IN for) (NP (NNS sets) (, ,) (NNS relations) (CC and) (NNS functions)))) (VP (VBP have) (VP (VBN been) (VP (VBN developed)))) (. .))
(S (NP (PRP It)) (VP (VBZ has) (VP (VBN been) (VP (VBN tested) (PP (IN by) (NP (NP (NNS students)) (PP (IN in) (NP (NP (DT the) (NN beginning)) (PP (IN of) (NP (PRP$ their) (JJ mathematical) (NNS studies)))))))))) (. .))
