(S (S (VP (VBG Using) (NP (ADJP (NP (JJ standard) (NN domain)) (HYPH -) (JJ theoretic)) (VBN fixed) (HYPH -) (NNS points)))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (DT an) (NN approach)) (PP (IN for) (S (VP (VBG defining) (NP (NP (JJ recursive) (NNS functions)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (VP (VBN formulated) (PP (IN in) (NP (JJ monadic) (NN style)))))))))))) (. .))
(S (NP (DT The) (NN method)) (VP (VBZ works) (PP (CC both) (IN in) (NP (NP (DT the) (JJ simple) (NN option) (NN monad)) (CC and) (NP (DT the) (NN state) (HYPH -) (NN exception)))) (NP (NP (NN monad)) (PP (IN of) (NP (NP (NP (NNP Isabelle) (HYPH /) (NNP HOL) (POS 's)) (ADJP (JJ imperative)) (NN programming) (NN extension)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ results) (PP (IN in) (NP (NP (DT a) (JJ convenient) (NN definition) (NN principle)) (PP (IN for) (NP (NP (ADJP (JJ imperative)) (NNS programs)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBD were) (ADJP (RB previously) (JJ hard) (S (VP (TO to) (VP (VB define))))))))))))))))))) (. .))
(S (PP (IN For) (NP (JJ such) (JJ monadic) (NNS functions))) (, ,) (NP (DT the) (NN recursion) (NN equation)) (VP (MD can) (ADVP (RB always)) (VP (VB be) (VP (VBN derived) (PP (IN without) (NP (NNS preconditions))) (, ,) (SBAR (RB even) (IN if) (S (NP (DT the) (NN function)) (VP (VBZ is) (ADJP (JJ partial)))))))) (. .))
(S (S (NP (DT The) (NN construction)) (VP (VBZ is) (ADJP (JJ easy) (S (VP (TO to) (VP (VB automate))))))) (, ,) (CC and) (S (NP (JJ convenient) (NN induction) (NNS principles)) (VP (MD can) (VP (VB be) (VP (VBN derived) (ADVP (RB automatically)))))) (. .))
