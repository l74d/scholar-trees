(S (NP (NN HipMCL)) (VP (VP (VBZ is) (NP (NP (DT a) (NML (JJ high) (HYPH -) (NN performance))) (VP (VBN distributed) (NP (NP (NN memory) (NN implementation)) (PP (IN of) (NP (DT the) (JJ popular) (NNP Markov) (NNP Cluster) (NNP Algorithm)))) (PRN (-LRB- -LRB-) (NP (NN MCL)) (-RRB- -RRB-))))) (CC and) (VP (MD can) (VP (VB cluster) (NP (NML (JJ large) (HYPH -) (NN scale)) (NNS networks)) (PP (IN within) (NP (NP (NNS hours)) (VP (VBG using) (NP (ADJP (NP (QP (DT a) (JJ few) (CD thousand)) (NN CPU)) (HYPH -) (VBN equipped)) (NNS nodes)))))))) (. .))
(S (NP (PRP It)) (VP (VP (VBZ relies) (PP (IN on) (NP (JJ sparse) (NN matrix) (NNS computations)))) (CC and) (ADVP (RB heavily)) (VP (VBZ makes) (NP (NP (NN use)) (PP (IN of) (NP (DT the) (JJ sparse) (ADJP (NN matrix) (HYPH -) (JJ sparse)) (NML (NN matrix) (NN multiplication)) (NN kernel) (PRN (-LRB- -LRB-) (NP (NN SpGEMM)) (-RRB- -RRB-))))))) (. .))
(S (NP (NP (DT The) (VBG existing) (JJ parallel) (NNS algorithms)) (PP (IN in) (NP (NNP HipMCL)))) (VP (VBP are) (RB not) (ADJP (ADJP (JJ scalable) (PP (IN to) (NP (NP (NNP Exascale) (NNS architectures)) (, ,) (SBAR (WHNP (WHNP (DT both)) (PP (IN due) (PP (IN to) (NP (PRP$ their) (NN communication) (NNS costs))))) (S (VP (VBG dominating) (NP (DT the) (NN runtime)) (PP (IN at) (NP (JJ large) (NNS concurrencies))))))))) (CC and) (ADJP (ADVP (RB also)) (JJ due) (PP (IN to) (NP (PRP$ their) (NN inability) (S (VP (TO to) (VP (VB take) (NP (NP (NN advantage)) (PP (IN of) (NP (NP (NNS accelerators)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (RB increasingly) (JJ popular)))))))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN work))) (, ,) (NP (PRP we)) (ADVP (RB systematically)) (VP (VB remove) (NP (NP (NML (NN scalability) (CC and) (NN performance)) (NNS bottlenecks)) (PP (IN of) (NP (NNP HipMCL))))) (. .))
(S (NP (PRP We)) (VP (VBP enable) (NP (NNS GPUs)) (PP (IN by) (S (VP (VBG performing) (NP (NP (DT the) (JJ expensive) (NN expansion) (NN phase)) (PP (IN of) (NP (DT the) (NN MCL) (NN algorithm)))) (PP (IN on) (NP (NNP GPU))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP propose) (NP (DT a) (NN CPU) (HYPH -) (NN GPU)) (NP-TMP (NP (NP (JJ joint) (VBN distributed) (NN SpGEMM) (NN algorithm)) (VP (VBN called) (S (ADJP (JJ pipelined))))) (NP (JJ Sparse) (NN SUMMA)))) (CC and) (VP (VB integrate) (NP (NP (DT a) (ADJP (JJ probabilistic) (NN memory)) (NN requirement) (NN estimator)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (JJ fast) (CC and) (JJ accurate)))))))) (. .))
(S (NP (PRP We)) (VP (VBP develop) (NP (DT a) (JJ new) (VBG merging) (NN algorithm)) (PP (IN for) (NP (NP (DT the) (JJ incremental) (NN processing)) (PP (IN of) (NP (NP (JJ partial) (NNS results)) (VP (VBN produced) (PP (IN by) (NP (NP (DT the) (NNS GPUs)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ improves) (NP (NP (DT the) (NN overlap) (NN efficiency)) (CC and) (NP (DT the) (NN peak) (NN memory) (NN usage)))))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP integrate) (NP (NP (DT a) (JJ recent)) (CC and) (ADVP (RBR faster)) (NP (NN algorithm))) (PP (IN for) (S (VP (VBG performing) (NP (NNP SpGEMM)) (PP (IN on) (NP (NNS CPUs))))))) (. .))
(S (NP (PRP We)) (VP (VBP validate) (NP (PRP$ our) (JJ new) (NNS algorithms) (CC and) (NNS optimizations)) (PP (IN with) (NP (JJ extensive) (NNS evaluations)))) (. .))
(S (PP (IN With) (NP (NP (DT the) (VBG enabling)) (PP (IN of) (NP (NP (DT the) (NNS GPUs) (CC and) (NN integration)) (PP (IN of) (NP (JJ new) (NNS algorithms))))))) (, ,) (NP (NN HipMCL)) (VP (VBZ is) (ADVP (RB up) (PP (IN to) (NP (QP (CD 12.4) (SYM x))) (ADVP (RBR faster)))) (, ,) (S (VP (VBG being) (ADJP (JJ able) (S (VP (TO to) (VP (VB cluster) (NP (DT a) (NN network)) (PP (IN with) (NP (NP (QP (CD 70) (CD million)) (NN proteins)) (CC and) (NP (QP (CD 68) (CD billion)) (NNS connections)))) (PP (ADVP (RB just)) (IN under) (NP (NP (CD 15) (NNS minutes)) (VP (VBG using) (NP (NP (CD 1024) (NNS nodes)) (PP (IN of) (NP (NP (NNP ORNL) (POS 's)) (NNP Summit) (NN supercomputer)))))))))))))) (. .))
