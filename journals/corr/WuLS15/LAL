(S (SBAR (IN In) (NN order) (S (VP (TO to) (VP (VB improve) (NP (NN system) (NN performance)) (ADVP (RB efficiently)))))) (, ,) (NP (NP (DT a) (NN number)) (PP (IN of) (NP (NNS systems)))) (VP (VBP choose) (S (VP (TO to) (VP (VB equip) (NP (NP (NN multi-core) (CC and) (NN many-core) (NNS processors)) (PRN (-LRB- -LRB-) (PP (JJ such) (IN as) (NP (NNP GPUs))) (-RRB- -RRB-))))))) (. .))
(S (PP (JJ Due) (TO to) (NP (PRP$ their) (JJ discrete) (NN memory))) (NP (DT these) (JJ heterogeneous) (NNS architectures)) (VP (VBP comprise) (NP (NP (DT a) (JJ distributed) (NN system)) (PP (IN within) (NP (DT a) (NN computer))))) (. .))
(S (NP (DT A) (JJ data-flow) (NN programming) (NN model)) (VP (VBZ is) (ADJP (JJ attractive)) (PP (IN in) (NP (DT this) (NN setting))) (PP (IN for) (NP (NP (PRP$ its) (NN ease)) (PP (IN of) (S (VP (VBG expressing) (NP (NN concurrency)))))))) (. .))
(S (NP (NNS Programmers)) (ADVP (RB only)) (VP (VBP need) (S (VP (TO to) (VP (VB define) (NP (NN task) (NNS dependencies)) (PP (IN without) (S (VP (VBG considering) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB schedule) (NP (PRP them)) (PP (IN on) (NP (DT the) (NN hardware)))))))))))))) (. .))
(S (ADVP (RB However)) (, ,) (S (VP (VBG mapping) (NP (DT the) (VBG resulting) (NN task) (NN graph)) (PP (IN onto) (NP (NN hardware))) (ADVP (RB efficiently)))) (VP (VBZ remains) (NP (DT a) (NN challenge))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (NP (DT a) (NN graph-partition) (NN scheduling) (NN policy)) (PP (IN for) (S (VP (VBG mapping) (NP (JJ data-flow) (NNS workloads)) (PP (TO to) (NP (JJ heterogeneous) (NN hardware)))))))) (. .))
(S (PP (VBG According) (PP (TO to) (NP (PRP$ our) (NNS experiments)))) (, ,) (NP (PRP$ our) (JJ graph-partition-based) (NN scheduling)) (VP (NNS achieves) (NP (NP (JJ comparable) (NN performance)) (PP (TO to) (NP (JJ conventional) (JJ queue-base) (NNS approaches))))) (. .))
