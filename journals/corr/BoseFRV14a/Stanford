(S (VP (VB Let) (NP ($ $) (CD P$)) (VP (VB be) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (NP (NML (NML (NML ($ $)) (NN n)) (NML ($ $))) (NNS vertices)) (PP (IN in) (NP (DT the) (NN plane)))) (CC and) (NP (NP ($ $) (CD S$)) (NP (DT a) (NN set))))) (PP (IN of) (NP (NP (NP (JJ non-crossing) (NN line) (NNS segments)) (PP (IN between) (NP (NP (NNS vertices)) (PP (IN in) (NP ($ $) (CD P$)))))) (, ,) (VP (VBN called) (NP (NNS constraints)))))))) (. .))
(S (NP (CD Two) (NNS vertices)) (VP (VBP are) (ADJP (JJ visible) (SBAR (IN if) (S (NP (NP (DT the) (JJ straight) (NN line) (NN segment)) (VP (VBG connecting) (NP (PRP them)))) (VP (VBZ does) (RB not) (ADVP (RB properly)) (VP (VB intersect) (NP (DT any) (NNS constraints)))))))) (. .))
(S (NP (PRP$ Our) (NN routing) (NN algorithm)) (VP (VBZ guarantees) (SBAR (IN that) (S (NP (DT the) (VBN returned) (NN path)) (VP (VBZ is) (ADJP (CD 2) (HYPH -) (JJ competitive)))))) (. .))
(S (PP (IN To) (NP (NP (DT the) (JJS best)) (PP (IN of) (NP (PRP$ our) (NN knowledge))))) (, ,) (NP (DT these)) (VP (VBP are) (NP (NP (DT the) (JJ first) (JJ local) (NN routing) (NNS algorithms)) (PP (IN in) (NP (NP (DT the) (ADJP (VBN constrained)) (NN setting)) (PP (IN with) (NP (NP (NNS guarantees)) (PP (IN on) (NP (NP (DT the) (NN length)) (PP (IN of) (NP (DT the) (VBN returned) (NN path))))))))))) (. .))
