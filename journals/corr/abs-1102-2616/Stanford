(S (PP (IN In) (NP (NP (NN case)) (PP (IN of) (NP (JJ multiple) (NN node) (NNS failures))))) (NP (NN performance)) (VP (VBZ becomes) (ADJP (RB very) (JJ low) (PP (IN as) (S (VP (VB compare) (PP (IN to) (NP (JJ single) (NN node) (NN failure)))))))) (. .))
(S (NP (NP (NNS Failures)) (PP (IN of) (NP (NP (NNS nodes)) (PP (IN in) (NP (NN cluster) (NN computing)))))) (VP (MD can) (VP (VB be) (VP (VBN tolerated) (PP (IN by) (NP (ADJP (NP (JJ multiple) (NN fault)) (JJ tolerant)) (NN computing)))))) (. .))
(S (NP (VBG Existing) (NN recovery) (NNS schemes)) (VP (VBP are) (ADJP (JJ efficient) (PP (PP (IN for) (NP (JJ single) (NN fault))) (CONJP (CC but) (RB not)) (PP (IN with) (NP (JJ multiple) (NNS faults)))))) (. .))
(NP (NP (NP (NN Recovery) (NN scheme)) (VP (VBN proposed) (PP (IN in) (NP (NP (DT this) (NN paper)) (VP (VBG having) (NP (CD two) (NNS phases))))))) (: ;) (NP (NP (ADVP (RB sequentially)) (NN phase)) (, ,) (NP (JJ concurrent) (NN phase))) (. .))
(S (PP (IN In) (NP (ADVP (RB sequentially)) (NN phase))) (, ,) (NP (NP (NNS loads)) (PP (IN of) (NP (DT all) (VBG working) (NNS nodes)))) (VP (VBP are) (ADVP (RB uniformly) (CC and) (RB evenly)) (VP (VBN distributed) (PP (IN by) (NP (VBN proposed) (NML (NML (NML (JJ dynamic) (NN rank)) (VP (VBN based))) (CC and) (NML (NN load) (NN distribution))) (NN algorithm))))) (. .))
(S (PP (IN In) (NP (JJ concurrent) (NN phase))) (, ,) (NP (NP (NNS loads)) (PP (IN of) (NP (NP (DT all) (NN failure) (NNS nodes)) (CONJP (RB as) (RB well) (IN as)) (NP (JJ new) (NN job) (NN arrival))))) (VP (VBP are) (VP (VBN assigned) (ADVP (RB equally)) (PP (IN to) (NP (DT all) (JJ available) (NNS nodes))) (PP (IN by) (S (ADVP (RB just)) (VP (VBG finding) (NP (DT the) (ADJP (JJS least) (JJ loaded)) (NN node)) (PP (IN among) (NP (DT the) (JJ several) (NNS nodes))) (PP (IN by) (NP (NP (NN failure) (NNS nodes)) (NP (NN job) (NN allocation) (NN algorithm))))))))) (. .))
(S (NP (NP (ADJP (JJ Sequential) (CC and) (JJ concurrent)) (NNS executions)) (PP (IN of) (NP (NNS algorithms)))) (VP (VBP improve) (NP (NP (DT the) (NN performance)) (CONJP (RB as) (RB well)) (NP (JJR better) (NN resource) (NN utilization)))) (. .))
(S (NP (NP (JJ Dynamic) (NN rank)) (VP (VBN based) (NP (NN algorithm)) (PP (IN for) (NP (NN load) (NN redistribution))))) (VP (VBZ works) (SBAR (IN as) (S (NP (NP (DT a) (JJ sequential) (NN restoration) (NN algorithm)) (CC and) (NP (NP (NN reassignment) (NN algorithm)) (PP (IN for) (NP (NP (NN distribution)) (PP (IN of) (NP (NP (NN failure) (NNS nodes)) (PP (IN to) (NP (ADJP (JJS least) (JJ loaded)) (NN computing) (NNS nodes))))))))) (VP (VBZ works) (PP (IN as) (NP (DT a) (JJ concurrent) (NML (NN recovery) (NN reassignment)) (NN algorithm))))))) (. .))
(S (SBAR (IN Since) (S (NP (NN load)) (VP (VBZ is) (ADVP (RB evenly) (CC and) (RB uniformly)) (VP (VBN distributed) (PP (IN among) (NP (NP (DT all) (JJ available) (VBG working) (NNS nodes)) (PP (IN with) (NP (NP (JJR less) (NN number)) (PP (IN of) (NP (NP (NNS iterations)) (, ,) (NP (JJ low) (JJ iterative) (NN time)) (CC and) (NP (NN communication) (NNS overheads)))))))))))) (ADVP (RB hence)) (NP (NN performance)) (VP (VBZ is) (VP (VBN improved))) (. .))
(S (NP (JJ Dynamic) (NN ranking) (NN algorithm)) (VP (VBZ is) (ADJP (JJ low)) (ADVP (RB overhead)) (, ,) (NP (NP (JJ high) (NN convergence) (NN algorithm)) (PP (IN for) (NP (NP (NN reassignment)) (PP (IN of) (NP (NP (NNS tasks)) (ADVP (RB uniformly) (PP (IN among) (NP (DT all) (JJ available) (NNS nodes)))))))))) (. .))
(S (NP (NP (NNS Reassignments)) (PP (IN of) (NP (NN failure) (NNS nodes)))) (VP (VBP are) (VP (VBN done) (PP (IN by) (NP (DT a) (JJ low) (NN overhead) (JJ efficient) (NN failure) (NN job) (NN allocation) (NN algorithm))))) (. .))
(S (NP (NP (NN Test)) (SBAR (S (VP (VBZ results) (S (VP (TO to) (VP (VB show) (NP (NP (NN effectiveness)) (PP (IN of) (NP (DT the) (VBN proposed) (NN scheme))))))))))) (VP (VBP are) (VP (VBN presented))) (. .))
