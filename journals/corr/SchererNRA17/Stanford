(S (PP (RB Instead) (PP (IN of) (NP (NP (DT a) (JJ monolithic) (NN programming) (NN language)) (VP (VBG trying) (S (VP (TO to) (VP (VB cover) (NP (NP (DT all) (NNS features)) (PP (IN of) (NP (NN interest))))))))))) (, ,) (NP (DT some) (NN programming) (NNS systems)) (VP (VBP are) (VP (VBN designed) (PP (IN by) (S (VP (VBG combining) (ADVP (RB together)) (NP (NP (JJR simpler) (NNS languages)) (SBAR (WHNP (WDT that)) (S (VP (VBP cooperate) (S (VP (TO to) (VP (VB cover) (NP (DT the) (JJ same) (NN feature) (NN space)))))))))))))) (. .))
(S (S (NP (DT This)) (VP (MD can) (VP (VB improve) (NP (NN usability)) (PP (IN by) (S (VP (VBG making) (NP (DT each) (NN part) (JJR simpler)) (PP (IN than) (NP (DT the) (JJ whole))))))))) (, ,) (CC but) (S (NP (EX there)) (VP (VBZ is) (NP (NP (DT a) (NN risk)) (PP (IN of) (NP (NP (NN abstraction) (NNS leaks)) (PP (IN from) (NP (NP (CD one) (NN language)) (PP (IN to) (NP (NP (DT another)) (SBAR (WHNP (WDT that)) (S (VP (MD would) (VP (VB break) (S (NP (NP (NNS expectations)) (PP (IN of) (NP (DT the) (NNS users)))) (ADJP (JJ familiar) (PP (IN with) (NP (NP (RB only) (CD one)) (CC or) (NP (NP (DT some)) (PP (IN of) (NP (DT the) (JJ involved) (NNS languages))))))))))))))))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP propose) (NP (DT a) (JJ formal) (NN specification)) (PP (IN for) (SBAR (WHNP (WP what)) (S (NP (PRP it)) (VP (VBZ means) (PP (IN for) (NP (NP (DT a) (VBN given) (NN language)) (PP (IN in) (NP (DT a) (JJ multi-language) (NN system))))))))) (S (VP (TO to) (VP (VB be) (ADJP (JJ usable) (PP (IN without) (NP (NNS leaks))))))))) (: :) (S (NP (PRP it)) (VP (MD should) (VP (VB embed) (PP (IN into) (NP (NP (DT the) (JJ multi-language)) (PP (IN in) (NP (DT a) (ADJP (RB fully) (JJ abstract)) (NN way)))))))) (, ,) (S (NP (DT that)) (VP (VBZ is) (, ,) (SBAR (S (NP (PRP$ its) (JJ contextual) (NN equivalence)) (VP (MD should) (VP (VB be) (ADJP (JJ unchanged) (PP (IN in) (NP (DT the) (JJR larger) (NN system)))))))))) (. .))
(S (S (VP (TO To) (VP (VB demonstrate) (NP (NP (PRP$ our) (VBN proposed) (NN design) (NN principle)) (CC and) (NP (JJ formal) (NN specification) (NN criterion)))))) (, ,) (NP (PRP we)) (VP (VBP design) (NP (NP (DT a) (JJ multi-language) (NN programming) (NN system)) (SBAR (WHNP (WDT that)) (S (VP (VBZ combines) (NP (NP (DT an) (ADJP (NN ML) (HYPH -) (JJ like))) (VP (ADVP (RB statically)) (VBN typed) (NP (NP (JJ functional) (NN language)) (CC and) (NP (DT another) (NN language))) (PP (IN with) (NP (NP (JJ linear) (NNS types)) (CC and) (NP (JJ linear) (NN state))))))))))) (. .))
(S (NP (PRP$ Our) (NN goal)) (VP (VBZ is) (S (VP (TO to) (VP (VB cover) (NP (NP (DT a) (JJ good) (NN part)) (PP (IN of) (NP (NP (DT the) (NN expressiveness)) (PP (IN of) (NP (NP (NNS languages)) (SBAR (WHNP (WDT that)) (S (VP (VBP mix) (NP (NP (JJ functional) (NN programming)) (CC and) (NP (JJ linear) (NN state))) (PRN (-LRB- -LRB-) (NP (NN ownership)) (-RRB- -RRB-)))))))))) (, ,) (PP (IN at) (NP (NP (RB only) (DT a) (NN fraction)) (PP (IN of) (NP (DT the) (NN complexity))))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (NP (DT the) (NN embedding)) (PP (IN of) (NP (NP (NNP ML)) (PP (IN into) (NP (DT the) (JJ multi-language) (NN system)))))) (VP (VBZ is) (ADJP (RB fully) (JJ abstract))))))) (: :) (S (NP (JJ functional) (NNS programmers)) (VP (MD should) (RB not) (VP (VB fear) (NP (NN abstraction) (NNS leaks))))) (. .))
(S (S (NP (PRP We)) (VP (VBP show) (NP (NP (NNS examples)) (PP (IN of) (NP (NP (VBN combined) (NNS programs)) (VP (VBG demonstrating) (NP (NP (NML (PP (IN in) (HYPH -) (NP (NN place) (NN memory)))) (NNS updates)) (CC and) (NP (JJ safe) (NN resource) (NN handling))))))))) (, ,) (CC and) (S (NP (DT an) (NN implementation)) (VP (VBG extending) (NP (NN OCaml)) (PP (IN with) (NP (PRP$ our) (JJ linear) (NN language))))) (. .))
