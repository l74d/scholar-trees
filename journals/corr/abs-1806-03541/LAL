(S (NP (JJ Equational) (NN reasoning)) (VP (VBZ is) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (JJ key) (NNS features)) (PP (IN of) (NP (NP (JJ pure) (JJ functional) (NNS languages)) (PP (JJ such) (IN as) (NP (NNP Haskell))))))))) (. .))
(S (PP (TO To) (NP (NN date))) (, ,) (ADVP (RB however)) (, ,) (NP (JJ such) (NN reasoning)) (ADVP (RB always)) (VP (VBD took) (NP (NN place)) (ADVP (RB externally) (PP (TO to) (NP (NNP Haskell)))) (, ,) (UCP (RB either) (RB manually) (PP (IN on) (NP (NN paper))) (, ,) (CC or) (VP (VBN mechanised) (PP (IN in) (NP (DT a) (NN theorem) (NN prover)))))) (. .))
(S (NP (DT This) (NN article)) (VP (VBZ shows) (SBAR (WHADVP (WRB how)) (S (NP (JJ equational) (NN reasoning)) (VP (VP (MD can) (VP (VB be) (VP (VBN performed) (ADVP (RB directly) (CC and) (RB seamlessly)) (PP (IN within) (NP (NP (NNP Haskell)) (NP (PRP itself))))))) (, ,) (CC and) (VP (VB be) (VP (VBN checked) (S (VP (VBG using) (NP (NNP Liquid) (NNP Haskell)))))))))) (. .))
(S (PP (IN In) (NP (JJ particular))) (, ,) (NP (NP (NN language) (NNS learners)) (PRN (PRN (: —) (: -) (SBAR (WHPP (TO to) (WHNP (WP whom))) (S (NP (JJ external) (NN theorem) (NNS provers)) (VP (VBP are) (PP (IN out) (PP (IN of) (NP (NN reach))))))) (: —)) (: -))) (VP (MD can) (VP (VB benefit) (PP (IN from) (S (VP (VBG having) (S (NP (PRP$ their) (NN proofs)) (VP (ADVP (RB mechanically)) (VBD checked)))))))) (. .))
(S (ADVP (RB Concretely)) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (SBAR (WHADVP (WRB how)) (S (NP (NP (DT the) (JJ equational) (NN proofs) (CC and) (NNS derivations)) (PP (IN from) (NP (NP (NNP Graham) (POS 's)) (NN textbook)))) (VP (MD can) (VP (VB be) (VP (VBN recast) (PP (IN as) (NP (NP (NN proofs)) (PP (IN in) (NP (NNP Haskell)))))))))) (PRN (-LRB- -LRB-) (NP (NN spoiler)) (: :) (S (NP (PRP they)) (VP (VBP look) (NP (RB essentially) (DT the) (JJ same)))) (-RRB- -RRB-)))) (. .))
