(S (NP (NNP QMIX)) (VP (VBZ is) (NP (NP (DT a) (JJ popular) (ADJP ($ $) (NNP Q) ($ $)) (VBG -learning) (NN algorithm)) (PP (IN for) (NP (JJ cooperative) (NNP MARL))) (PP (IN in) (NP (DT the) (JJ centralised) (NN training) (CC and) (JJ decentralised) (NN execution) (NN paradigm))))) (. .))
(S (SBAR (IN In) (NN order) (S (VP (TO to) (VP (VB enable) (NP (JJ easy) (NN decentralisation)))))) (, ,) (NP (NNP QMIX)) (VP (VBZ restricts) (NP (NP (DT the) (JJ joint) (NN action) ($ $) (NNP Q) ($ $) (VBZ -values)) (SBAR (S (NP (PRP it)) (VP (MD can) (VP (VB represent)))))) (S (VP (TO to) (VP (VB be) (NP (NP (DT a) (JJ monotonic) (NN mixing)) (PP (IN of) (NP (NP (DT each) (NN agent) (POS 's)) (NNS utilities)))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (DT this) (NN restriction)) (VP (VBZ prevents) (NP (PRP it)) (PP (IN from) (S (VP (VBG representing) (NP (NP (NN value) (NNS functions)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NP (NP (DT an) (NN agent) (POS 's)) (NN ordering)) (PP (IN over) (NP (PRP$ its) (NNS actions)))) (VP (MD can) (VP (VB depend) (PP (IN on) (NP (NP (JJ other) (NNS agents) (POS â€º)) (NNS actions)))))))))))) (. .))
(S (S (VP (TO To) (VP (VB analyse) (NP (DT this) (JJ representational) (NN limitation))))) (, ,) (NP (PRP we)) (ADVP (RB first)) (VP (VBP formalise) (NP (NP (DT the) (JJ objective) (NNP QMIX) (NNS optimises)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (VP (VB view) (NP (NNP QMIX)) (PP (IN as) (NP (NP (DT an) (NN operator)) (SBAR (WHNP (WDT that)) (S (VP (VP (ADVP (RB first)) (VBZ computes) (NP (DT the) ($ $) (NNP Q) ($ $) (VBG -learning) (NNS targets))) (CC and) (VP (ADVP (RB then)) (NNS projects) (NP (PRP them)) (PP (IN into) (NP (NP (DT the) (NN space)) (ADJP (JJ representable) (PP (IN by) (NP (NNP QMIX)))))))))))))))))))) (. .))
(S (NP (DT This) (NN projection)) (VP (VBZ returns) (NP (NP (DT a) (JJ representable) ($ $) (NNP Q) ($ $) (VBP -value)) (SBAR (WHNP (WDT that)) (S (VP (VBZ minimises) (NP (NP (DT the) (JJ unweighted) (VBD squared) (NN error)) (PP (IN across) (NP (DT all) (JJ joint) (NNS actions))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (PP (IN in) (ADJP (JJ particular))) (SBAR (IN that) (S (NP (DT this) (NN projection)) (VP (MD can) (VP (VB fail) (S (VP (TO to) (VP (VB recover) (NP (DT the) (NN optimal) (NN policy))))) (PP (ADVP (RB even)) (IN with) (NP (NP (NN access)) (PP (TO to) (NP (NP ($ $) (NNP Q^*) ($ $)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (ADVP (RB primarily)) (VBZ stems) (PP (IN from) (NP (NP (DT the) (JJ equal) (NN weighting)) (VP (VBN placed) (PP (IN on) (NP (DT each) (JJ joint) (NN action)))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP rectify) (NP (DT this)) (PP (IN by) (S (VP (VBG introducing) (NP (DT a) (NN weighting)) (PP (IN into) (NP (DT the) (NN projection))) (, ,) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB place) (NP (JJR more) (NN importance)) (PP (IN on) (NP (DT the) (JJR better) (JJ joint) (NNS actions))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP propose) (NP (CD two) (VBG weighting) (NNS schemes))) (CC and) (VP (VBP prove) (SBAR (IN that) (S (NP (PRP they)) (VP (VBP recover) (NP (DT the) (NN correct) (JJ maximal) (NN action)) (PP (PP (IN for) (NP (DT any) (JJ joint) (NN action) ($ $) (NNP Q) ($ $) (NNS -values))) (, ,) (CC and) (ADVP (RB therefore)) (PP (IN for) (NP ($ $) (NNP Q^*) ($ $))) (ADVP (RB as) (RB well)))))))) (. .))
(S (PP (VBN Based) (PP (IN on) (NP (NP (PRP$ our) (NN analysis) (CC and) (NNS results)) (PP (IN in) (NP (DT the) (JJ tabular) (NN setting)))))) (NP (PRP we)) (VP (VP (VBP introduce) (NP (NP (NP (CD two) (JJ scalable) (NNS versions)) (PP (IN of) (NP (PRP$ our) (NN algorithm)))) (, ,) (NP (NP (NNP Centrally-Weighted) (PRN (-LRB- -LRB-) (NNP CW) (-RRB- -RRB-)) (NNP QMIX)) (CC and) (NP (NNP Optimistically-Weighted) (PRN (-LRB- -LRB-) (NNP OW) (-RRB- -RRB-)) (NNP QMIX))))) (CC and) (VP (VB demonstrate) (NP (NP (VBN improved) (NN performance)) (PP (IN on) (NP (S (VP (VP (DT both) (NP (JJ predator-prey)) (CC and)))) (NP (VBG challenging) (JJ multi-agent) (NNP StarCraft) (NN benchmark) (NNS tasks))))))) (. .))
