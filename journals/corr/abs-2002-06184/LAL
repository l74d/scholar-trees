(S (NP (NNP Multitier) (VBG programming) (NNS languages)) (VP (VB reduce) (NP (NP (DT the) (NN complexity)) (PP (IN of) (S (VP (VBG developing) (NP (VBN distributed) (NNS systems)))))) (PP (IN by) (S (VP (VBG developing) (NP (DT the) (JJ distributed) (NN system)) (PP (IN in) (NP (DT a) (JJ single) (NN coherent) (NN code) (NN base))))))) (. .))
(S (NP (NP (DT The) (NN compiler)) (CC or) (NP (DT the) (NN runtime))) (VP (VB separate) (NP (NP (DT the) (NN code)) (PP (IN for) (NP (NP (DT the) (NNS components)) (PP (IN of) (NP (DT the) (JJ distributed) (NN system)))))) (, ,) (S (VP (VBG enabling) (NP (NP (NN abstraction)) (PP (IN over) (NP (NP (JJ low) (NN level) (NN implementation) (NNS details)) (PP (JJ such) (IN as) (NP (NP (NNS data) (NN representation)) (, ,) (NP (NN serialization)) (CC and) (NP (NN network) (NNS protocols)))))))))) (. .))
(S (NP (PRP$ Our) (NNP ScalaLoci) (NN language)) (VP (VBZ allows) (S (NP (NNS developers)) (VP (TO to) (VP (VB declare) (NP (NP (DT the) (JJ different) (NNS components)) (CC and) (NP (PRP$ their) (JJ architectural) (NN relation))) (PP (IN at) (NP (DT the) (NN type) (NN level)))))) (, ,) (S (VP (VP (VBG allowing) (NP (NP (JJ static) (VBG reasoning)) (PP (IN about) (PP (IN about) (NP (NP (NN distribution)) (CC and) (NP (VB remote) (NN communication))))))) (CC and) (VP (VBG guaranteeing) (NP (NP (JJ static) (NN type) (NN safety)) (PP (IN across) (NP (NNS components)))))))) (. .))
(S (NP (DT The) (NN compiler)) (VP (VP (VBZ splits) (NP (DT the) (NN multitier) (NN program)) (PP (IN into) (NP (DT the) (JJ component-specific) (NN code)))) (CC and) (VP (ADVP (RB automatically)) (VBZ generates) (NP (DT the) (NN communication) (NN boilerplate)))) (. .))
(S (NP (NP (NN Communication)) (PP (IN between) (NP (NNS components)))) (VP (MD can) (VP (VB be) (VP (VBN modeled) (PP (IN by) (S (VP (ADVP (RB declaratively)) (VBG specifying) (NP (NP (NNS data) (NNS flows)) (PP (IN between) (NP (NNS components)))) (S (VP (VBG using) (NP (JJ reactive) (NN programming)))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP report) (PP (IN on) (NP (NP (NP (DT the) (NN implementation)) (PP (IN of) (NP (PRP$ our) (NN design)))) (CC and) (NP (NP (PRP$ our) (NN experience)) (PP (IN with) (S (VP (VBG embedding) (NP (PRP$ our) (NN language) (VBZ features)) (PP (IN into) (NP (NP (NNP Scala)) (PP (IN as) (NP (DT a) (NN host) (NN language)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (NP (NP (DT a) (NN combination)) (PP (IN of) (NP (NP (NP (NNP Scala) (POS 's)) (JJ advanced) (NN type) (NN level) (NN programming)) (CC and) (NP (PRP$ its) (NN macro) (NN system))))) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB enrich) (NP (DT the) (NN language)) (PP (IN with) (NP (JJ new) (NNS abstractions)))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP comment) (PP (IN on) (NP (NP (NP (DT the) (NNS challenges)) (SBAR (S (NP (PRP we)) (VP (VBD encountered))))) (CC and) (NP (NP (DT the) (NNS solutions)) (SBAR (S (NP (PRP we)) (VP (VBD developed) (PP (IN for) (NP (PRP$ our) (JJ current) (NN implementation)))))))))) (CC and) (VP (JJ outline) (NP (NP (NNS suggestions)) (PP (IN for) (NP (NP (DT an) (VBN improved) (NN macro) (NN system)) (SBAR (S (VP (TO to) (VP (VB support) (NP (NP (DT the) (JJ such) (NN use) (NNS cases)) (PP (IN of) (NP (NP (VBG embedding)) (PP (IN of) (NP (JJ domain-specific) (NNS abstractions))))))))))))))) (. .))
