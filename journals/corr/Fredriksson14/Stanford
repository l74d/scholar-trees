(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (JJ new) (JJ abstract) (NN machine)) (, ,) (VP (VBN called) (NP (NP (NNP DCESH)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ describes) (NP (NP (DT the) (NN execution)) (PP (IN of) (NP (NP (NML (JJR higher) (HYPH -) (NN order)) (NNS programs)) (VP (VBG running) (PP (IN in) (NP (VBN distributed) (NNS architectures)))))))))))))) (. .))
(S (NP (NNP DCESH)) (VP (VBZ implements) (S (NP (NP (DT a) (VBN generalised) (NN form)) (PP (IN of) (NP (NNP Remote) (NNP Procedure)))) (VP (VB Call) (S (NP (DT that)) (VP (VBZ supports) (S (VP (VBG calling) (NP (NML (JJR higher) (HYPH -) (NN order)) (NNS functions)) (PP (IN across) (NP (NN node) (NNS boundaries))))) (, ,) (PP (IN without) (S (VP (VBG sending) (NP (JJ actual) (NN code)))))))))) (. .))
(S (NP (PRP$ Our) (NN starting) (NN point)) (VP (VBZ is) (NP (NP (DT a) (NN variant)) (PP (IN of) (NP (NP (DT the) (NN SECD) (NN machine)) (SBAR (WHNP (WDT that)) (S (NP (PRP we)) (VP (VBP call) (NP (NP (DT the) (NNP CES) (NN machine)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ implements) (NP (NP (NN reduction)) (PP (IN for) (NP (JJ untyped) (NML (NML (NN call)) (HYPH -) (PP (IN by) (HYPH -) (NP (NN value)))) (NN PCF))))))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB successively)) (VP (VBP add) (NP (NP (DT the) (NNS features)) (SBAR (WHNP (WDT that)) (S (NP (PRP we)) (VP (VP (VBP need) (PP (IN for) (NP (VBN distributed) (NN execution)))) (CC and) (VP (VB show) (NP (NP (DT the) (NN correctness)) (PP (IN of) (NP (DT each) (NN addition)))))))))) (. .))
(S (ADVP (RB First)) (NP (PRP we)) (VP (VBP add) (NP (NNS heaps)) (, ,) (S (VP (VBG forming) (NP (NP (DT the) (NN CESH) (NN machine)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VP (VBZ provides) (NP (NNS features)) (S (ADJP (JJ necessary) (PP (IN for) (NP (ADJP (RBR more) (JJ efficient)) (NN execution)))))) (, ,) (CC and) (VP (VBP show) (SBAR (IN that) (S (NP (EX there)) (VP (VBZ is) (NP (NP (DT a) (NN bisimulation)) (PP (IN between) (NP (NP (DT the) (NN CES)) (CC and) (NP (DT the) (NN CESH) (NN machine)))))))))))))))) (. .))
(S (S (ADVP (RB Then)) (NP (PRP we)) (VP (VB construct) (NP (NP (DT a) (ADJP (NP (CD two) (HYPH -) (NN level)) (JJ operational)) (NNS semantics)) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (JJ high) (NN level)) (VP (VBZ is) (NP (NP (DT a) (NN network)) (PP (IN of) (S (VP (VBG communicating) (NP (NNS machines)))))))))))) (, ,) (CC and) (S (NP (DT the) (JJ low) (NN level)) (VP (VBZ is) (VP (VBN given) (PP (IN by) (NP (JJ local) (NN machine) (NNS transitions)))))) (. .))
(S (S (VP (VBG Using) (NP (DT these) (NNS networks)))) (, ,) (NP (PRP we)) (VP (VBP arrive) (PP (IN at) (NP (NP (PRP$ our) (JJ final) (NN system)) (, ,) (NP (DT the) (VBN distributed) (NN CESH) (NN machine)))) (PRN (-LRB- -LRB-) (NP (NNP DCESH)) (-RRB- -RRB-))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (EX there)) (VP (VBZ is) (NP (NP (DT a) (NN bisimulation) (NN relation)) (PP (ADVP (RB also)) (IN between) (NP (NP (DT the) (NN CESH) (NN machine)) (CC and) (NP (DT the) (NNP DCESH) (NN machine))))))))) (. .))
(S (S (NP (PDT All) (DT the) (JJ technical) (NNS results)) (VP (VBP have) (VP (VBN been) (VP (VP (VBN formalised)) (CC and) (VP (VBN proved) (S (ADJP (JJ correct))) (PP (IN in) (NP (NNP Agda)))))))) (, ,) (CC and) (S (NP (DT a) (NN prototype) (NN compiler)) (VP (VBZ has) (VP (VBN been) (VP (VBN developed))))) (. .))
