(S (NP (PRP We)) (VP (VBP investigate) (NP (NP (NP (NP (DT the) (JJ minimum) (NN line-distortion)) (CC and) (NP (DT the) (JJ minimum) (NN bandwidth) (NNS problems))) (PP (IN on) (NP (JJ unweighted) (NN graphs)))) (CC and) (NP (NP (PRP$ their) (NNS relations)) (PP (IN with) (NP (NP (DT the) (JJ minimum) (NN length)) (PP (IN of) (NP (NP (DT a) (NNP Robertson-Seymour) (POS 's)) (NN path-decomposition)))))))) (. .))
(S (NP (NP (DT The) (NN length)) (PP (IN of) (NP (NP (DT a) (NN path-decomposition)) (PP (IN of) (NP (DT a) (NN graph)))))) (VP (VBZ is) (NP (NP (DT the) (JJS largest) (NN diameter)) (PP (IN of) (NP (NP (DT a) (NN bag)) (PP (IN in) (NP (DT the) (NN decomposition))))))) (. .))
(S (NP (NP (DT The) (NN path-length)) (PP (IN of) (NP (DT a) (NN graph)))) (VP (VBZ is) (NP (NP (DT the) (JJ minimum) (NN length)) (PP (IN over) (NP (DT all) (PRP$ its) (NNS path-decompositions))))) (. .))
(S (PP (IN In) (NP (JJ particular))) (, ,) (NP (PRP we)) (VP (VBP show) (: :) (S (: -) (S (S (SBAR (IN if) (S (NP (DT a) (JJ graph) (NX ($ $) (NX (NNP G) ($ $)))) (VP (MD can) (VP (VB be) (VP (VBN embedded) (PP (IN into) (NP (DT the) (NN line))) (PP (IN with) (NP (NN distortion) (NP ($ $) (JJ k) ($ $))))))))) (, ,) (ADVP (RB then)) (NP ($ $) (NNP G) ($ $)) (VP (VBZ admits) (NP (NP (NP (DT a) (NNP Robertson-Seymour) (POS 's)) (NN path-decomposition)) (PP (IN with) (PP (NP (NNS bags)) (PP (IN of) (NP (NN diameter)))) (PP (NP (ADVP (IN at) (JJS most)) ($ $) (JJ k) ($ $)) (PP (IN in) (NP ($ $) (NNP G) ($ $)))))))) (: ;) (: -) (S (PP (IN for) (NP (NP (DT every) (NN class)) (PP (IN of) (NP (NP (NN graphs)) (PP (IN with) (NP (NP (NN path-length)) (VP (VBN bounded) (PP (IN by) (NP (DT a) (JJ constant)))))))))) (, ,) (NP (EX there)) (VP (VBP exist) (NP (NP (NP (DT an) (JJ efficient) (NN constant-factor) (NN approximation) (NN algorithm)) (PP (IN for) (NP (DT the) (JJ minimum) (NN line-distortion) (NN problem)))) (CC and) (NP (NP (DT an) (JJ efficient) (NN constant-factor) (NN approximation) (NN algorithm)) (PP (IN for) (NP (DT the) (JJ minimum) (NN bandwidth) (NN problem))))))) (: ;) (: -) (S (NP (EX there)) (VP (VBZ is) (NP (NP (DT an) (JJ efficient) (JJ 2-approximation) (NN algorithm)) (PP (IN for) (S (VP (VBG computing) (NP (NP (DT the) (NN path-length)) (PP (IN of) (NP (DT an) (JJ arbitrary) (NN graph)))))))))) (: ;) (: -) (S (NP (NP (JJ AT-free) (NN graphs)) (CC and) (NP (NP (DT some) (NN intersection) (NNS families)) (PP (IN of) (NP (NNS graphs))))) (VP (VBP have) (NP (VBN path-length)) (ADVP (ADVP (IN at) (JJS most)) (CD 2)))) (: ;) (: -) (S (PP (IN for) (NP (NNP AT-free) (NN graphs))) (, ,) (NP (EX there)) (VP (VBP exist) (NP (NP (NP (DT a) (JJ linear) (NN time) (JJ 8-approximation) (NN algorithm)) (PP (IN for) (NP (DT the) (JJ minimum) (NN line-distortion) (NN problem)))) (CC and) (NP (NP (DT a) (JJ linear) (NN time) (JJ 4-approximation) (NN algorithm)) (PP (IN for) (NP (DT the) (JJ minimum) (NN bandwidth) (NN problem)))))))))) (. .))
