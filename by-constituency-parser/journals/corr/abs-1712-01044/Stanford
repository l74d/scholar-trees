(S (NP (NP (NN Memory) (NN reclamation)) (PP (IN for) (NP (NML (ADJP (NP (NN lock)) (HYPH -) (VBN based)) (NNS data)) (NNS structures)))) (VP (VBZ is) (ADJP (RB typically) (JJ easy))) (. .))
(S (ADVP (RB However)) (, ,) (NP (PRP it)) (VP (VBZ is) (NP (NP (DT a) (JJ significant) (NN challenge)) (PP (IN for) (NP (NML (NML (NN lock)) (HYPH -) (NML (JJ free) (NNS data))) (NNS structures))))) (. .))
(S (S (NP (NP (JJ Automatic) (NNS techniques)) (PP (JJ such) (IN as) (NP (NN garbage) (NN collection)))) (VP (VP (VBP are) (ADJP (JJ inefficient))) (CC or) (VP (VB use) (NP (NNS locks))))) (, ,) (CC and) (S (NP (JJ non-automatic) (NNS techniques)) (VP (CC either) (VP (VBP have) (NP (NP (JJ high)) (ADVP (RB overhead)))) (, ,) (CC or) (VP (VBP do) (RB not) (VP (VB work) (PP (IN for) (NP (JJ many) (NNS data) (NNS structures))))))) (. .))
(S (PP (IN For) (NP (NN example))) (, ,) (NP (JJ subtle) (NNS problems)) (VP (MD can) (VP (VB arise) (SBAR (WHADVP (WRB when)) (S (NP (NP (NN hazard) (NNS pointers)) (, ,) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (ADJP (RBS most) (JJ common)) (JJ non-automatic) (NNS techniques)))) (, ,)) (VP (VBP are) (VP (VBN applied) (PP (IN to) (NP (JJ many) (NML (NML (NN lock)) (HYPH -) (NML (JJ free) (NNS data))) (NNS structures))))))))) (. .))
(S (NP (NP (NP (NML (NN Epoch) (VBN based)) (NN reclamation)) (-LRB- -LRB-) (NP (NN EBR)) (-RRB- -RRB-)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (IN by) (RB far)) (NP (DT the) (ADJP (RBS most) (JJ efficient)) (JJ non-automatic) (NN technique))))) (, ,)) (VP (VBZ allows) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (JJ unreclaimed) (NNS objects)))) (S (VP (TO to) (VP (VB grow) (PP (IN without) (ADJP (VBN bound))) (, ,) (SBAR (IN because) (S (NP (CD one)) (VP (VBD crashed) (SBAR (S (NP (NN process)) (VP (MD can) (VP (VB prevent) (NP (DT all) (JJ other) (NNS processes)) (PP (IN from) (S (VP (VBG reclaiming) (NP (NN memory)))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP develop) (NP (NP (DT a) (ADJP (ADJP (RBR more) (JJ efficient)) (, ,) (ADJP (VBN distributed))) (NN variant)) (PP (IN of) (NP (NP (NNP EBR)) (SBAR (WHNP (WDT that)) (S (VP (VBZ solves) (NP (DT this) (NN problem))))))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (NP (NN signaling)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN provided) (PP (IN by) (NP (JJ many) (NN operating) (NNS systems))))))) (, ,)) (PP (JJ such) (IN as) (NP (NNP Linux) (CC and) (NNP UNIX))))))) (. .))
(S (PRN (S (NP (PRP$ Our) (JJ new) (NN scheme)) (VP (VBZ takes) (NP (NP (NML (FRAG (NP ($ $)) (NP (UH O) (NP (-LRB- -LRB-) (CD 1) (-RRB- -RRB-)) (NP ($ $) (CD amortized))))) (NNS steps)) (PP (IN per) (NP (UCP (NP (NP (NML (JJ high) (HYPH -) (NN level)) (NN operation)) (PP (IN on) (NP (DT the) (NNS data) (NN structure)))) (CC and) (FRAG (NP ($ $)) (NP (UH O) (NP (-LRB- -LRB-) (CD 1) (-RRB- -RRB-)) (NP ($ $))))) (NNS steps)))) (PP (IN in) (NP (DT the) (JJS worst) (NN case)))))) (NP-TMP (DT each) (NN time)) (NP (DT an) (NN object)) (VP (VBZ is) (VP (VBN removed) (PP (IN from) (NP (DT the) (NNS data) (NN structure))))) (. .))
(S (S (PP (IN At) (NP (DT any) (NN point))) (, ,) (NP (NP (NP ($ $)) (NP (UH O)) (PRN (-LRB- -LRB-) (NP (NN mn) (SYM ^) (CD 2)) (-RRB- -RRB-))) (NP (NP ($ $)) (SBAR (S (NP (NNS objects)) (VP (VBP are) (VP (VBG waiting) (S (VP (TO to) (VP (VB be) (VP (VBN freed) (, ,) (SBAR (WHADVP (WRB where)) (FRAG (NP ($ $)))))))))))))) (NP-TMP (NP (NN n)) (NP ($ $))) (VP (VBZ is) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NNS processes)))))) (CC and) (S (NP (NP ($ $) (CD m)) (NP ($ $))) (VP (VBZ is) (NP (DT a) (JJ small) (ADJP (JJ constant) (PP (IN for) (NP (JJS most) (NNS data)))) (NNS structures)))) (. .))
(S (ADVP (RB Typically)) (, ,) (NP (NN memory) (NN reclamation)) (VP (VBZ is) (ADVP (RB tightly)) (VP (VBN woven) (PP (IN into) (NP (NML (NML (NN lock)) (HYPH -) (NML (JJ free) (NNS data))) (NN structure) (NN code))))) (. .))
(S (S (VP (TO To) (VP (VP (VB improve) (NP (NN modularity))) (CC and) (VP (VB facilitate) (NP (NP (DT the) (NN comparison)) (PP (IN of) (NP (JJ different) (NN memory) (NN reclamation) (NNS schemes)))))))) (, ,) (NP (PRP we)) (ADVP (RB also)) (VP (VBP introduce) (NP (DT a) (ADJP (RB highly) (JJ flexible)) (NN abstraction))) (. .))
(S (NP (PRP It)) (VP (VP (VBZ allows) (NP (DT a) (NN programmer)) (PP (IN to) (NP (NP (ADVP (RB easily)) (NN interchange) (NNS schemes)) (PP (IN for) (NP (NN reclamation)))))) (, ,) (VP (VBP object) (S (VP (VBG pooling) (, ,) (NP (NN allocation) (CC and) (NN deallocation)) (PP (IN with) (NP (RB virtually) (DT no) (NN overhead)))))) (, ,) (PP (IN by) (S (VP (VBG changing) (NP (NP (DT a) (JJ single) (NN line)) (PP (IN of) (NP (NN code)))))))) (. .))
