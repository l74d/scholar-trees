(S (NP (PRP We)) (VP (VBP study) (NP (NP (DT a) (JJ constrained) (NN version)) (PP (IN of) (NP (DT the) (NN knapsack) (NN problem))) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NP (NNS dependencies)) (PP (IN between) (NP (NNS items)))) (VP (VBP are) (VP (VBN given) (PP (IN by) (NP (NP (DT the) (NNS adjacencies)) (PP (IN of) (NP (DT a) (NN graph))))))))))) (. .))
(S (PP (IN In) (NP (DT the) (JJ 1-neighbour) (NN knapsack) (NN problem))) (, ,) (NP (DT an) (NN item)) (VP (MD can) (VP (VB be) (VP (VBN selected) (SBAR (RB only) (IN if) (S (NP (NP (QP (IN at) (JJS least) (CD one))) (PP (IN of) (NP (PRP$ its) (NNS neighbours)))) (VP (VBZ is) (ADVP (RB also)) (VP (VBN selected)))))))) (. .))
(S (PP (IN In) (NP (DT the) (JJ all-neighbours) (NN knapsack) (NN problem))) (, ,) (NP (DT an) (NN item)) (VP (MD can) (VP (VB be) (VP (VBN selected) (SBAR (RB only) (IN if) (S (NP (DT all) (PRP$ its) (NNS neighbours)) (VP (VBP are) (ADVP (RB also)) (VP (VBN selected)))))))) (. .))
(S (NP (PRP We)) (VP (VBP give) (NP (NP (NN approximation) (NN algorithms)) (CC and) (NP (NN hardness) (NNS results))) (SBAR (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NNS nodes)) (VP (VBP have) (NP (ADJP (DT both) (JJ uniform) (CC and) (JJ arbitrary)) (NN weight) (CC and) (NN profit) (NNS functions))))) (, ,) (CC and) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN dependency) (NN graph)) (VP (VBZ is) (ADJP (VBN directed) (CC and) (VBN undirected))))))) (. .))
