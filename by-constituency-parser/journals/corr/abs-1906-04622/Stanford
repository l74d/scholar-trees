(S (S (NP (NN ROOT)) (VP (VBZ is) (NP (NP (DT a) (JJ large) (NN code) (NN base)) (PP (IN with) (NP (NP (DT a) (JJ complex) (NN set)) (PP (IN of) (NP (NML (NN build) (HYPH -) (NN time)) (NNS dependencies)))))))) (: ;) (S (NP (EX there)) (VP (VBZ is) (NP (NP (DT a) (JJ significant) (NN difference)) (PP (IN in) (NP (NP (NN compilation) (NN time)) (PP (IN between) (NP (NP (NP (DT the) (`` ") (NN core) ('' ")) (PP (IN of) (NP (NN ROOT)))) (CC and) (NP (DT the) (ADJP (JJ full) (HYPH -) (JJ fledged)) (NN deployment))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NNS results)) (PP (IN on) (NP (NP (DT a) (`` ") (ADJP (VBN delayed)) (NN build) ('' ")) (PP (IN for) (NP (NP (JJ internal) (NN ROOT) (NNS packages)) (CC and) (NP (JJ external) (NNS packages))))))) (. .))
(S (NP (DT This)) (VP (VBZ gives) (NP (DT the) (NN ability) (S (VP (TO to) (VP (VB offer) (NP (NP (NP (DT a) (`` ") (JJ lightweight) ('' ") (NN core)) (PP (IN of) (NP (NN ROOT)))) (, ,) (VP (ADVP (RB later)) (VBN extended) (PP (IN by) (S (VP (VBG building) (NP (JJ additional) (NNS modules)) (S (VP (TO to) (VP (VB extend) (NP (NP (DT the) (NN functionality)) (PP (IN of) (NP (NN ROOT))))))))))))))))) (. .))
(S (PP (IN As) (NP (NP (DT a) (NN part)) (PP (IN of) (NP (DT this) (NN work))))) (, ,) (NP (PRP we)) (VP (VBP have) (VP (VBN improved) (NP (NP (DT the) (NN separation)) (PP (IN of) (NP (NN ROOT) (NN code)))) (PP (IN into) (NP (JJ distinct) (NNS modules) (CC and) (NNS packages))) (PP (IN with) (NP (JJ minimal) (NNS dependencies))))) (. .))
(S (NP (DT This) (NN approach)) (VP (VBZ gives) (NP (NNS users)) (NP (NP (JJR better) (NN flexibility)) (CC and) (NP (DT the) (NN possibility))) (S (VP (TO to) (VP (VB combine) (NP (JJ various) (NN build) (NNS features)) (PP (IN without) (S (VP (VBG rebuilding) (PP (IN from) (NP (NN scratch)))))))))) (. .))
(S (NP (NN Dependency) (NN hell)) (VP (VBZ is) (NP (NP (DT a) (JJ common) (NN problem)) (VP (VBN found) (PP (PP (IN in) (NP (NN software))) (CC and) (RB particularly) (PP (IN in) (NP (NN HEP) (NN software) (NN ecosystem))))))) (. .))
(S (NP (PRP We)) (VP (MD would) (VP (VB like) (S (VP (TO to) (VP (VB discuss) (NP (NP (NP (DT an) (NN improvement)) (PP (IN of) (NP (NN artifact) (NN management)))) (-LRB- -LRB-) (NP (NP (NML (`` ") (S (NP (JJ lazy)) (HYPH -) (VP (VB install))) ('' ")) (-RRB- -RRB-) (NN system)) (PP (IN as) (NP (NP (DT a) (NN solution)) (PP (IN to) (NP (DT the) (`` ") (NML (NN dependency) (NN hell)) ('' ") (NN problem)))))))))))) (. .))
(S (NP (NML (NN HEP) (NN software)) (NN stack)) (ADVP (RB usually)) (VP (VBZ consists) (PP (IN of) (NP (NP (JJ multiple) (NNS sub-projects)) (PP (IN with) (NP (NNS dependencies)))))) (. .))
(S (NP (DT The) (NN development) (NN model)) (VP (VBZ is) (ADVP (RB often)) (VP (VBN distributed) (, ,) (ADJP (JJ independent) (CC and) (JJ non-coherent)) (PP (IN among) (NP (DT the) (NNS sub-projects))))) (. .))
(S (NP (PRP We)) (VP (VBP believe) (SBAR (IN that) (S (S (NP (NN software)) (VP (MD should) (VP (VB be) (VP (VBN designed) (S (VP (TO to) (VP (VB take) (NP (NP (NN advantage)) (PP (IN of) (NP (NP (JJ other) (NN software) (NNS components)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBP are) (ADJP (RB already) (JJ available))) (, ,) (CC or) (VP (VBP have) (ADVP (RB already)) (VP (VBN been) (VP (VBN designed) (CC and) (VBN implemented) (PP (IN for) (NP (NN use)))))))))))) (ADVP (RB elsewhere))))))))) (CONJP (RB rather) (IN than)) (S (`` ") (VP (VBG reinventing) (NP (DT the) (NN wheel))) ('' "))))) (. .))
(S (PP (IN In) (NP (PRP$ our) (NN contribution))) (, ,) (NP (PRP we)) (VP (MD will) (VP (VP (VB present) (NP (PRP$ our) (NN approach)) (PP (IN to) (NP (NP (NN artifact) (NN management) (NN system)) (PP (IN of) (NP (NN ROOT))))) (PP (ADVP (RB together)) (IN with) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NNS examples)))))) (CC and) (VP (VB use) (NP (NNS cases))))) (. .))
