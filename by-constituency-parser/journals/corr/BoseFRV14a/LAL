(S (VP (VB Let) (S (S (NP ($ $) (VB P) ($ $)) (VP (VB be) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (ADJP ($ $) (JJ n) ($ $)) (NNS vertices)) (PP (IN in) (NP (DT the) (NN plane)))))))) (CC and) (S (NP ($ $) (NNP S) ($ $)) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (JJ non-crossing) (NN line) (NNS segments)) (PP (IN between) (NP (NP (NNS vertices)) (PP (IN in) (NP ($ $) (NNP P) ($ $))))) (, ,) (VP (VBN called) (S (NP (NNS constraints)))))))))) (. .))
(S (NP (CD Two) (NNS vertices)) (VP (VBP are) (ADJP (JJ visible)) (SBAR (IN if) (S (NP (NP (DT the) (JJ straight) (NN line) (NN segment)) (VP (VBG connecting) (NP (PRP them)))) (VP (VBZ does) (RB not) (VP (ADVP (RB properly)) (VB intersect) (NP (DT any) (NNS constraints))))))) (. .))
(S (NP (PRP$ Our) (VBG routing) (NN algorithm)) (VP (NNS guarantees) (SBAR (IN that) (S (NP (DT the) (JJ returned) (NN path)) (VP (VBZ is) (ADJP (JJ 2-competitive)))))) (. .))
(S (PP (TO To) (NP (NP (DT the) (JJS best)) (PP (IN of) (NP (PRP$ our) (NN knowledge))))) (, ,) (NP (DT these)) (VP (VBP are) (NP (NP (DT the) (JJ first) (JJ local) (VBG routing) (NN algorithms)) (PP (IN in) (NP (DT the) (JJ constrained) (NN setting))) (PP (IN with) (NP (NP (NNS guarantees)) (PP (IN on) (NP (NP (DT the) (NN length)) (PP (IN of) (NP (DT the) (JJ returned) (NN path))))))))) (. .))
