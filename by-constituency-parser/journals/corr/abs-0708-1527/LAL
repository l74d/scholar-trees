(S (NP (DT This)) (VP (VBZ is) (S (VP (TO to) (VP (JJ present) (NP (NP (NN work)) (PP (IN on) (S (VP (VBG modifying) (NP (DT the) (NNP Aleph) (NNP ILP) (NN system)) (SBAR (RB so) (IN that) (S (NP (PRP it)) (VP (VBZ evaluates) (NP (DT the) (JJ hypothesised) (NNS clauses)) (PP (IN in) (NP (NN parallel))) (PP (IN by) (S (VP (VBG distributing) (NP (DT the) (NN data-set)) (PP (IN among) (NP (NP (DT the) (NNS nodes)) (PP (IN of) (NP (DT a) (ADJP (JJ parallel) (CC or) (JJ distributed)) (NN machine))))))))))))))))))) (. .))
(S (NP (DT The) (NN paper)) (VP (ADVP (NN briefly)) (VBZ discusses) (NP (NP (NNP MPI)) (, ,) (NP (NP (DT the) (NN interface)) (VP (VBN used) (S (VP (TO to) (VP (NN access) (NP (NP (JJ message-) (NN passing) (NNS libraries)) (PP (IN for) (NP (NP (JJ parallel) (NNS computers)) (CC and) (NP (NNS clusters)))))))))))) (. .))
(S (NP (PRP It)) (ADVP (RB then)) (VP (VBZ proceeds) (S (VP (TO to) (VP (VB describe) (NP (NP (NP (DT an) (NN extension)) (PP (IN of) (NP (NNP YAP) (NNP Prolog))) (PP (IN with) (NP (DT an) (NNP MPI) (NN interface)))) (CC and) (NP (NP (DT an) (NN implementation)) (PP (IN of) (NP (JJ data-parallel) (NN clause) (NN evaluation))) (PP (IN for) (NP (NNP Aleph))) (PP (IN through) (NP (DT this) (NN interface))))))))) (. .))
(S (NP (DT The) (NN paper)) (VP (VBZ concludes) (PP (IN by) (S (VP (VBG testing) (NP (DT the) (JJ data-parallel) (NNP Aleph)) (PP (IN on) (NP (ADJP (RB artificially) (VBN constructed)) (NNS data-sets))))))) (. .))
