(S (NP (JJ Tool-assisted) (NN refactoring) (NNS transformations)) (VP (MD must) (VP (VB be) (ADJP (JJ trustworthy)) (SBAR (IN if) (S (NP (NNS programmers)) (VP (VBP are) (S (VP (TO to) (VP (VB be) (ADJP (JJ confident) (PP (IN in) (S (VP (VBG applying) (NP (PRP them)) (PP (IN on) (NP (ADJP (RB arbitrarily) (JJ extensive) (CC and) (JJ complex)) (NN code))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB improve) (NP (NN style) (CC or) (NN efficiency)))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP propose) (NP (NP (DT a) (ADJP (JJ simple) (, ,) (JJ high-level) (CC but) (JJ rigorous) (, ,)) (NN notation)) (PP (IN for) (S (VP (VBG defining) (NP (VBG refactoring) (NNS transformations)) (PP (IN in) (NP (NNP Erlang)))))))) (, ,) (CC and) (VP (VBP show) (SBAR (IN that) (S (NP (DT this) (NN notation)) (VP (VBZ provides) (NP (NP (DT an) (ADJP (JJ extensible) (, ,) (JJ verifiable) (CC and) (JJ executable)) (NN specification) (NN language)) (PP (IN for) (NP (VBG refactoring))))))))) (. .))
(S (S (VP (TO To) (VP (VB demonstrate) (NP (NP (DT the) (NN applicability)) (PP (IN of) (NP (PRP$ our) (NN approach))))))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB define) (CC and) (VB verify) (NP (NP (DT a) (NN number)) (PP (IN of) (NP (NN example) (NNS refactorings))) (PP (IN in) (NP (DT the) (NN system))))))))) (. .))
