(S (NP (PRP We)) (VP (VBP solve) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG finding) (NP (JJ interspersed) (JJ maximal) (NNS repeats)))))) (S (VP (VBG using) (NP (DT a) (JJ suffix) (NN array) (NN construction))))) (. .))
(S (SBAR (IN As) (S (NP (PRP it)) (VP (VBZ is) (ADJP (RB well) (VBN known))))) (, ,) (NP (NP (PDT all) (DT the) (NN functionality)) (PP (IN of) (NP (NN suffix) (NNS trees)))) (VP (MD can) (VP (VB be) (VP (VBN handled) (PP (IN by) (NP (NN suffix) (NNS arrays))) (, ,) (S (VP (VBG gaining) (NP (NN practicality))))))) (. .))
(S (NP (PRP$ Our) (NN solution)) (VP (VBZ improves) (NP (NP (DT the) (ADJP (NN suffix) (NN tree) (VBN based)) (NNS approaches)) (PP (IN for) (NP (DT the) (NN repeat) (VBG finding) (NN problem)))) (, ,) (S (VP (VBG being) (ADJP (ADVP (RB particularly) (RB well)) (VBN suited) (PP (IN for) (NP (ADJP (RB very) (JJ large)) (NNS inputs))))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (NP (NP (DT the) (NN corrrectness) (CC and) (NN complexity)) (PP (IN of) (NP (DT the) (NN algorithms))))) (. .))
