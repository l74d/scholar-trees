(S (NP (NP (DT The) (NNP Edinburgh) (NNP Logical) (NNP Framework)) (-LRB- -LRB-) (NP (NNP LF)) (-RRB- -RRB-)) (VP (VBZ is) (NP (NP (DT a) (ADJP (RB dependently) (NN type)) (NN lambda) (NN calculus)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB encode) (NP (JJ formal) (NNS systems)))))))))))) (. .))
(S (NP (NP (DT The) (NN versatility)) (PP (IN of) (NP (NN LF)))) (VP (VBZ allows) (NP (NNS specifications)) (S (VP (TO to) (VP (VB be) (VP (VBN constructed) (ADVP (RB also)) (PP (IN about) (NP (DT the) (VBN encoded) (NNS systems)))))))) (. .))
(S (NP (DT The) (NNP Twelf) (NN system)) (VP (VBZ exploits) (NP (NP (DT the) (NN correspondence)) (PP (IN between) (NP (NNS formulas) (CC and) (NNS types)))) (S (VP (TO to) (VP (VB give) (NP (NP (NNS specifications)) (PP (IN in) (NP (NNP LF)))) (NP (DT a) (NN logic) (NN programming) (NN interpretation)))))) (. .))
(S (PP (IN By) (S (VP (VBG interpreting) (NP (JJ particular) (NNS arguments)) (PP (IN as) (NP (NN input) (CC and) (NNS others))) (PP (IN as) (NP (NN output)))))) (, ,) (NP (NNS specifications)) (VP (MD can) (VP (VB be) (VP (VBN seen) (PP (IN as) (S (VP (VBG describing) (NP (JJ non-deterministic) (NNS functions)))))))) (. .))
(S (SBAR (IN If) (S (NP (JJ particular) (JJ such) (NNS functions)) (VP (MD can) (VP (VB be) (VP (VBN shown) (S (VP (TO to) (VP (VB be) (ADJP (JJ total)))))))))) (, ,) (NP (PRP they)) (VP (VBP represent) (NP (NP (JJ constructive) (NNS proofs)) (PP (IN of) (NP (NP (NN meta) (HYPH -) (NNS theorems)) (PP (IN of) (NP (DT the) (VBN encoded) (NNS systems))))))) (. .))
(S (NP (NNP Twelf)) (VP (VBZ provides) (NP (NP (DT a) (NN suite)) (PP (IN of) (NP (NP (NNS tools)) (PP (IN for) (S (VP (VBG establishing) (NP (NN totality))))))))) (. .))
(S (S (ADVP (RB However)) (, ,) (NP (NP (PDT all) (DT the)) (VP (VBG resulting) (NP (NP (NNS proofs)) (PP (IN of) (NP (NN meta) (HYPH -) (NNS theorems)))))) (VP (VBP are) (ADJP (JJ implicit)))) (: :) (S (NP (NP (NNP Twelf) (POS 's)) (NN totality) (NN checking)) (VP (VBZ does) (RB not) (VP (VB yield) (NP (NP (DT a) (NN certificate)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB be) (VP (VBN given) (PP (IN to) (NP (DT a) (NN proof) (NN checker)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP begin) (NP (DT the) (NN process)) (ADVP (RB here)) (PP (IN of) (S (VP (VBG making) (S (NP (DT these) (NNS proofs)) (ADJP (JJ explicit))))))) (. .))
(S (NP (PRP We)) (VP (VBP treat) (NP (DT the) (JJ restricted) (NN situation)) (PP (IN in) (NP (NNP Twelf))) (SBAR (WHADVP (WRB where)) (S (NP (NP (NP (NN context) (NNS definitions)) (-LRB- -LRB-) (NP (JJ regular) (NNS worlds)) (-RRB- -RRB-)) (CC and) (NP (NN lemmas))) (VP (VBP are) (RB not) (VP (VBN used)))))) (. .))
(S (PP (IN In) (NP (DT this) (NN setting))) (NP (PRP we)) (VP (VBP describe) (CC and) (VBP prove) (NP (NP (JJ correct) (DT a) (NN translation)) (PP (IN of) (NP (DT the) (NNS steps)))) (PP (IN in) (NP (NP (NN totality)) (VP (VBG checking) (PP (IN into) (NP (NP (DT an) (JJ actual) (NN proof)) (PP (IN in) (NP (DT the) (NN companion) (NN logic) (NN M2))))))))) (. .))
(S (NP (PRP We)) (VP (VBP intend) (PP (IN in) (NP (DT the) (JJ long) (NN term))) (S (VP (VP (TO to) (VP (VB extend) (NP (PRP$ our) (NN translation)) (PP (IN to) (NP (NP (DT all)) (PP (IN of) (NP (NNP Twelf))))))) (CC and) (VP (TO to) (VP (VB use) (NP (DT this) (NN work)) (PP (IN as) (NP (NP (DT the) (NN basis)) (PP (IN for) (S (VP (VBG producing) (NP (NNS proofs)) (PP (IN in) (NP (DT the) (JJ related) (NNP Abella) (NN system))))))))))))) (. .))
