(S (NP (PRP We)) (VP (VBP present) (NP (CD two) (JJ novel) (NNS approaches)) (PP (IN to) (S (VP (VBG parsing) (NP (ADJP (NP (NN context)) (HYPH -) (JJ free)) (NNS languages)))))) (. .))
(S (NP (DT The) (JJ first) (NN approach)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (DT an) (NN extension)) (PP (IN of) (NP (NP (NNP Brzozowski) (POS 's)) (NN derivative))))) (PP (IN from) (NP (JJ regular) (NNS expressions))) (PP (IN to) (NP (NN context) (HYPH -) (JJ free) (NNS grammars))))) (. .))
(S (NP (DT The) (JJ second) (NN approach)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (DT a) (NN generalization)) (PP (IN of) (NP (DT the) (NN derivative))))) (PP (IN to) (NP (NN parser) (NNS combinators))))) (. .))
(S (NP (NP (DT The) (NN payoff)) (PP (IN of) (NP (DT these) (NNS techniques)))) (VP (VBZ is) (NP (NP (DT a) (ADJP (JJ small) (PRN (-LRB- -LRB-) (NP (NP (QP (JJR less) (IN than) (CD 250)) (NNS lines)) (PP (IN of) (NP (NN code)))) (-RRB- -RRB-))) (, ,) (ADJP (JJ easy) (HYPH -) (S (VP (TO to) (HYPH -) (VP (VB implement) (S (VP (VBG parsing))))))) (NN library)) (ADJP (JJ capable) (PP (IN of) (S (VP (VBG parsing) (NP (ADJP (NP (JJ arbitrary) (NN context)) (HYPH -) (JJ free)) (NNS grammars)) (PP (IN into) (NP (JJ lazy) (NML (S (VP (VB parse)))) (NNS forests))))))))) (. .))
(S (NP (NP (NNS Implementations)) (PP (IN for) (NP (DT both) (NNP Scala) (CC and) (NNP Haskell)))) (VP (VBP are) (VP (VBN provided))) (. .))
(S (NP (NP (JJ Preliminary) (NNS experiments)) (PP (IN with) (NP (NN S) (HYPH -) (NNS Expressions)))) (VP (VBD parsed) (NP (NP (NNS millions)) (PP (IN of) (NP (NP (NP (NNS tokens)) (PP (IN per) (NP (NN second)))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ suggests) (SBAR (S (NP (DT this) (NN technique)) (VP (VBZ is) (ADJP (ADJP (JJ efficient) (RB enough)) (PP (IN for) (NP (NP (NN use)) (PP (IN in) (NP (NN practice)))))))))))))))) (. .))
