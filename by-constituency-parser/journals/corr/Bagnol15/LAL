(S (NP (NP (NNP Proof) (NN equivalence)) (PP (IN in) (NP (DT a) (NN logic)))) (VP (VBZ is) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG deciding) (SBAR (IN whether) (S (NP (CD two) (NNS proofs)) (VP (VBP are) (ADJP (JJ equivalent)) (PP (IN modulo) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (NN permutation)) (PP (IN of) (NP (NNS rules))))) (SBAR (WHNP (WDT that)) (S (VP (VBZ reflects) (NP (NP (DT the) (JJ commutative) (NNS conversions)) (PP (IN of) (NP (PRP$ its) (JJ cut-elimination) (NN procedure))))))))))))))))) (. .))
(S (PP (IN As) (NP (JJ such))) (, ,) (NP (PRP it)) (VP (VBZ is) (VP (VBN related) (PP (TO to) (NP (NP (NP (DT the) (NN question)) (PP (IN of) (NP (NNS proofnets)))) (: :) (S (VP (VBG finding) (NP (NP (JJ canonical) (NNS representatives)) (PP (IN of) (NP (NP (NN equivalence) (NNS classes)) (PP (IN of) (NP (NN proofs))) (SBAR (WHNP (WDT that)) (S (VP (VBP have) (NP (JJ good) (NN computational) (NNS properties)))))))))))))) (. .))
(S (NP (PRP It)) (VP (MD can) (ADVP (RB also)) (VP (VB be) (VP (VBN seen) (PP (IN as) (NP (NP (DT the) (NN word) (NN problem)) (PP (IN for) (NP (NP (DT the) (NN notion)) (PP (IN of) (NP (JJ free) (NN category))) (VP (VBG corresponding) (PP (TO to) (NP (DT the) (NN logic))))))))))) (. .))
(S (NP (PRP It)) (VP (VBZ has) (VP (VBN been) (ADVP (RB recently)) (VP (VBN shown) (SBAR (SBAR (IN that) (S (NP (NP (NN proof) (NN equivalence)) (PP (IN in) (NP (NP (NNP MLL)) (PRN (-LRB- -LRB-) (NP (NP (DT the) (NAC (NN multiplicative) (PP (IN with) (NP (NNS units)))) (NN fragment)) (PP (IN of) (NP (JJ linear) (NN logic)))) (-RRB- -RRB-))))) (VP (VBZ is) (ADJP (NNP PSPACE-complete))))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (NNS rules) (PRT (RP out)) (NP (NP (DT any) (JJ low-complexity) (NN notion)) (PP (IN of) (NP (NN proofnet))) (PP (IN for) (NP (DT this) (JJ particular) (NN logic))))))))))) (. .))
(S (SBAR (IN Since) (S (NP (PRP it)) (VP (VBZ is) (NP (NP (DT another) (NN fragment)) (PP (IN of) (NP (JJ linear) (NN logic))) (SBAR (WHPP (IN for) (WHNP (WDT which))) (S (NP (NNS attempts) (S (VP (TO to) (VP (VB define) (NP (NP (DT a) (ADJP (RB fully) (JJ satisfactory)) (JJ low-complexity) (NN notion)) (PP (IN of) (NP (NN proofnet)))))))) (VP (VBP have) (RB not) (VP (VBN been) (ADJP (JJ successful)) (ADVP (RB so) (RB far)))))))))) (, ,) (NP (PRP we)) (VP (VP (VBP study) (NP (JJ proof) (NN equivalence)) (PP (IN in) (NP (NP (NNP MALL-)) (PRN (-LRB- -LRB-) (NP (NP (NP (JJ multiplicative-additive) (PP (IN without) (NP (NNS units)))) (NN fragment)) (PP (IN of) (NP (JJ linear) (NN logic)))) (-RRB- -RRB-))))) (CC and) (VP (VB discover) (NP (NP (DT a) (NN situation)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (RB totally) (JJ different) (PP (IN from) (NP (DT the) (NNP MLL) (NN case)))))))))) (. .))
(S (ADVP (RB Indeed)) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (NN proof) (NN equivalence)) (PP (IN in) (NP (NNP MALL-)))) (VP (NNS corresponds) (PRN (-LRB- -LRB-) (PP (IN under) (NP (NNP AC0) (NNS reductions))) (-RRB- -RRB-)) (PP (TO to) (NP (NP (NN equivalence)) (PP (IN of) (NP (NP (JJ binary) (NN decision) (NNS diagrams)) (, ,) (NP (NP (DT a) (NN data) (NN structure)) (VP (ADVP (RB widely)) (VBN used) (S (VP (TO to) (VP (VB represent) (CC and) (VB analyze) (NP (NNP Boolean) (NNS functions)) (ADVP (RB efficiently))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (S (NP (DT these) (CD two) (NN equivalent) (NNS problems)) (VP (TO to) (VP (VB be) (ADJP (NNP LOGSPACE-complete)))))) (. .))
(S (SBAR (IN If) (S (NP (DT this)) (ADVP (RB technically)) (VP (VBZ leaves) (ADJP (RP open)) (NP (NP (DT the) (NN possibility)) (PP (IN for) (NP (NP (DT a) (JJ complete) (NN solution)) (PP (TO to) (NP (NP (DT the) (NN question)) (PP (IN of) (NP (NP (NNS proofnets)) (PP (IN for) (NP (NNP MALL-))))))))))))) (, ,) (NP (NP (DT the) (VBN established) (NN relation)) (PP (IN with) (NP (JJ binary) (NN decision) (NNS diagrams)))) (ADVP (RB actually)) (VP (VBZ suggests) (NP (NP (DT a) (JJ negative) (NN solution)) (PP (TO to) (NP (DT this) (NN problem))))) (. .))
