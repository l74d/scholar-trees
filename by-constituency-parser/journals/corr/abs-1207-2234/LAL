(S (PP (IN In) (NP (NN mutation) (VBG testing))) (NP (DT the) (NN question) (SBAR (IN whether) (S (NP (DT a) (NN mutant)) (VP (VBZ is) (ADJP (JJ equivalent) (PP (TO to) (NP (PRP$ its) (NN program)))))))) (VP (VBZ is) (ADJP (JJ important)) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB compute) (NP (DT the) (JJ correct) (NN mutation) (NN score))))))) (. .))
(S (ADVP (RB Unfortunately)) (, ,) (S (VP (VBG answering) (NP (DT this) (NN question)))) (VP (VP (VBZ is) (RB not) (ADVP (RB always)) (ADJP (JJ possible))) (CC and) (VP (MD can) (ADVP (RB hardly)) (VP (VB be) (VP (VBN obtained) (PP (ADVP (RB just)) (IN by) (S (VP (VBG having) (NP (NP (DT a) (NN look)) (PP (IN at) (NP (NP (DT the) (NN program) (POS 's)) (NN structure))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP introduce) (NP (NP (DT a) (NN method)) (PP (IN for) (S (VP (VBG solving) (NP (DT the) (NN equivalent) (NN mutant) (NN problem)) (S (VP (VBG using) (NP (NP (DT a) (NN constraint) (NN representation)) (PP (IN of) (NP (NP (DT the) (NN program)) (CC and) (NP (PRP$ its) (NN mutant)))))))))))) (. .))
(S (PP (IN In) (ADVP (RB particularly))) (NP (DT the) (NN approach)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (S (VP (VBG distinguishing) (NP (NP (NN test) (NNS cases)) (, ,) (FW i.e.) (, ,) (NP (NP (NN test) (NNS inputs)) (SBAR (WHNP (WDT that)) (S (VP (VBP force) (S (NP (NP (DT the) (NN program)) (CC and) (NP (PRP$ its) (NN mutant))) (VP (TO to) (VP (VB behave) (PP (IN in) (NP (DT a) (JJ different) (NN way)))))))))))))))) (. .))
(S (PP (IN Beside) (NP (NP (DT the) (NNS foundations)) (PP (IN of) (NP (DT the) (NN approach))))) (, ,) (PP (IN in) (NP (DT this) (NN paper))) (NP (PRP we)) (ADVP (RB also)) (VP (VBD present) (NP (NP (DT the) (NN algorithms)) (CC and) (NP (JJ first) (JJ empirical) (NNS results)))) (. .))
