(S (NP (DT This) (NN paper)) (VP (VBZ is) (VP (VBN concerned) (PP (IN with) (NP (NP (DT the) (JJ computational) (NN complexity)) (PP (IN of) (NP (NN equivalence) (CC and) (NN minimisation))))) (PP (IN for) (NP (NN automata))) (PP (IN with) (NP (NP (NN transition) (NNS weights)) (PP (IN in) (NP (NP (DT the) (NN field) (NN Q)) (PP (IN of) (NP (JJ rational) (NNS numbers))))))))) (. .))
(S (NP (PRP We)) (VP (VBP use) (NP (ADJP (JJ polynomial) (NP-TMP (NP (NN identity) (NN testing)) (CC and) (NP (DT the) (NN Isolation)))) (NNP Lemma)) (S (VP (TO to) (VP (VB obtain) (NP (NN complexity) (NNS bounds))))) (, ,) (S (VP (VBG focussing) (PP (IN on) (NP (NP (DT the) (NN class) (NN NC)) (PP (IN of) (NP (NP (NNS problems)) (PP (IN within) (NP (NP (NN P)) (ADJP (JJ solvable) (PP (IN in) (NP (JJ polylogarithmic) (JJ parallel) (NN time))))))))))))) (. .))
(S (PP (IN For) (NP (ADJP (NP (JJ finite) (NN Q)) (HYPH -) (VBN weighted)) (NN automata))) (, ,) (NP (PRP we)) (VP (VBP give) (NP (NP (DT a) (VBN randomised) (NN NC) (NN procedure)) (SBAR (WHNP (WDT that)) (S (NP (NP (CC either) (NNS outputs)) (SBAR (WHNP (WDT that)) (S (NP (CD two) (NN automata)) (VP (VP (VBP are) (ADJP (JJ equivalent))) (CC or) (VP (VBZ returns) (NP (NP (DT a) (NN word)) (SBAR (WHPP (IN on) (WHNP (WDT which))) (S (NP (PRP they)) (VP (VBP differ)))))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP give) (NP (NP (DT an) (NN NC) (NN procedure)) (PP (IN for) (S (VP (VBG deciding) (SBAR (IN whether) (S (NP (DT a) (VBN given) (NN automaton)) (VP (VBZ is) (ADJP (JJ minimal))))))))) (, ,) (CONJP (RB as) (RB well) (IN as)) (NP (NP (DT a) (VBN randomised) (NN NC) (NN procedure)) (SBAR (WHNP (WDT that)) (S (VP (VBZ minimises) (NP (DT an) (NN automaton))))))) (. .))
(S (NP (PRP We)) (VP (VBP consider) (NP (ADJP (JJ probabilistic)) (NN automata)) (PP (IN with) (NP (NNS rewards))) (, ,) (ADJP (JJ similar) (PP (IN to) (NP (NNP Markov) (NN Decision) (NNS Processes))))) (. .))
(S (PP (IN For) (NP (DT these) (NN automata))) (NP (PRP we)) (VP (VBP consider) (NP (NP (NP (CD two) (NNS notions)) (PP (IN of) (NP (NN equivalence)))) (: :) (NP (NN expectation) (NML (NML (NN equivalence)) (CC and) (NML (NN distribution) (NN equivalence)))))) (. .))
(S (NP (DT The) (JJ former)) (VP (VBZ requires) (SBAR (IN that) (S (NP (CD two) (NNS automata)) (VP (VBP have) (NP (NP (DT the) (JJ same) (VBN expected) (NN reward)) (PP (IN on) (NP (DT each) (NN input) (NN word)))) (, ,) (SBAR (IN while) (S (NP (DT the) (JJ latter)) (VP (VBZ requires) (SBAR (IN that) (S (NP (DT each) (NN input) (NN word)) (VP (VB induce) (NP (DT the) (JJ same) (NN distribution)) (PP (IN on) (NP (NP (NNS rewards)) (PP (IN in) (NP (DT each) (NN automaton))))))))))))))) (. .))
(S (PP (IN For) (NP (DT both) (NNS notions))) (NP (PRP we)) (VP (VBP give) (NP (NNS algorithms)) (PP (IN for) (S (VP (VBG deciding) (NP (NN equivalence)) (PP (IN by) (NP (NN reduction))) (PP (IN to) (NP (ADJP (NML (NML (NN equivalence)) (PP (IN of) (NP (NN Q)))) (HYPH -) (VBN weighted)) (NN automata))))))) (. .))
(S (ADVP (RB Finally)) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (DT the) (ADJP (NP (NML (NN equivalence) (NN problem)) (PP (IN for) (NP (NN Q)))) (HYPH -) (VBN weighted)) (ADJP (RB visibly) (JJ pushdown)) (NN automata)) (VP (VBZ is) (NP (NN logspace) (ADJP (JJ equivalent) (PP (IN to) (NP (DT the) (JJ polynomial) (NN identity) (NN testing)))) (NN problem)))))) (. .))
