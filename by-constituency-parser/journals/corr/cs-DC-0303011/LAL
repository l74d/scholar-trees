(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT an) (JJ efficient) (JJ lock-free) (NN algorithm)) (PP (IN for) (NP (NP (NN parallel) (JJ accessible) (JJ hash) (NNS tables)) (PP (IN with) (NP (JJ open) (NN addressing))))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ promises) (NP (NP (ADJP (JJR more) (JJ robust)) (NN performance) (CC and) (NN reliability)) (PP (IN than) (NP (JJ conventional) (JJ lock-based) (NNS implementations))))))))) (. .))
(S (`` ``) (ADJP (JJ Lock-free)) ('' '') (VP (VBZ means) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN guaranteed) (SBAR (IN that) (S (ADVP (RB always)) (NP (QP (IN at) (JJS least) (CD one)) (NN process)) (VP (VBZ completes) (NP (PRP$ its) (NN operation)) (PP (IN within) (NP (NP (DT a) (JJ bounded) (NN number)) (PP (IN of) (NP (NNS steps))))))))))))) (. .))
(S (PP (IN For) (NP (DT a) (JJ single) (NN processor) (NN architecture))) (NP (PRP$ our) (NN solution)) (VP (VBZ is) (ADJP (ADJP (RB as) (JJ efficient)) (PP (IN as) (NP (JJ sequential) (NN hash) (NNS tables))))) (. .))
(S (PP (IN On) (NP (DT a) (NN multiprocessor) (NN architecture))) (NP (DT this)) (VP (VBZ is) (ADVP (RB also)) (NP (DT the) (NN case)) (SBAR (WHADVP (WRB when)) (S (NP (DT all) (NNS processors)) (VP (VBP have) (NP (JJ comparable) (NNS speeds)))))) (. .))
(S (NP (DT The) (NN algorithm)) (VP (VBZ allows) (NP (NP (NNS processors)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBP have) (NP (ADJP (RB widely) (JJ different)) (NNS speeds))) (CC or) (VP (VBN come) (PP (TO to) (NP (DT a) (NN halt))))))))) (. .))
(S (NP (PRP It)) (VP (VP (MD can) (VP (ADVP (RB easily)) (VB be) (VP (VBN implemented) (S (VP (VBG using) (NP (JJ C-like) (NNS languages))))))) (CC and) (VP (VBZ requires) (PP (IN on) (NP (NN average))) (NP (NP (ADJP (RB only) (JJ constant)) (NN time)) (PP (IN for) (NP (NP (NN insertion) (, ,) (NN deletion) (CC or) (NN accessing)) (PP (IN of) (NP (NNS elements)))))))) (. .))
(S (NP (DT The) (NN algorithm)) (VP (VBZ allows) (S (NP (DT the) (NN hash) (NNS tables)) (VP (TO to) (VP (VB grow) (CC and) (VB shrink) (SBAR (WHADVP (WRB when)) (S (VP (VBN needed)))))))) (. .))
(S (NP (JJ Lock-free) (NNS algorithms)) (VP (VBP are) (ADJP (JJ hard) (SBAR (S (VP (TO to) (VP (VB design) (ADVP (RB correctly))))))) (, ,) (SBAR (RB even) (WRB when) (S (ADJP (RB apparently) (RB straightforward))))) (. .))
(S (S (VP (VBG Ensuring) (NP (NP (DT the) (NN correctness)) (PP (IN of) (NP (DT the) (NN design)))) (PP (IN at) (NP (DT the) (JJS earliest) (JJ possible) (NN stage))))) (VP (VBZ is) (NP (NP (DT a) (JJ major) (NN challenge)) (PP (IN in) (NP (DT any) (JJ responsible) (NN system) (NN development))))) (. .))
(S (PP (IN In) (NP (NP (NN view)) (PP (IN of) (NP (NP (DT the) (NN complexity)) (PP (IN of) (NP (DT the) (NN algorithm))))))) (, ,) (NP (PRP we)) (VP (VBD turned) (PP (TO to) (NP (DT the) (JJ interactive) (NN theorem) (NN prover) (NNP PVS))) (PP (IN for) (NP (JJ mechanical) (NN support)))) (. .))
(S (NP (PRP We)) (VP (VP (VBP employ) (NP (JJ standard) (JJ deductive) (NN verification) (NNS techniques)) (S (VP (TO to) (VP (VB prove) (NP (NP (QP (IN around) (CD 200)) (NN invariance) (NNS properties)) (PP (IN of) (NP (PRP$ our) (NN algorithm)))))))) (, ,) (CC and) (VP (VB describe) (SBAR (WHADVP (WRB how)) (S (NP (DT this)) (VP (VBZ is) (VP (VBN achieved) (PP (IN with) (NP (DT the) (NN theorem) (NN prover) (NP (NNP PVS)))))))))) (. .))
