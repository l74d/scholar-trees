(S (NP (DT A) (NN determinacy) (NN race)) (VP (VBZ occurs) (SBAR (IN if) (S (S (NP (QP (CD two) (CC or) (JJR more)) (ADJP (RB logically) (JJ parallel)) (NNS instructions)) (VP (NN access) (NP (DT the) (JJ same) (NN memory) (NN location)))) (CC and) (S (NP (NP (QP (IN at) (JJS least) (CD one))) (PP (IN of) (NP (PRP them)))) (VP (NNS tries) (S (VP (TO to) (VP (VB modify) (NP (PRP$ its) (NN content)))))))))) (. .))
(S (NP (NNS Races)) (ADVP (RB often)) (VP (VBP lead) (PP (TO to) (NP (ADJP (JJ nondeterministic) (CC and) (JJ incorrect)) (NN program) (NN behavior)))) (. .))
(S (NP (DT A) (NN data) (NN race)) (VP (VBZ is) (NP (NP (DT a) (JJ special) (NN case)) (PP (IN of) (NP (DT a) (NN determinacy) (NN race))) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB be) (VP (VBN eliminated) (PP (IN by) (S (VP (VP (VBG associating) (NP (DT a) (NN mutual-exclusion) (NN lock))) (CC or) (VP (VBG allowing) (NP (NP (JJ atomic) (NNS accesses)) (PP (TO to) (NP (DT the) (NN memory) (NN location))))))))))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (JJ such) (NNS solutions)) (VP (MD can) (VP (VB reduce) (NP (NN parallelism)) (PP (IN by) (S (VP (VBG serializing) (NP (NP (DT all) (NNS accesses)) (PP (TO to) (NP (DT that) (NN location))))))))) (. .))
(S (PP (IN For) (NP (JJ associative) (CC and) (JJ commutative) (NNS updates))) (, ,) (NP (NNS reducers)) (VP (VBP allow) (NP (JJ parallel) (JJ race-free) (NNS updates)) (PP (IN at) (NP (NP (DT the) (NN expense)) (PP (IN of) (S (VP (VBG using) (NP (DT some) (JJ extra) (NN space)))))))) (. .))
(S (NP (PRP We)) (VP (VBP ask) (NP (DT the) (JJ following) (NN question))) (. .))
(SBARQ (PP (VBN Given) (NP (NP (DT a) (JJ fixed) (NN budget)) (PP (IN of) (NP (JJ extra) (NN space))) (SBAR (S (VP (TO to) (VP (VB mitigate) (NP (NP (DT the) (NN cost)) (PP (IN of) (NP (NP (NNS races)) (PP (IN in) (NP (DT a) (JJ parallel) (NN program)))))))))))) (, ,) (SBAR (WHNP (WDT which) (NN memory) (NNS locations)) (S (VP (MD should) (VP (VB be) (VP (VBN assigned) (NP (NNS reducers))))))) (CC and) (WHADVP (WHADVP (WRB how)) (SQ (MD should) (NP (DT the) (NN space)) (VP (VB be) (VP (VBN distributed) (PP (IN among) (NP (DT the) (NNS reducers))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB minimize) (NP (DT the) (JJ overall) (NN running) (NN time)))))))))) (. ?))
(S (NP (PRP We)) (VP (VBP argue) (SBAR (IN that) (S (NP (DT the) (NNS races)) (VP (MD can) (VP (VB be) (VP (VBN captured) (PP (IN by) (NP (NP (DT a) (JJ directed) (JJ acyclic) (NN graph)) (PRN (-LRB- -LRB-) (NP (NNP DAG)) (-RRB- -RRB-)) (, ,) (PP (IN with) (NP (NP (NP (NNS nodes)) (VP (VBG representing) (NP (NN memory) (NNS cells)))) (CC and) (NP (NP (JJ arcs)) (VP (VBG representing) (NP (NP (JJ read-write) (NNS dependencies)) (PP (IN between) (NP (NNS cells)))))))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB then)) (VP (VB formulate) (NP (PRP$ our) (NN optimization) (NN problem)) (PP (IN on) (NP (NNP DAGs)))) (. .))
(S (NP (PRP We)) (VP (VBP concentrate) (PP (IN on) (NP (NP (DT a) (NN variation)) (PP (IN of) (NP (DT this) (NN problem))) (SBAR (WHADVP (WRB where)) (S (NP (NP (NN space) (NN reuse)) (PP (IN among) (NP (NNS reducers)))) (VP (VBZ is) (VP (VBN allowed) (PP (IN by) (S (VP (VP (VBG routing) (NP (JJ extra) (NN space)) (PP (IN along) (NP (NP (DT a) (ADJP (NN source) (TO to) (VB sink)) (NN path)) (PP (IN of) (NP (DT the) (NNP DAG)))))) (CC and) (VP (VBG using) (NP (PRP it)) (PP (IN in) (NP (NP (DT the) (NN construction)) (PP (IN of) (NP (NNS reducers))) (PP (IN along) (NP (DT the) (NN path)))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP consider) (NP (NP (CD two) (NNS reducers)) (CC and) (NP (NP (DT the) (JJ corresponding) (NN duration) (NNS functions)) (PRN (-LRB- -LRB-) (INTJ (FW i.e.)) (, ,) (NP (NP (NN reduction) (NN time)) (PP (IN as) (NP (NP (DT a) (NN function)) (PP (IN of) (NP (NN space) (NN budget)))))) (-RRB- -RRB-))))) (. .))
(S (NP (PRP We)) (VP (VBP generalize) (NP (PRP$ our) (JJ race-avoiding) (JJ space-time) (NN tradeoff) (NN problem)) (PP (TO to) (NP (NP (DT a) (JJ discrete) (JJ resource-time) (NN tradeoff) (NN problem)) (PP (IN with) (NP (NP (JJ general) (JJ non-increasing) (NN duration) (NNS functions)) (CC and) (NP (NP (NN resource) (NN reuse)) (PP (IN over) (NP (NNS paths))))))))) (. .))
(S (S (PP (IN For) (NP (JJ general) (NNP DAGs))) (, ,) (NP (DT the) (NN offline) (NN problem)) (VP (VBZ is) (ADJP (RB strongly) (NNP NP-hard)) (PP (IN under) (NP (DT all) (CD three) (NN duration) (NNS functions))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP give) (NP (NN approximation) (NN algorithms)))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VP (VBP prove) (NP (NP (NN hardness)) (PP (IN of) (NP (NN approximation))) (PP (IN for) (NP (DT the) (JJ general) (NN resource-time) (NN tradeoff) (NN problem))))) (CC and) (VP (VB give) (NP (NP (DT a) (JJ pseudo-polynomial) (NN time) (NN algorithm)) (PP (IN for) (NP (JJ series-parallel) (NNP DAGs)))))) (. .))
