(S (VP (VBN Dedicated) (PP (TO to) (NP (NP (DT the) (NN memory)) (PP (IN of) (NP (NNP Edsger) (NNP W.Dijkstra)))))) (. .))
(S (NP (NP (NN Representation) (NN independence)) (CC or) (NP (JJ relational) (NN parametricity))) (VP (VP (ADVP (RB formally)) (VBZ characterizes) (NP (NP (DT the) (NN encapsulation)) (VP (VBN provided) (PP (IN by) (NP (NN language) (NNS constructs))) (PP (IN for) (NP (NNS data) (NN abstraction)))))) (CC and) (VP (NNS justifies) (NP (NP (VBG reasoning)) (PP (IN by) (NP (NN simulation)))))) (. .))
(S (S (NP (NN Representation) (NN independence)) (VP (VBZ has) (VP (VBN been) (VP (VBN shown) (PP (PP (IN for) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (NNS languages) (CC and) (NNS constructs))))) (CC but) (RB not) (PP (IN for) (NP (NP (VBN shared) (NNS references)) (PP (TO to) (NP (JJ mutable) (NN state)))))))))) (: ;) (S (ADVP (RB indeed)) (NP (PRP it)) (VP (VBZ fails) (PP (IN in) (ADJP (JJ general))) (PP (IN for) (NP (JJ such) (NNS languages))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ formulates) (NP (NP (NN representation) (NN independence)) (PP (IN for) (NP (NNS classes)))) (, ,) (PP (IN in) (NP (NP (DT an) (JJ imperative) (, ,) (JJ object-oriented) (NN language)) (PP (IN with) (NP (NP (NP (NNS pointers)) (, ,) (NP (VBG subclassing)) (CC and) (NP (JJ dynamic) (NN dispatch))) (, ,) (NP (NN class) (VBN oriented) (NN visibility) (NN control)) (, ,) (NP (JJ recursive) (NNS types) (CC and) (NNS methods)) (, ,) (CC and) (NP (NP (DT a) (JJ simple) (NN form)) (PP (IN of) (NP (NN module))))))))) (. .))
(S (NP (NP (DT An) (NN instance)) (PP (IN of) (NP (DT a) (NN class)))) (VP (VBZ is) (VP (VBN considered) (S (VP (TO to) (VP (VB implement) (NP (DT an) (NN abstraction)) (S (VP (VBG using) (NP (NP (JJ private) (NNS fields)) (CC and) (NP (JJ so-called) (NN representation) (NNS objects)))))))))) (. .))
(S (NP (NP (NN Encapsulation)) (PP (IN of) (NP (NN representation) (NNS objects)))) (VP (VBZ is) (VP (VBN expressed) (PP (IN by) (NP (NP (DT a) (NN restriction)) (, ,) (VP (VBN called) (S (NP (NN confinement)))) (, ,) (PP (IN on) (NP (NN aliasing))))))) (. .))
(S (NP (NN Representation) (NN independence)) (VP (VBZ is) (VP (VBN proved) (PP (IN for) (NP (NP (NNS programs)) (VP (VBG satisfying) (NP (DT the) (NN confinement) (NN condition))))))) (. .))
(S (NP (NP (DT A) (JJ static) (NN analysis))) (VP (VBZ is) (VP (VBN given) (PP (IN for) (NP (NN confinement))) (SBAR (WHNP (IN that)) (S (VP (VBZ accepts) (NP (NP (JJ common) (NNS designs)) (PP (JJ such) (IN as) (NP (NP (DT the) (NN observer)) (CC and) (NP (NN factory) (NNS patterns)))))))))) (. .))
(S (NP (DT The) (NN formalization)) (VP (VBZ takes) (PP (IN into) (NP (NN account))) (NP (CONJP (RB not) (RB only)) (NP (NP (DT the) (JJ usual) (NN interface)) (PP (IN between) (NP (NP (DT a) (NN client)) (CC and) (NP (NP (DT a) (NN class)) (SBAR (WHNP (WDT that)) (S (VP (VBZ provides) (NP (DT an) (NN abstraction))))))))) (CONJP (CC but) (RB also)) (NP (NP (DT the) (NN interface)) (PRN (-LRB- -LRB-) (VP (ADVP (RB often)) (VBN called) (S (ADJP (`` ``) (ADJP (JJ protected)) ('' '')))) (-RRB- -RRB-)) (PP (IN between) (NP (NP (DT the) (NN class)) (CC and) (NP (PRP$ its) (NNS subclasses))))))) (. .))
