(S (NP (PRP$ Their) (NN algorithm)) (, ,) (ADVP (RB however)) (, ,) (VP (NNS guarantees) (NP (DT this) (NN bound)) (PP (ADVP (RB only)) (IN for) (NP (NN cache-coherent) (PRN (-LRB- -LRB-) (NNP CC) (-RRB- -RRB-)) (NNS multiprocessors))) (, ,) (S (VP (VBG leaving) (ADJP (RP open)) (NP (NP (DT the) (NN question)) (PP (IN of) (SBAR (IN whether) (S (NP (DT a) (JJ similar) (NN bound)) (VP (VBZ is) (ADJP (JJ possible)) (PP (IN for) (NP (JJ distributed) (JJ shared) (NN memory) (PRN (-LRB- -LRB-) (NNP DSM) (-RRB- -RRB-)) (NNS multiprocessors))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP answer) (NP (DT this) (NN question)) (ADVP (RB affirmatively)) (PP (IN by) (S (VP (VBG designing) (NP (NP (DT an) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ satisfies) (NP (NP (DT the) (JJ same) (NN complexity) (NN bound)) (PP (IN as) (NP (NNP Golab) (CC and) (NNP Hendler) (POS 's))) (PP (IN for) (NP (DT both) (NNP CC) (CC and) (NNP DSM) (NNS multiprocessors)))))))))))) (. .))
(S (NP (PRP$ Our) (NN algorithm)) (VP (VBZ has) (NP (NP (DT some) (JJ additional) (NNS advantages)) (PP (IN over) (NP (NNP Golab) (CC and) (NNP Hendler) (POS 's)))) (: :) (S (S (PRN (-LRB- -LRB-) (NN i) (-RRB- -RRB-)) (NP (PRP$ its) (NN Exit) (NN section)) (VP (VBZ is) (ADJP (JJ wait-free)))) (, ,) (S (PRN (-LRB- -LRB-) (NN ii) (-RRB- -RRB-)) (NP (PRP it)) (VP (VBZ uses) (NP (RB only) (DT the) (NNP Fetch-and-Store) (NN instruction)))) (, ,) (CC and) (S (PRN (-LRB- -LRB-) (NN iii) (-RRB- -RRB-)) (PP (IN on) (NP (DT a) (NNP CC) (NN machine))) (NP (PRP$ our) (JJ algorithm)) (VP (VBZ needs) (S (NP (DT each) (NN process)) (VP (TO to) (VP (VB have) (NP (NP (DT a) (NN cache)) (PP (IN of) (NP (QP (RB only) ($ $) (NNP O)) (PRN (-LRB- -LRB-) (CD 1) (-RRB- -RRB-)) ($ $) (NNS words))))))) (, ,) (SBAR (IN while) (S (NP (PRP$ their) (NN algorithm)) (VP (VBZ needs) (NP ($ $) (NNP O) (PRN (-LRB- -LRB-) (FW n) (-RRB- -RRB-)) ($ $) (NNS words))))))))) (. .))
