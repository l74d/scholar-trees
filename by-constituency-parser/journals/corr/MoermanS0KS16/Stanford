(S (NP (PRP We)) (VP (VBP present) (NP (DT an) (NML (NN Angluin) (HYPH -) (NN style)) (NN algorithm)) (S (VP (TO to) (VP (VB learn) (NP (NP (JJ nominal) (NN automata)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (NP (NP (NNS acceptors)) (PP (IN of) (NP (NP (NNS languages)) (PP (IN over) (NP (JJ infinite) (ADJP (-LRB- -LRB-) (JJ structured) (-RRB- -RRB-)) (NNS alphabets)))))))))))))) (. .))
(S (NP (NP (DT The) (JJ abstract) (NN approach)) (SBAR (S (NP (PRP we)) (VP (VBP take))))) (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (ADVP (RB seamlessly)) (VP (VB extend) (NP (NP (JJ known) (NNS variations)) (PP (IN of) (NP (DT the) (NN algorithm)))) (PP (IN to) (NP (DT this) (JJ new) (NN setting))))))) (. .))
(S (PP (IN In) (ADJP (JJ particular))) (NP (PRP we)) (VP (MD can) (VP (VB learn) (NP (NP (DT a) (NN subclass)) (PP (IN of) (NP (JJ nominal) (JJ non-deterministic) (NN automata)))))) (. .))
(S (NP (NP (DT An) (NN implementation)) (VP (VBG using) (NP (NP (DT a) (ADJP (RB recently) (VBN developed)) (NNP Haskell) (NN library)) (PP (IN for) (NP (JJ nominal) (NN computation)))))) (VP (VBZ is) (VP (VBN provided) (PP (IN for) (NP (JJ preliminary) (NNS experiments))))) (. .))
