(S (S (VP (TO To) (VP (VB obtain) (NP (NP (DT a) (JJR better) (NN understanding)) (PP (IN of) (NP (NP (DT the) (NN trade) (HYPH -) (NNS offs)) (PP (IN between) (NP (JJ various) (NNS objectives))))))))) (, ,) (NP (NNP Bi-Objective) (NML (NML (NNP Integer) (NNP Programming)) (-LRB- -LRB-) (NML (NN BOIP)) (-RRB- -RRB-)) (NNS algorithms)) (VP (VP (VBP calculate) (NP (NP (DT the) (NN set)) (PP (IN of) (NP (DT all) (JJ non-dominated) (NNS vectors))))) (CC and) (VP (VB present) (NP (NP (DT these)) (PP (IN as) (NP (DT the) (NN solution)))) (PP (IN to) (NP (DT a) (NN BOIP) (NN problem))))) (. .))
(S (ADVP (RB Historically)) (, ,) (NP (DT these) (NNS algorithms)) (VP (VBP have) (VP (VBN been) (VP (VBN compared) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NP (ADJP (JJ single) (HYPH -) (JJ objective)) (NNS IPs)) (SBAR (S (VP (VBD solved))))))) (CC and) (NP (NP (JJ total) (NN CPU) (NN time)) (VP (VBN taken) (S (VP (TO to) (VP (VB produce) (NP (DT the) (NN solution)) (PP (IN to) (NP (DT a) (NN problem))))))))))))))) (. .))
(S (NP (DT This)) (VP (VBZ is) (ADJP (JJ equitable)) (, ,) (SBAR (IN as) (S (NP (NNS researchers)) (VP (MD can) (ADVP (RB often)) (VP (VB have) (NP (NN access)) (PP (IN to) (S (ADVP (RB widely)) (VP (VBG differing) (NP (NP (NNS amounts)) (PP (IN of) (NP (VBG computing) (NN power)))))))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (DT the) (JJ real) (NN world)) (VP (VBZ has) (ADVP (RB recently)) (VP (VBN seen) (NP (NP (DT a) (JJ large) (NN uptake)) (PP (IN of) (NP (JJ multi-core) (NNS processors)))) (PP (IN in) (NP (NP (NNS computers)) (, ,) (NP (NNS laptops)) (, ,) (NP (NNS tablets)) (CC and) (NP (RB even) (JJ mobile) (NNS phones)))))) (. .))
(S (PP (IN With) (NP (NP (DT this)) (PP (IN in) (NP (NN mind))))) (, ,) (NP (PRP we)) (VP (VBP look) (PP (IN at) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (ADVP (JJS best)) (VP (VB utilise) (NP (JJ parallel) (NN processing)) (S (VP (TO to) (VP (VB improve) (NP (NP (DT the) (VBN elapsed) (NN time)) (PP (IN of) (NP (NN optimisation) (NNS algorithms))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (CD two) (NNS methods)) (PP (IN of) (S (VP (VBG parallelising) (NP (NP (DT the) (JJ recursive) (NN algorithm)) (VP (VBN presented) (PP (IN by) (NP (NNP Ozlen) (, ,) (NNP Burton) (CC and) (NNP MacRae)))))))))) (. .))
(S (NP (DT Both) (JJ new) (NNS methods)) (VP (VP (VBP utilise) (NP (CD two) (NNS threads))) (CC and) (VP (VB improve) (S (VP (VBG running) (NP (NNS times)))))) (. .))
(NP (NP (NP (CD One)) (PP (IN of) (NP (NP (DT the) (JJ new) (NNS methods)) (, ,) (NP (DT the) (NNP Meeting) (NN algorithm)) (, ,) (NP (NNS halves))))) (VP (VBG running) (NP (NN time)) (S (VP (TO to) (VP (VB achieve) (PP (IN near) (HYPH -) (NP (JJ perfect) (NN parallelisation))))))) (. .))
(S (S (NP (DT The) (NNS results)) (VP (VBP are) (VP (VBN compared) (PP (IN with) (NP (NP (DT the) (NN efficiency)) (PP (IN of) (NP (NN parallelisation))))) (PP (IN within) (NP (NP (DT the) (JJ commercial) (NN IP) (NN solver)) (NP (NNP IBM) (NNP ILOG) (NNP CPLEX))))))) (, ,) (CC and) (S (NP (DT the) (JJ new) (NNS methods)) (VP (VBP are) (DT both) (VP (VBN shown) (S (VP (TO to) (VP (VB perform) (NP (JJR better)))))))) (. .))
