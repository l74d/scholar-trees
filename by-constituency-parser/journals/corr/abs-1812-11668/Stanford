(S (NP (DT This) (NN paper)) (VP (VBZ describes) (NP (NP (DT the) (NN design) (CC and) (NN implementation)) (PP (IN of) (NP (DT a) (JJ comprehensive) (NN OCaml) (NN interface)))) (PP (IN to) (NP (NP (DT the) (NNPS Sundials) (NN library)) (PP (IN of) (NP (NP (JJ numeric) (NNS solvers)) (PP (IN for) (NP (NP (JJ ordinary) (JJ differential) (NNS equations)) (, ,) (NP (JJ differential) (JJ algebraic) (NNS equations)) (, ,) (CC and) (NP (JJ non-linear) (NNS equations))))))))) (. .))
(S (NP (DT The) (NN interface)) (VP (VP (VBZ provides) (NP (DT a) (ADJP (ADJP (JJ convenient)) (CC and) (ADJP (NN memory) (HYPH -) (JJ safe))) (NN alternative)) (PP (IN to) (S (VP (VBG using) (NP (NNP Sundials)) (ADVP (RB directly)) (PP (IN from) (NP (NN C))))))) (CC and) (VP (VBZ facilitates) (NP (NN application) (NN development)) (PP (IN by) (S (VP (VBG integrating) (PP (IN with) (NP (NML (JJR higher) (HYPH -) (NN level)) (NN language) (NNS features))) (, ,) (PP (IN like) (NP (NP (ADJP (NP (NN garbage)) (HYPH -) (VBN collected)) (NN memory) (NN management)) (, ,) (NP (JJ algebraic) (NNS data) (NNS types)) (, ,) (CC and) (NP (NNS exceptions))))))))) (. .))
(S (S (NP (PRP$ Our) (NN benchmark) (NNS results)) (VP (VBP suggest) (SBAR (IN that) (S (NP (DT the) (NN interface) (NN overhead)) (VP (VBZ is) (ADJP (JJ acceptable))))))) (: :) (S (NP (DT the) (JJ standard) (NNS examples)) (VP (VBP are) (ADVP (RB rarely)) (ADJP (ADJP (ADVP (RB twice) (RB as)) (JJ slow) (PP (IN in) (NP (NN OCaml)))) (PP (IN than) (PP (IN in) (NP (NN C))))))) (, ,) (CC and) (S (ADVP (RB often)) (ADJP (NP (QP (RBR less) (IN than) (CD 50)) (NN %)) (JJR slower))) (. .))
(S (NP (NP (DT The) (NNS challenges)) (PP (IN in) (S (VP (VBG interfacing) (PP (IN with) (NP (NNS Sundials))))))) (VP (VBP are) (UCP (PP (TO to) (NP (NP (ADVP (RB efficiently) (CC and) (RB safely)) (NML (NN share) (NNS data)) (NNS structures)) (PP (IN between) (NP (NNP OCaml) (CC and) (NNP C))))) (, ,) (S (VP (VP (TO to) (VP (VB support) (NP (NP (JJ multiple) (NNS implementations)) (PP (IN of) (NP (NP (NN vector) (NNS operations)) (CC and) (NP (JJ linear) (NNS solvers))))) (PP (IN through) (NP (DT a) (JJ common) (NN interface))))) (, ,) (CC and) (VP (TO to) (VP (VB manage) (NP (NNS calls) (CC and) (NN error)) (PP (NP (NN signalling)) (IN to)))))) (CC and) (PP (IN from) (NP (NNP OCaml))))) (. .))
(S (NP (PRP We)) (VP (VBP explain) (SBAR (WHADVP (WRB how)) (S (NP (PRP we)) (VP (VBD overcame) (NP (DT these) (NNS difficulties)) (S (VP (VBG using) (NP (NP (NP (DT a) (NN combination)) (PP (IN of) (NP (NP (JJ standard) (NNS techniques)) (PP (JJ such) (IN as) (NP (NP (JJ phantom) (NNS types)) (CC and) (NP (JJ polymorphic) (NNS variants))))))) (, ,) (RRC (CC and) (ADVP (RB carefully)) (VP (VBN crafted) (NP (NNS data) (NNS representations))))))))))) (. .))
