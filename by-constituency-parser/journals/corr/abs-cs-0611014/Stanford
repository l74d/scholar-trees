(S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (DT an) (NN environment)) (PP (IN for) (S (VP (VBG solving) (NP (NP (NN Prolog) (NNS problems)) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (VP (VBN been) (VP (VBN implemented) (PP (IN as) (NP (NP (DT a) (NN module)) (PP (IN for) (NP (DT the) (NML (JJ virtual) (NN laboratory)) (NNP VILAB))))))))))))))) (. .))
(S (PP (IN During) (NP (NP (DT the) (NN problem)) (VP (VBG solving) (NP (NNS processes))))) (NP (DT the) (NNS learners)) (VP (VBP get) (NP (JJ fast) (JJ adaptive) (NN feedback))) (. .))
(S (PP (IN As) (NP (NP (DT a) (NN result)) (VP (VBG analysing) (NP (NP (DT the) (NN learner) (POS 's)) (NNS actions))))) (NP (DT the) (NN system)) (VP (VBZ suggests) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NP (JJ suitable) (JJ auxiliary) (NNS predicates)) (SBAR (WHNP (WDT which)) (S (VP (MD will) (ADVP (RB also)) (VP (VB be) (VP (VBN checked) (PP (IN for) (NP (JJ proper) (NN implementation)))))))))))) (. .))
(S (NP (NP (DT The) (NN focus)) (PP (IN of) (NP (DT the) (NN environment)))) (VP (VBZ has) (VP (VBN been) (VP (VBN set) (PP (IN on) (NP (NP (NN robustness)) (CC and) (NP (DT the) (NN integration)))) (PP (IN in) (NP (NNP VILAB)))))) (. .))
