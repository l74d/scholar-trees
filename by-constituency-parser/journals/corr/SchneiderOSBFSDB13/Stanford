(S (NP (PRP We)) (VP (VBP introduce) (NP (NP (DT a) (NN framework)) (PP (IN for) (NP (JJ lightweight) (NN dependency) (NN syntax) (NN annotation))))) (. .))
(S (NP (PRP$ Our) (NN formalism)) (VP (VBZ builds) (PP (IN upon) (NP (NP (DT the) (JJ typical) (NN representation)) (PP (IN for) (NP (JJ unlabeled) (NNS dependencies))))) (, ,) (S (VP (VBG permitting) (NP (NP (DT a) (JJ simple) (NN notation)) (CC and) (NP (NN annotation) (NN workflow)))))) (. .))
(S (ADVP (RB Moreover)) (, ,) (NP (DT the) (NN formalism)) (VP (VBZ encourages) (NP (NNS annotators)) (S (VP (TO to) (VP (VB underspecify) (NP (NP (NNS parts)) (PP (IN of) (NP (DT the) (NN syntax)))) (SBAR (IN if) (S (S (VP (VBG doing) (ADVP (RB so)))) (VP (MD would) (VP (VB streamline) (NP (DT the) (NN annotation) (NN process)))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP demonstrate) (NP (NP (DT the) (NN efficacy)) (PP (IN of) (NP (NP (DT this) (NN annotation)) (PP (IN on) (NP (CD three) (NNS languages))))))) (CC and) (VP (VB develop) (NP (NNS algorithms)) (S (VP (TO to) (VP (VB evaluate) (CC and) (VB compare) (NP (JJ underspecified) (NNS annotations))))))) (. .))
