(S (NP (NNP Stencil) (NNS computations)) (, ,) (S (VP (VBG involving) (NP (NNS operations)) (PP (IN over) (NP (NP (DT the) (NNS elements)) (PP (IN of) (NP (DT an) (NN array))))))) (, ,) (VP (VBP are) (NP (NP (DT a) (JJ common) (NN programming) (NN pattern)) (PP (IN in) (NP (JJ scientific) (NML (NN computing) (, ,) (NNS games) (, ,) (CC and) (NN image)) (NN processing))))) (. .))
(S (PP (IN As) (NP (DT a) (NN programming) (NN pattern))) (, ,) (NP (NN stencil) (NNS computations)) (VP (VBP are) (ADJP (ADJP (RB highly) (JJ regular) (CC and) (JJ amenable)) (PP (IN to) (NP (NN optimisation) (CC and) (NN parallelisation))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NML (JJ general) (HYPH -) (NN purpose)) (NNS languages)) (VP (VBP obscure) (NP (NP (NP (DT this) (JJ regular) (NN pattern)) (PP (IN from) (NP (DT the) (NN compiler)))) (, ,) (CC and) (RB even) (NP (DT the) (NN programmer)) (, ,)) (S (VP (VP (VBG preventing) (NP (NN optimisation))) (CC and) (VP (VBG obfuscating) (PP (-LRB- -LRB-) (IN in) (-RRB- -RRB-) (NP (NN correctness))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ furthers) (NP (PRP$ our) (NN work)) (PP (IN on) (NP (NP (DT the) (ADJP (NP (NNP Ypnos) (NN domain)) (HYPH -) (JJ specific)) (NN language)) (PP (IN for) (NP (NP (NN stencil) (NNS computations)) (VP (VBN embedded) (PP (IN in) (NP (NNP Haskell))))))))) (. .))
(S (NP (NNP Ypnos)) (VP (VBZ allows) (NP (NP (JJ declarative) (, ,) (JJ abstract) (NN specification)) (PP (IN of) (NP (NN stencil) (NNS computations)))) (, ,) (S (VP (VBG exposing) (NP (NP (DT the) (NN structure)) (PP (IN of) (NP (DT a) (NN problem)))) (PP (PP (IN to) (NP (DT the) (NN compiler))) (CC and) (PP (IN to) (NP (NP (DT the) (NN programmer)) (PP (IN via) (NP (VBN specialised) (NN syntax))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP show) (NP (NP (DT the) (JJ decidable) (NN safety) (NN guarantee)) (SBAR (WHNP (WDT that)) (S (NP (ADJP (RB well) (HYPH -) (VBN formed)) (, ,) (ADJP (RB well) (HYPH -) (VBN typed)) (NNP Ypnos) (NNS programs)) (VP (MD can) (RB not) (VP (NP (NN index)) (PP (IN outside) (PP (IN of) (NP (NN array) (NNS boundaries)))))))))) (. .))
(S (S (ADVP (RB Thus)) (NP (NP (NN indexing)) (PP (IN in) (NP (NNP Ypnos)))) (VP (VBZ is) (ADJP (JJ safe)))) (CC and) (S (NP (NP (ADJP (VB run) (HYPH -) (NN time)) (NNS bounds)) (VP (VBG checking))) (VP (MD can) (VP (VB be) (VP (VBN eliminated))))) (. .))
(S (NP (NNP Program) (NN information)) (VP (VBZ is) (VP (VBN encoded) (PP (IN as) (NP (NNS types))) (, ,) (S (VP (VBG using) (NP (NP (DT the) (JJ advanced) (NML (NN type) (HYPH -) (NN system)) (NNS features)) (PP (IN of) (NP (DT the) (NNP Glasgow) (NNP Haskell) (NNP Compiler)))))) (, ,) (PP (IN with) (NP (NP (DT the) (ADJP (NP (JJ safe) (HYPH -) (NN indexing)) (JJ invariant))) (VP (VBN enforced) (PP (IN at) (VP (VB compile) (NP (NP (NN time)) (PP (IN via) (NP (NN type) (NN checking))))))))))) (. .))
