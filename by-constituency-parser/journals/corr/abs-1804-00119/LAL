(S (NP (PRP We)) (VP (VBP adapt) (NP (NP (DT the) (NN technique)) (PP (IN of) (NP (JJ type-generic) (NN programming)))) (PP (IN via) (NP (NP (NNS descriptions)) (VP (VBG pointing) (PP (IN into) (NP (DT a) (NN universe)))))) (PP (TO to) (NP (NP (DT the) (NN domain)) (PP (IN of) (NP (NP (JJ typed) (NNS languages)) (PP (IN with) (NP (NNS binders) (CC and) (NNS variables))))))) (, ,) (S (VP (VBG implementing) (NP (NP (DT a) (NN notion)) (PP (IN of) (`` ``) (NP (JJ syntax-generic) (NN programming)) ('' ''))) (PP (IN in) (NP (DT a) (ADJP (RB dependently) (VBN typed)) (VBG programming) (NN language)))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT an) (NNP Agda) (JJ library) (NN implementation)) (PP (IN of) (S (VP (JJ type-preserving) (NP (NP (NN renaming) (CC and) (NN substitution)) (PRN (-LRB- -LRB-) (PP (VBG including) (NP (NP (NN proofs)) (PP (IN about) (NP (PRP$ their) (NN behaviour))))) (-RRB- -RRB-))) (`` ``) (ADVP (ADVP (RB once)) (CC and) (PP (IN for) (NP (DT all)))) ('' '') (PP (IN over) (NP (NP (DT all) (JJ applicable) (NNS languages)) (VP (VBG using) (NP (PRP$ our) (NN technique)))))))))) (. .))
