(S (S (VP (VBG Combining) (NP (NP (NNS ideas)) (PP (IN from) (NP (NP (VBN distributed) (NN algorithms)) (CC and) (NP (VBG alternating) (NNS automata))))))) (, ,) (NP (PRP we)) (VP (VBP introduce) (NP (NP (DT a) (JJ new) (NN class)) (PP (IN of) (NP (NP (JJ finite) (NN graph) (NN automata)) (SBAR (WHNP (WDT that)) (S (VP (VBZ recognize) (ADVP (RB precisely)) (NP (NP (DT the) (NNS languages)) (PP (IN of) (NP (JJ finite) (NN graphs))) (ADJP (NN definable) (PP (IN in) (NP (JJ monadic) (JJ second-order) (NN logic)))))))))))) (. .))
(S (PP (IN By) (S (VP (VBG restricting) (NP (NNS transitions)) (S (VP (TO to) (VP (VB be) (ADJP (JJ nondeterministic) (CC or) (JJ deterministic)))))))) (, ,) (NP (PRP we)) (ADVP (RB also)) (VP (VB obtain) (NP (NP (CD two) (ADJP (RB strictly) (JJR weaker)) (NNS variants)) (PP (IN of) (NP (PRP$ our) (NN automata))) (SBAR (WHPP (IN for) (WHNP (WDT which))) (S (NP (DT the) (NN emptiness) (NN problem)) (VP (VBZ is) (ADJP (JJ decidable))))))) (. .))
(S (PP (IN As) (NP (DT an) (NN application))) (, ,) (NP (PRP we)) (VP (VBP suggest) (SBAR (WHADVP (WRB how)) (S (NP (JJ suitable) (NN graph) (NN automata)) (VP (MD might) (VP (VB be) (ADJP (ADJP (JJ useful)) (PP (IN in) (NP (NP (JJ formal) (NN verification)) (PP (IN of) (NP (JJ distributed) (NN algorithms)))))) (, ,) (S (VP (VBG using) (NP (NNP Floyd-Hoare) (NN logic))))))))) (. .))
