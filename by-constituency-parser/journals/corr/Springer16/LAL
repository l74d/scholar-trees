(S (NP (JJ Multi-language) (JJ virtual) (NNS machines)) (VP (VBP have) (NP (NP (DT a) (NN number)) (PP (IN of) (NP (NNS advantages))))) (. .))
(S (NP (PRP They)) (VP (VBP allow) (S (NP (NN software) (NNS developers)) (VP (TO to) (VP (VB use) (NP (NP (NN software) (NNS libraries)) (SBAR (WHNP (WDT that)) (S (VP (VBD were) (VP (VBN written) (PP (IN for) (NP (JJ different) (NN programming) (NNS languages)))))))))))) (. .))
(S (ADVP (RB Furthermore)) (, ,) (S (NP (NN language) (NNS implementors)) (VP (VBP do) (RB not) (VP (VB have) (S (VP (TO to) (VP (VB bother) (PP (IN with) (NP (JJ low-level) (NNP VM) (NN functionality))))))))) (CC and) (S (NP (PRP$ their) (NN implementation)) (VP (MD can) (VP (VB benefit) (PP (IN from) (NP (NP (NNS optimizations)) (PP (IN in) (NP (VBG existing) (JJ virtual) (NNS machines)))))))) (. .))
(S (NP (NNP MagLev)) (VP (VBZ is) (NP (NP (DT an) (NN implementation)) (PP (IN of) (NP (DT the) (NNP Ruby) (NN programming) (NN language))) (PP (IN on) (NP (NP (NN top)) (PP (IN of) (NP (NP (DT the) (NNP GemStone/S) (JJ virtual) (NN machine)) (PP (IN for) (NP (DT the) (NNP Smalltalk) (NN programming) (NN language))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN work))) (, ,) (NP (PRP we)) (VP (VBP present) (SBAR (WHADVP (WRB how)) (S (NP (NP (NN software) (NNS components)) (VP (VBN written) (PP (IN in) (NP (DT both) (NNS languages))))) (VP (MD can) (VP (VB interact)))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (NP (NNP MagLev)) (VP (VBZ unifies) (NP (NP (DT the) (NNP Smalltalk)) (CC and) (NP (DT the) (NNP Ruby) (NN object) (NN model))) (, ,) (S (VP (VBG taking) (PP (IN into) (NP (NN account))) (NP (NP (NNP Smalltalk) (NN meta) (NNS classes)) (, ,) (NP (NNP Ruby) (NN singleton) (NNS classes)) (, ,) (CC and) (NP (NNP Ruby) (NNS modules))))))))) (. .))
(S (ADVP (IN Besides)) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (S (NP (PRP we)) (VP (MD can) (VP (VB call) (NP (NNP Ruby) (NNS methods)) (PP (IN from) (NP (NNP Smalltalk)))))) (CC and) (ADVP (NN vice) (NN versa))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBD present) (NP (NP (NP (NNP MagLev) (POS 's)) (NN concept)) (PP (IN of) (NP (NP (NN bridge) (NNS methods)) (PP (IN for) (S (VP (VBG implementing) (NP (NNP Ruby) (NN method) (VBG calling) (NNS conventions))))))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP compare) (NP (PRP$ our) (NN solution)) (PP (TO to) (NP (NP (JJ other) (NN language) (NNS implementations)) (CC and) (NP (JJ virtual) (NNS machines))))) (. .))
