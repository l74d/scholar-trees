(S (NP (PRP We)) (VP (VBP investigate) (NP (NP (DT the) (NN interplay)) (PP (IN between) (NP (DT a) (NN modality)))) (PP (IN for) (S (VP (VBG controlling) (NP (NP (DT the) (NN behaviour)) (PP (IN of) (NP (JJ recursive) (JJ functional) (NNS programs)))) (PP (IN on) (NP (NP (JJ infinite) (NNS structures)) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (ADJP (RB completely) (JJ silent) (PP (IN in) (NP (DT the) (NN syntax))))))))))))) (. .))
(NP (NP (DT The) (JJ latter) (NNS means)) (SBAR (WHNP (WDT that)) (S (NP (NNS programs)) (VP (VBP do) (RB not) (VP (VB contain) (NP (`` ") (NP (NNS marks)) ('' ") (VP (VBG showing) (NP (NP (NP (DT the) (NN application)) (PP (IN of) (NP (DT the) (NN introduction)))) (CC and) (NP (NP (NN elimination) (NNS rules)) (PP (IN for) (NP (DT the) (NN modality))))))))))) (. .))
(S (NP (DT This)) (VP (VBZ shifts) (NP (NP (DT the) (NN burden)) (PP (IN of) (NP (NP (VBG controlling) (NN recursion)) (PP (IN from) (NP (NP (DT the) (NN programmer)) (PP (IN to) (NP (DT the) (NN compiler))))))))) (. .))
(S (S (VP (TO To) (VP (VB do) (NP (DT this))))) (, ,) (NP (PRP we)) (VP (VP (VBP introduce) (NP (NP (DT a) (VBN typed) (NN lambda) (NN calculus)) (NP (NP (DT a) (ADJP (JJ la)) (NNP Curry)) (PP (IN with) (NP (DT a) (JJ silent) (NN modality)))))) (CC and) (VP (VBN guarded) (NP (JJ recursive) (NNS types)))) (. .))
(S (NP (DT The) (NML (VP (VBG typing) (NP (NP (NN discipline) (NNS guarantees)) (NP (NN normalisation))) (CC and)))) (VP (MD can) (VP (VB be) (VP (VBN transformed) (PP (IN into) (NP (NP (DT an) (NN algorithm)) (SBAR (WHNP (WDT which)) (S (VP (VBZ infers) (NP (NP (DT the) (NN type)) (PP (IN of) (NP (DT a) (NN program)))))))))))) (. .))
