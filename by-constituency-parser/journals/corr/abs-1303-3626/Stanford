(S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (NP (DT a) (JJ non-blocking) (NNP Patricia) (NN trie) (NN implementation)) (PP (IN for) (NP (NP (DT an) (ADJP (JJ asynchronous)) (NML (VBN shared) (HYPH -) (NN memory)) (NN system)) (VP (VBG using) (S (VP (VB Compare) (NP (CC &) (NN Swap))))))))) (. .))
(S (S (NP (DT The) (NN trie)) (VP (VP (VBZ implements) (NP (DT a) (JJ linearizable) (NN set))) (CC and) (VP (VBZ supports) (NP (CD three) (NN update) (NNS operations))))) (: :) (S (NP (NN insert)) (VP (VBZ adds) (S (NP (DT an) (NN element)) (, ,) (VP (VP (VB delete) (SBAR (S (VP (VBZ removes) (NP (DT an) (NN element)))))) (CC and) (VP (VB replace) (SBAR (S (VP (VBZ replaces) (NP (CD one) (NN element)) (PP (IN by) (NP (DT another))))))))))) (. .))
(S (NP (DT The) (NML (S (VP (VB replace)))) (NN operation)) (VP (VBZ is) (ADJP (JJ interesting)) (SBAR (IN because) (S (NP (PRP it)) (VP (VBZ changes) (NP (NP (CD two) (JJ different) (NNS locations)) (PP (IN of) (NP (NN tree)))) (ADVP (RB atomically)))))) (. .))
(S (SBAR (IN If) (S (NP (DT all) (NN update) (NNS operations)) (VP (VBP modify) (NP (NP (JJ different) (NNS parts)) (PP (IN of) (NP (DT the) (NN trie))))))) (, ,) (NP (PRP they)) (VP (VBP run) (ADVP (RB completely)) (ADVP (RB concurrently))) (. .))
(S (NP (DT The) (NN implementation)) (ADVP (RB also)) (VP (VBZ supports) (NP (NP (DT a) (NML (NN wait) (HYPH -) (JJ free)) (NN find) (NN operation)) (, ,) (SBAR (WHNP (WDT which)) (S (ADVP (RB only)) (VP (VP (VBZ reads) (NP (VBN shared) (NN memory))) (CC and) (ADVP (RB never)) (VP (VBZ changes) (NP (DT the) (NNS data) (NN structure)))))))) (. .))
(S (ADVP (RB Empirically)) (, ,) (NP (PRP we)) (VP (VBP compare) (NP (PRP$ our) (NNS algorithms)) (PP (IN to) (NP (DT some) (VBG existing) (NN set) (NNS implementations)))) (. .))
