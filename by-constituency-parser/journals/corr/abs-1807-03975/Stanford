(S (NP (DT Every) (NML (NN Constraint) (NN Programming) (PRN (-LRB- -LRB-) (NP (NN CP)) (-RRB- -RRB-))) (NN solver)) (VP (VBZ exposes) (NP (NP (DT a) (NN library)) (PP (IN of) (NP (NP (NNS constraints)) (PP (IN for) (S (VP (VBG solving) (NP (JJ combinatorial) (NNS problems))))))))) (. .))
(S (PP (IN In) (NP (NN order) (S (VP (TO to) (VP (VB be) (ADJP (JJ useful))))))) (, ,) (NP (NN CP) (NNS solvers)) (VP (VBP need) (S (VP (TO to) (VP (VB be) (ADJP (NN bug) (HYPH -) (JJ free)))))) (. .))
(S (ADVP (RB Therefore)) (NP (NP (DT the) (NN testing)) (PP (IN of) (NP (DT the) (NN solver)))) (VP (VBZ is) (ADJP (JJ crucial) (S (VP (TO to) (VP (VB make) (S (NP (NNS developers) (CC and) (NNS users)) (ADJP (JJ confident)))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (DT a) (NNP Java) (NN library)) (S (VP (VBG allowing) (NP (DT any) (NNP JVM)) (PP (VBN based) (NP (NN solver) (S (VP (TO to) (VP (VB test) (SBAR (IN that) (S (NP (NP (DT the) (NNS implementations)) (PP (IN of) (NP (DT the) (JJ individual) (NNS constraints)))) (VP (VBP are) (ADJP (JJ correct))))))))))))) (. .))
(S (S (NP (DT The) (NN library)) (VP (MD can) (VP (VB be) (VP (VBN used) (PP (IN in) (NP (NP (DT a) (NN test) (NN suite)) (VP (VBN executed) (PP (IN in) (NP (DT a) (JJ continuous) (NN integration) (NN tool)))))))))) (CC or) (S (NP (PRP it)) (VP (MD can) (ADVP (RB also)) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB discover) (NP (JJ minimalist) (NNS instances)) (S (VP (VBG violating) (NP (NP (NP (DT some) (NNS properties)) (-LRB- -LRB-) (NP (NP (NN arc) (HYPH -) (NN consistency)) (, ,) (ADVP (FW etc))) (-RRB- -RRB-)) (PP (IN in) (NP (NN order)))) (S (VP (TO to) (VP (VB help) (NP (DT the) (NN developer)) (S (VP (TO to) (VP (VB identify) (NP (NP (DT the) (NN origin)) (PP (IN of) (NP (NP (DT the) (NN problem)) (VP (VBG using) (NP (JJ standard) (NNS debuggers))))))))))))))))))))) (. .))
