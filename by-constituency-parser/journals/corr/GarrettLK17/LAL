(S (NP (JJ Many) (JJ robotic) (NN planning) (NNS applications)) (VP (VBP involve) (NP (NP (JJ continuous) (NNS actions)) (PP (IN with) (NP (ADJP (RB highly) (JJ non-linear)) (NNS constraints))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (MD can) (RB not) (VP (VB be) (VP (VBN modeled) (S (VP (VBG using) (NP (NP (JJ modern) (NNS planners)) (SBAR (WHNP (WDT that)) (S (VP (VBP construct) (NP (DT a) (JJ propositional) (NN representation))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP introduce) (NP (NP (NNP STRIPStream)) (: :) (NP (NP (DT an) (NN extension)) (PP (IN of) (NP (DT the) (NNP STRIPS) (NN language))) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB model) (NP (DT these) (NNS domains)) (PP (IN by) (S (VP (VBG supporting) (NP (NP (DT the) (NN specification)) (PP (IN of) (NP (NP (NN blackbox) (NNS generators)) (SBAR (S (VP (TO to) (VP (VB handle) (NP (JJ complex) (NNS constraints))))))))))))))))))) (. .))
(S (NP (NP (DT The) (NNS outputs)) (PP (IN of) (NP (DT these) (NNS generators)))) (VP (VBP interact) (PP (IN with) (NP (NNS actions))) (PP (IN through) (NP (NP (ADJP (RB possibly) (JJ infinite)) (NNS streams)) (PP (IN of) (NP (NP (NNS objects)) (CC and) (NP (JJ static) (NNS predicates))))))) (. .))
(S (NP (PRP We)) (VP (VBP provide) (NP (NP (CD two) (NN algorithms)) (SBAR (WHNP (WDT which)) (S (DT both) (VP (VB reduce) (NP (NNP STRIPStream) (NNS problems)) (PP (TO to) (NP (NP (DT a) (NN sequence)) (PP (IN of) (NP (JJ finite-domain) (NN planning) (NNS problems)))))))))) (. .))
(S (NP (DT The) (NN representation) (CC and) (NN algorithms)) (VP (VBP are) (ADJP (RB entirely) (JJ domain) (JJ independent))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (NP (PRP$ our) (NN framework)) (PP (PP (IN on) (NP (JJ simple) (JJ illustrative) (NNS domains))) (, ,) (CC and) (RB then) (PP (IN on) (NP (DT a) (JJ high-dimensional) (, ,) (JJ continuous) (JJ robotic) (NN task) (CC and) (NN motion) (NN planning) (NN domain))))) (. .))
