(S (PP (IN With) (NP (NP (DT the) (NN advent)) (PP (IN of) (NP (NP (NP (NNP Software) (NNP Defined) (NNP Networks)) (PRN (-LRB- -LRB-) (NP (NNP SDN)) (-RRB- -RRB-))) (, ,) (NP (NP (NNP Network) (NNP Function) (NNP Virtualisation)) (PRN (-LRB- -LRB-) (NP (NNP NFV)) (-RRB- -RRB-))) (CC or) (NP (NP (NNP Service) (NNP Function) (NNP Chaining)) (PRN (-LRB- -LRB-) (NP (NNP SFC)) (-RRB- -RRB-))))))) (, ,) (NP (NNS operators)) (VP (VBP expect) (S (NP (NNS networks)) (VP (TO to) (VP (VB support) (NP (NP (JJ flexible) (NNS services)) (PP (IN beyond) (NP (NP (DT the) (JJ mere) (NN forwarding)) (PP (IN of) (NP (NNS packets)))))))))) (. .))
(S (NP (NP (DT The) (NN network) (NN programmability) (NN framework)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBG being) (VP (VBN developed) (PP (IN within) (NP (DT the) (NNP IETF))) (PP (IN by) (S (VP (VBG leveraging) (NP (NNP IPv6) (NNP Segment) (NNP Routing))))))))))) (VP (VBZ enables) (NP (NP (DT the) (NN realisation)) (PP (IN of) (NP (JJ in-network) (NNS functions))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP demonstrate) (SBAR (IN that) (S (NP (NP (DT this) (NN vision)) (PP (IN of) (NP (JJ in-network) (NN programmability)))) (VP (MD can) (VP (VB be) (VP (VBN realised))))))) (. .))
(S (PP (IN By) (S (VP (VBG leveraging) (NP (NP (DT the) (JJ eBPF) (NN support)) (PP (IN in) (NP (DT the) (NNP Linux) (NN kernel))))))) (, ,) (NP (PRP we)) (VP (VBP implement) (NP (NP (DT a) (JJ flexible) (NN framework)) (SBAR (WHNP (WDT that)) (S (VP (VBZ allows) (S (NP (NN network) (NNS operators)) (VP (TO to) (VP (VB encode) (NP (PRP$ their) (JJ own) (NN network) (NNS functions)) (PP (IN as) (NP (NP (JJ eBPF) (NN code)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (VP (ADVP (RB automatically)) (VBN executed) (SBAR (IN while) (S (VP (VBG processing) (NP (JJ specific) (NNS packets))))))))))))))))))) (. .))
(S (NP (PRP$ Our) (NN lab) (NNS measurements)) (VP (VBP indicate) (SBAR (IN that) (S (NP (NP (DT the) (NN overhead)) (PP (IN of) (S (VP (VBG calling) (NP (JJ such) (JJ eBPF) (NNS functions)))))) (VP (VBZ remains) (ADJP (JJ acceptable)))))) (. .))
(S (NP (NP (NNS Thanks)) (PP (TO to) (NP (VB eBPF)))) (, ,) (NP (NNS operators)) (VP (MD can) (VP (VB implement) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (NN network) (NNS functions)))))) (. .))
(S (NP (PRP We)) (VP (VBP describe) (NP (NP (DT the) (NN architecture)) (PP (IN of) (NP (PRP$ our) (NN implementation)))) (PP (IN in) (NP (DT the) (NNP Linux) (NN kernel)))) (. .))
(S (NP (DT This) (NN extension)) (VP (VBZ has) (VP (VBN been) (VP (VBN released) (PP (IN with) (NP (NNP Linux) (CD 4.18)))))) (. .))
(S (NP (PRP We)) (VP (VBP illustrate) (NP (NP (DT the) (NN flexibility)) (PP (IN of) (NP (PRP$ our) (NN approach)))) (PP (IN with) (NP (NP (CD three) (JJ different) (NN use) (NNS cases)) (: :) (NP (NP (NN delay) (NNS measurements)) (, ,) (NP (JJ hybrid) (NNS networks)) (CC and) (NP (NN network) (NN discovery)))))) (. .))
(S (NP (PRP$ Our) (NN lab) (NNS measurements)) (ADVP (RB also)) (VP (VBP indicate) (SBAR (IN that) (S (NP (NP (DT the) (NN performance) (NN penalty)) (PP (IN of) (S (VP (VBG running) (NP (JJ eBPF) (NN network) (NNS functions)) (PP (IN on) (NP (NNP Linux) (NNS routers))))))) (VP (VBZ does) (RB not) (VP (VB incur) (NP (DT a) (JJ significant) (NN overhead))))))) (. .))
