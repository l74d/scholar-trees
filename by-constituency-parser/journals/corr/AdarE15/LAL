(S (VP (VB Let) (S (NP (NP (NNP T=)) (PRN (-LRB- -LRB-) (NP (NNP V) (, ,) (NNP E)) (-RRB- -RRB-))) (VP (VB be) (NP (NP (DT a) (JJ tree) (NN graph)) (PP (IN with) (NP (NP (JJ non-negative) (NNS weights)) (VP (VBN defined) (PP (IN on) (NP (DT the) (NNS vertices)))))))))) (. .))
(S (NP (DT A) (NN vertex) (NN z)) (VP (VBZ is) (VP (VBN called) (S (NP (NP (DT a) (NN separating) (NN vertex)) (PP (IN for) (NP (JJ u) (CC and) (JJ v))))) (SBAR (IN if) (S (NP (NP (DT the) (NNS distances)) (PP (IN of) (NP (NN z))) (PP (TO to) (NP (VB u) (CC and) (NNS v)))) (VP (VBP are) (RB not) (ADJP (JJ equal))))))) (. .))
(S (NP (JJ Such) (DT a) (JJ feasible) (NN solution)) (VP (VBZ is) (VP (VBN called) (S (NP (DT a) (`` ``) (NN landmark) (NN set) ('' ''))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP analyze) (NP (NP (DT the) (NN structure)) (PP (IN of) (NP (NP (NN landmark) (NNS sets)) (PP (IN for) (NP (NNS trees))))))) (CC and) (VP (NN design) (NP (NP (DT a) (JJ linear) (NN time) (NN algorithm)) (PP (IN for) (S (VP (VBG finding) (NP (NP (DT a) (JJ minimum) (NN cost) (NN landmark) (VBN set)) (PP (IN for) (NP (DT a) (VBN given) (NN tree) (NN graph)))))))))) (. .))
