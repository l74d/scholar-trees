(S (NP (DT This) (NN paper)) (VP (VBZ is) (PP (IN about) (NP (NP (DT the) (NN interface)) (PP (IN between) (NP (NP (NP (NNS languages)) (SBAR (WHNP (WDT which)) (S (VP (VBP use) (NP (DT a) (NN garbage) (NN collector)))))) (CC and) (NP (NP (DT those)) (SBAR (WHNP (WDT which)) (S (VP (VBP use) (NP (JJ fancy) (NNS types)) (PP (IN for) (NP (JJ safe) (JJ manual) (NN memory) (NN management)))))))))))) (. .))
(S (NP (NN Garbage) (NN collection)) (VP (VBZ is) (NP (NP (DT the) (JJ traditional) (NN memory) (NN management) (NN scheme)) (PP (IN for) (NP (JJ functional) (NNS languages)))) (, ,) (SBAR (JJ whereas) (S (NP (NN type) (NNS systems)) (VP (VBP are) (ADVP (RB now)) (VP (VBN used) (PP (IN for) (NP (NN memory) (NN safety))) (PP (IN in) (NP (JJ imperative) (NNS languages)))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP use) (NP (NP (VBG existing) (NNS techniques)) (PP (IN for) (NP (JJ linear) (NNS capabilities)))) (S (VP (TO to) (VP (VB provide) (NP (NP (JJ safe) (NN access)) (PP (TO to) (NP (JJ copyable) (NNS references))))))))) (, ,) (CC but) (S (NP (NP (DT the) (NN application)) (PP (PP (TO to) (NP (NP (NNS languages)) (PP (IN with) (NP (DT a) (JJ tracing) (NN garbage) (NN collector))))) (, ,) (CC and) (PP (TO to) (NP (NP (NNS data)) (PP (IN with) (NP (JJ explicit) (NNS lifetimes))))))) (VP (VBZ is) (ADJP (JJ new)))) (. .))
(S (S (NP (DT This) (NN work)) (VP (VBZ is) (VP (VBN related) (PP (TO to) (NP (JJ mixed) (JJ linear/non-linear) (NN programming)))))) (, ,) (CC but) (S (NP (NP (DT the) (NNS languages)) (VP (VBG being) (VP (JJ mixed)))) (VP (VBP are) (NP (NNP Rust) (CC and) (NNP JavaScript)))) (. .))
