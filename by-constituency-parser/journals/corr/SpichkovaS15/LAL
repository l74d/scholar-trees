(S (S (PP (IN In) (NP (JJ many) (NNS cases))) (NP (PRP we)) (VP (VBP need) (S (VP (TO to) (VP (VB represent) (PP (IN on) (NP (DT the) (JJ same) (NN abstraction) (NN level))) (NP (CONJP (RB not) (RB only)) (NP (NN system) (NNS components)) (CONJP (CC but) (RB also)) (NP (NP (VBZ processes)) (PP (IN within) (NP (DT the) (NN system)))))))))) (, ,) (CC and) (S (SBAR (IN if) (S (PP (IN for) (NP (DT both) (NN representation))) (NP (JJ different) (NNS frameworks)) (VP (VBP are) (VP (VBN used))))) (, ,) (NP (DT the) (NN system) (NN model)) (VP (VBZ becomes) (ADJP (JJ hard) (SBAR (S (VP (SBAR (S (VP (TO to) (VP (VB read))))) (CC and) (SBAR (S (VP (TO to) (VP (VB understand))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP suggest) (NP (NP (NP (DT a) (NN solution)) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VP (VB cover) (NP (DT this) (NN gap))) (CC and) (VP (TO to) (VP (VB reconcile) (NP (NP (NN component) (CC and) (NN process) (NNS views)) (PP (IN on) (NP (NN system) (NN representation))))))))))) (: :) (NP (NP (DT a) (JJ formal) (NN framework)) (SBAR (WHNP (WDT that)) (S (VP (VBZ gives) (NP (NP (DT the) (NN advantage)) (PP (IN of) (S (VP (VBG solving) (NP (NN design) (NNS problems)) (PP (IN for) (NP (JJ large-scale) (NN component) (NNS systems))))))))))))) (. .))
