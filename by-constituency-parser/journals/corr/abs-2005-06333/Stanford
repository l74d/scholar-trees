(S (NP (NP (NNP Multiparty) (NNP Session)) (NP (NNS Types)) (PRN (-LRB- -LRB-) (NP (NN MPST)) (-RRB- -RRB-))) (VP (VBZ is) (NP (NP (DT a) (NN typing) (NN discipline)) (PP (IN for) (NP (NN communication) (NNS protocols))))) (. .))
(S (NP (PRP It)) (VP (VBZ ensures) (NP (NP (DT the) (NN absence)) (PP (IN of) (NP (NN communication) (NNS errors) (CC and) (NNS deadlocks)))) (PP (IN for) (NP (ADJP (RB well) (HYPH -) (VBN typed)) (VBG communicating) (NNS processes)))) (. .))
(S (NP (NP (DT The) (ADJP (NN state) (HYPH -) (IN of) (HYPH -) (DT the) (HYPH -) (NN art)) (NNS implementations)) (PP (IN of) (NP (DT the) (NNP MPST) (NN theory)))) (VP (VB rely) (PP (IN on) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-)) (NP (NN runtime) (NN linearity) (NNS checks))) (S (VP (TO to) (VP (VB ensure) (NP (NP (NP (JJ correct) (NN usage)) (PP (IN of) (NP (NN communication) (NNS channels)))) (CC and) (NP (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-)) (NP (JJ external) (NN domain) (HYPH -) (JJ specific) (NNS languages)) (PP (IN for) (S (VP (VBG specifying) (CC and) (VBG verifying) (NP (JJ multiparty) (NNS protocols))))))))))) (. .))
(S (S (VP (TO To) (VP (VB overcome) (NP (DT these) (NNS limitations))))) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (NP (DT a) (NN library)) (PP (IN for) (NP (NN programming)))) (PP (IN with) (NP (JJ global) (NNS combinators))) (: --) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (NNS functions)) (PP (IN for) (S (VP (VBG writing) (CC and) (VBG verifying) (NP (JJ multiparty) (NNS protocols)) (PP (IN in) (NP (NNP OCaml)))))))))) (. .))
(S (NP (NP (JJ Local) (NNS behaviours)) (PP (IN for) (NP (NP (DT all) (NNS processes)) (PP (IN in) (NP (DT a) (NN protocol)))))) (VP (VBP are) (VP (VBN inferred) (ADVP (IN at) (RB once)) (PP (IN from) (NP (DT a) (JJ global) (NN combinator))))) (. .))
(S (S (NP (PRP We)) (VP (VP (VBP formalise) (NP (JJ global) (NNS combinators))) (CC and) (VP (VB prove) (NP (NP (DT a) (NN sound) (NN realisability)) (PP (IN of) (NP (JJ global) (NNS combinators))))))) (: --) (S (NP (DT a) (ADJP (RB well) (HYPH -) (VBN typed)) (JJ global) (NN combinator)) (VP (VBZ derives) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (JJ local) (NNS types)))) (, ,) (PP (IN by) (SBAR (WHNP (WDT which)) (S (VP (VBD typed) (SBAR (S (NP (NN endpoint) (NNS programs)) (VP (MD can) (VP (VB ensure) (NP (NML (NN type) (CC and) (NN communication)) (NN safety)))))))))))) (. .))
(S (NP (PRP$ Our) (NN approach)) (VP (VBZ enables) (NP (NP (ADJP (RB fully) (HYPH -) (JJ static)) (NN verification) (CC and) (NN implementation)) (PP (IN of) (NP (DT the) (JJ whole) (NN protocol)))) (, ,) (PP (IN from) (NP (NP (DT the) (NN protocol) (NN specification)) (PP (IN to) (NP (DT the) (NN process) (NNS implementations))))) (, ,) (S (VP (TO to) (VP (VB happen) (PP (IN in) (NP (DT the) (JJ same) (NN language))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP compare) (NP (PRP$ our) (NN implementation)) (PP (IN to) (NP (NP (JJ untyped)) (CC and) (NP (NN continuation) (HYPH -) (VBG passing)))) (S (NP (NN style) (NNS implementations)))) (, ,) (CC and) (VP (VBP demonstrate) (NP (PRP$ its) (NN expressiveness)) (PP (IN by) (S (VP (VBG implementing) (NP (NP (DT a) (NN plethora)) (PP (IN of) (NP (NNS protocols))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (S (NP (PRP$ our) (NN library)) (VP (MD can) (VP (VB interoperate) (PP (IN with) (NP (VBG existing) (NNS libraries) (CC and) (NNS services))) (, ,) (S (VP (VBG implementing) (NP (NP (NP (NN DNS) (PRN (-LRB- -LRB-) (NP (NNP Domain) (NNP Name) (NNP Service)) (-RRB- -RRB-))) (NP (NN protocol))) (CC and) (NP (NP (NP (DT the) (NN OAuth)) (PRN (-LRB- -LRB-) (S (VP (VB Open) (NP (NN Authentication)))) (-RRB- -RRB-))) (NP (NN protocol))))))))))) (. .))
