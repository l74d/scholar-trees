(S (NP (NNP HipMCL)) (VP (VP (VBZ is) (NP (NP (DT a) (NN high-performance) (JJ distributed) (NN memory) (NN implementation)) (PP (IN of) (NP (NP (DT the) (JJ popular) (NNP Markov) (NNP Cluster) (NNP Algorithm)) (PRN (-LRB- -LRB-) (NP (NNP MCL)) (-RRB- -RRB-)))))) (CC and) (VP (MD can) (VP (VB cluster) (NP (JJ large-scale) (NNS networks)) (PP (IN within) (NP (NNS hours))) (S (VP (VBG using) (NP (QP (DT a) (JJ few) (CD thousand)) (NNP CPU-equipped) (NNS nodes))))))) (. .))
(S (NP (PRP It)) (VP (VP (VBZ relies) (PP (IN on) (NP (NN sparse) (NN matrix) (NNS computations)))) (CC and) (VP (ADVP (RB heavily)) (VBZ makes) (NP (NN use)) (PP (IN of) (NP (NP (DT the) (JJ sparse) (JJ matrix-sparse) (NN matrix) (NN multiplication) (NN kernel)) (PRN (-LRB- -LRB-) (NP (NNP SpGEMM)) (-RRB- -RRB-)))))) (. .))
(S (NP (NP (DT The) (VBG existing) (JJ parallel) (NN algorithms)) (PP (IN in) (NP (NNP HipMCL)))) (VP (VBP are) (ADJP (RB not) (ADJP (JJ scalable) (PP (TO to) (NP (NNP Exascale) (NNS architectures))))) (, ,) (PP (DT both) (PP (JJ due) (TO to) (NP (NP (PRP$ their) (NN communication) (NNS costs)) (VP (VBG dominating) (NP (DT the) (NN runtime)) (PP (IN at) (NP (JJ large) (NNS concurrencies)))))) (CC and) (ADVP (RB also)) (PP (JJ due) (TO to) (NP (PRP$ their) (NN inability) (S (VP (TO to) (VP (VB take) (NP (NN advantage)) (PP (IN of) (NP (NP (NNS accelerators)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (RB increasingly) (JJ popular)))))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN work))) (, ,) (NP (PRP we)) (VP (ADVP (RB systematically)) (VBP remove) (NP (NP (NN scalability) (CC and) (NN performance) (NNS bottlenecks)) (PP (IN of) (NP (NNP HipMCL))))) (. .))
(S (NP (PRP We)) (VP (VBP enable) (NP (VBN GPUs)) (PP (IN by) (S (VP (VBG performing) (NP (NP (DT the) (JJ expensive) (NN expansion) (NN phase)) (PP (IN of) (NP (DT the) (NNP MCL) (NN algorithm)))) (PP (IN on) (NP (NNP GPU))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP propose) (NP (NP (DT a) (JJ CPU-GPU) (NN joint) (VBN distributed) (NNP SpGEMM) (NN algorithm)) (VP (VBD called) (S (NP (JJ pipelined) (NNP Sparse) (NNP SUMMA)))))) (CC and) (VP (VB integrate) (NP (NP (DT a) (JJ probabilistic) (NN memory) (NN requirement) (NN estimator)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (RB fast) (CC and) (VB accurate)))))))) (. .))
(S (NP (PRP We)) (VP (VBP develop) (NP (NP (DT a) (JJ new) (NN merging) (NN algorithm)) (PP (IN for) (NP (NP (DT the) (JJ incremental) (NN processing)) (PP (IN of) (NP (NP (JJ partial) (NNS results)) (VP (VBN produced) (PP (IN by) (NP (DT the) (NNP GPUs)))))))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ improves) (NP (NP (DT the) (JJ overlap) (NN efficiency)) (CC and) (NP (DT the) (JJ peak) (NN memory) (NN usage)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP integrate) (NP (NP (DT a) (ADJP (JJ recent) (CC and) (RBR faster)) (NN algorithm)) (PP (IN for) (S (VP (VBG performing) (NP (NNP SpGEMM)) (PP (IN on) (NP (NNP CPUs)))))))) (. .))
(S (NP (PRP We)) (VP (VBP validate) (NP (PRP$ our) (JJ new) (NN algorithms) (CC and) (NNS optimizations)) (PP (IN with) (NP (JJ extensive) (NNS evaluations)))) (. .))
(S (PP (IN With) (NP (NP (NP (DT the) (NN enabling)) (PP (IN of) (NP (DT the) (NNP GPUs)))) (CC and) (NP (NP (NN integration)) (PP (IN of) (NP (JJ new) (NN algorithms)))))) (, ,) (NP (NNP HipMCL)) (VP (VBZ is) (ADJP (QP (RB up) (PP (TO to) (CD 12.4x))) (NN faster)) (, ,) (S (VP (VBG being) (ADJP (JJ able) (S (VP (TO to) (VP (VB cluster) (NP (NP (DT a) (NN network)) (PP (IN with) (NP (NP (QP (CD 70) (CD million)) (NNS proteins)) (CC and) (NP (QP (CD 68) (CD billion)) (NNS connections))))) (PP (ADVP (RB just)) (IN under) (NP (CD 15) (NNS minutes))) (S (VP (VBG using) (NP (NP (CD 1024) (NNS nodes)) (PP (IN of) (NP (NP (NNP ORNL) (POS 's)) (NNP Summit) (NN supercomputer))))))))))))) (. .))
