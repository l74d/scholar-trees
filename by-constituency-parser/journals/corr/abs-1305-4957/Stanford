(S (NP (PRP We)) (VP (VBP present) (NP (DT a) (JJ functional) (NN programming) (NN language)) (PP (IN for) (S (VP (VBG specifying) (NP (NP (NNS constraints)) (PP (IN over) (NP (ADJP (NP (NN tree)) (HYPH -) (VBN shaped)) (NNS data)))))))) (. .))
(S (NP (DT The) (NN language)) (VP (VBZ allows) (PP (IN for) (NP (NP (NML (NML (NNP Haskell)) (HYPH -) (PP (IN like) (NP (JJ algebraic) (NNS data)))) (NNS types)) (CC and) (NP (NN pattern) (NN matching))))) (. .))
(S (NP (PRP$ Our) (NN constraint) (NN compiler) (NN CO4)) (VP (VBZ translates) (NP (DT these) (NNS programs)) (PP (IN into) (NP (NP (NN satisfiability) (NNS problems)) (PP (IN in) (NP (JJ propositional) (NN logic)))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (DT an) (NN application)) (PP (IN from) (NP (NP (DT the) (NN area)) (PP (IN of) (NP (NP (VBN automated) (NN analysis)) (PP (IN of) (NP (NP (-LRB- -LRB-) (NML (AFX non) (HYPH -)) (-RRB- -RRB-) (NN termination)) (PP (IN of) (NP (NML (S (VP (VB rewrite)))) (NNS systems)))))))))) (. .))
