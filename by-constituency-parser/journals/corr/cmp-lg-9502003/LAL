(S (NP (NN ProFIT)) (VP (VBZ is) (NP (NP (DT an) (NN extension)) (PP (IN of) (NP (NNP Standard) (NNP Prolog))) (PP (IN with) (NP (NNP Features) (, ,) (NNP Inheritance) (CC and) (NNP Templates))))) (. .))
(S (NP (NN ProFIT)) (VP (VBZ allows) (S (NP (DT the) (NX (NX (NN programmer)) (CC or) (NX (NN grammar) (NN developer)))) (VP (TO to) (VP (VB declare) (NP (NP (DT an) (NN inheritance) (NN hierarchy)) (, ,) (NP (NNS features)) (CC and) (NP (NNS templates))))))) (. .))
(S (NP (JJ Sorted) (NN feature) (NNS terms)) (VP (MD can) (VP (VB be) (VP (VBN used) (PP (IN in) (NP (NNP ProFIT) (NNS programs))) (ADVP (RB together) (PP (IN with) (NP (NNP Prolog) (NNS terms)))) (S (VP (TO to) (VP (VB provide) (NP (NP (DT a) (JJR clearer) (NN description) (NN language)) (PP (IN for) (NP (JJ linguistic) (NNS structures)))))))))) (. .))
(S (NP (NN ProFIT)) (VP (VBZ compiles) (NP (DT all) (JJ sorted) (NN feature) (NNS terms)) (PP (IN into) (NP (DT a) (NNP Prolog) (NN term) (NN representation))) (, ,) (SBAR (IN so) (IN that) (S (S (NP (DT the) (JJ built-in) (NNP Prolog) (NN term) (NN unification)) (VP (MD can) (VP (VB be) (VP (VBN used) (PP (IN for) (NP (NP (DT the) (NN unification)) (PP (IN of) (NP (JJ sorted) (NN feature) (NNS structures))))))))) (, ,) (CC and) (S (NP (DT no) (JJ special) (NN unification) (NN algorithm)) (VP (VBZ is) (VP (VBN needed))))))) (. .))
(S (NP (NN ProFIT) (NNS programs)) (VP (VBP are) (VP (VBN compiled) (PP (IN into) (NP (NNP Prolog) (NNS programs))) (, ,) (SBAR (IN so) (IN that) (S (NP (DT no) (NN meta-interpreter)) (VP (VBZ is) (VP (VBN needed) (PP (IN for) (NP (PRP$ their) (NN execution))))))))) (. .))
(S (NP (NN ProFIT)) (ADVP (RB thus)) (VP (VBZ provides) (NP (NP (DT a) (JJ direct) (NN step)) (PP (IN from) (NP (NP (NNS grammars)) (VP (VBN developed) (PP (IN with) (NP (JJ sorted) (NN feature) (NNS terms)))))) (PP (TO to) (NP (NP (NNP Prolog) (NNS programs)) (ADJP (JJ usable) (PP (IN for) (NP (JJ practical) (NNP NLP) (NNS systems)))))))) (. .))
