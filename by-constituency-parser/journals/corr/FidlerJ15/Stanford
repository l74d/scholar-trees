(S (NP (JJ Parallel) (NNS systems)) (VP (VBP have) (VP (VBN received) (S (VP (VBG increasing) (NP (NN attention)) (PP (IN with) (NP (NP (JJ numerous) (JJ recent) (NNS applications)) (PP (JJ such) (IN as) (NP (NP (NML (S (NP (NN fork)) (HYPH -) (VP (VB join)))) (NNS systems)) (, ,) (NP (NN load) (HYPH -) (NN balancing)) (, ,) (CC and) (NP (NML (NML (NN l) (HYPH -) (NN out)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN k)))) (NN redundancy)))))))))) (. .))
(S (NP (NP (JJ Common)) (PP (IN to) (NP (DT these) (NNS systems)))) (VP (VBZ is) (NP (NP (DT a) (NML (VP (VB join) (CC or) (VBG resequencing))) (NN stage)) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (NP (NNS tasks)) (SBAR (WHNP (WDT that)) (S (VP (VBP have) (VP (VBN finished) (NP (NN service))))))) (VP (MD may) (VP (VB have) (S (VP (TO to) (VP (VB wait) (PP (IN for) (NP (NP (DT the) (NN completion)) (PP (IN of) (NP (JJ other) (NNS tasks))))) (SBAR (IN so) (IN that) (S (NP (PRP they)) (VP (VBP leave) (NP (NP (DT the) (NN system)) (PP (IN in) (NP (DT a) (JJ predefined) (NN order)))))))))))))))) (. .))
(S (S (NP (DT These) (NN synchronization) (NNS constraints)) (VP (VBP make) (NP (NP (DT the) (NN analysis)) (PP (IN of) (NP (NP (JJ parallel) (NNS systems)) (VP (VBG challenging))))))) (CC and) (S (NP (JJ few) (JJ explicit) (NNS results)) (VP (VBP are) (VP (VBN known)))) (. .))
(S (PP (IN In) (NP (DT this) (NN work))) (, ,) (NP (PRP we)) (VP (VBP model) (NP (JJ parallel) (NNS systems)) (S (VP (VBG using) (NP (NP (DT a) (NML (NN max) (HYPH -) (CC plus)) (NN approach)) (SBAR (WHNP (WDT that)) (S (VP (VBZ enables) (S (NP (PRP us)) (VP (TO to) (VP (VB derive) (NP (NP (JJ statistical) (NNS bounds)) (PP (IN of) (NP (NP (VBG waiting)) (CC and) (NP (NN sojourn) (NNS times))))))))))))))) (. .))
(S (S (VP (VBG Taking) (NP (NP (NN advantage)) (PP (IN of) (NP (NML (NN max) (HYPH -) (NN plus)) (NN system) (NN theory)))))) (, ,) (NP (PRP we)) (ADVP (RB also)) (VP (VBP show) (NP (NP (NML (NML (NN end)) (HYPH -) (PP (IN to) (HYPH -) (NP (NN end) (NN delay)))) (NNS bounds)) (PP (IN for) (NP (NML (S (NP (JJ multi-stage) (NN fork)) (HYPH -) (VP (VB join)))) (NNS networks))))) (. .))
(S (NP (PRP We)) (VP (VBP contribute) (NP (NP (NP (NML (NML (NNS solutions)) (PP (IN for) (NP (JJ basic) (NN G) (HYPH |) (NN G) (HYPH |) (CD 1)))) (NML (NN fork) (HYPH -) (NML (NML (S (VP (VB join)))) (NNS systems))) (, ,) (JJ parallel) (NNS systems)) (PP (IN with) (NP (NN load) (HYPH -) (NN balancing)))) (, ,) (CONJP (RB as) (RB well) (IN as)) (NP (NP (NML (JJ general) (PRN (-LRB- -LRB-) (NP (CD k)) (, ,) (NP (NN l)) (-RRB- -RRB-))) (NML (NN fork) (HYPH -) (NML (NML (S (VP (VB join)))) (NNS systems)))) (PP (IN with) (NP (NN redundancy)))))) (. .))
(S (NP (PRP$ Our) (NNS results)) (VP (VBP provide) (NP (NNS insights)) (PP (IN into) (NP (NP (DT the) (JJ respective) (NNS advantages)) (PP (IN of) (NP (NP (NML (NML (NN l) (HYPH -) (NN out)) (HYPH -) (PP (IN of) (HYPH -) (NP (NN k)))) (NN redundancy)) (PP (FW vs.) (NP (NN load) (HYPH -) (NN balancing)))))))) (. .))
