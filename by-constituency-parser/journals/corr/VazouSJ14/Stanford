(S (NP (ADJP (NP (NN SMT)) (HYPH -) (VBN based)) (NNS verifiers)) (VP (VBP have) (ADVP (RB long)) (VP (VBN been) (NP (NP (DT an) (JJ effective) (NNS means)) (PP (IN of) (S (VP (VBG ensuring) (NP (NP (NN safety) (NNS properties)) (PP (IN of) (NP (NNS programs)))))))))) (. .))
(S (S (SBAR (IN While) (S (NP (DT these) (NNS techniques)) (VP (VBP are) (ADJP (RB well) (VBN understood))))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP they)) (ADVP (RB implicitly)) (VP (VBP require) (NP (JJ eager) (NNS semantics))))))) (: ;) (S (ADVP (RB directly)) (S (VP (VBG applying) (NP (PRP them)) (PP (IN to) (NP (DT a) (JJ lazy) (NN language))))) (VP (VBZ is) (ADJP (JJ unsound) (PP (IN due) (PP (IN to) (NP (NP (DT the) (NN presence)) (PP (IN of) (NP (JJ divergent) (NNS sub-computations))))))))) (. .))
(S (NP (PRP We)) (VP (VBP recover) (NP (NN soundness)) (PP (IN by) (S (VP (VBG composing) (NP (DT the) (NN safety) (NN analysis)) (PP (IN with) (NP (DT a) (NN termination) (NN analysis))))))) (. .))
(S (S (ADVP (RB Of) (RB course)) (, ,) (NP (NN termination)) (VP (VBZ is) (NP (PRP itself)) (NP (DT a) (JJ challenging) (NN problem)))) (, ,) (CC but) (S (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (NP (DT the) (NN safety) (NN analysis)) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB ensure) (NP (NN termination)) (, ,) (S (ADVP (RB thereby)) (VP (VBG bootstrapping) (NP (NN soundness)) (PP (IN for) (NP (DT the) (JJ entire) (NN system))))))))))))))) (. .))
(S (ADVP (RB Thus)) (, ,) (SBAR (IN while) (S (NP (NN safety) (NNS invariants)) (VP (VBP have) (ADVP (RB long)) (VP (VBN been) (VP (VBN required) (S (VP (TO to) (VP (VB prove) (NP (NN termination)))))))))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (NP (NN termination) (NNS proofs)) (VP (MD can) (VP (VB be) (S (VP (TO to) (ADVP (RB soundly)) (VP (VB establish) (NP (NN safety)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP have) (VP (VBN implemented) (NP (PRP$ our) (NN approach)) (PP (IN in) (NP (NP (NNP liquidHaskell)) (, ,) (NP (NP (DT a) (ADJP (NP (NN Refinement) (NN Type)) (HYPH -) (VBN based)) (NN verifier)) (PP (IN for) (NP (NNP Haskell)))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (NP (NP (PRP$ its) (NN effectiveness)) (PP (IN via) (NP (NP (DT an) (JJ experimental) (NN evaluation)) (VP (VBG using) (NP (NN liquidHaskell)) (S (VP (TO to) (VP (VB verify) (NP (NP (NN safety) (, ,) (JJ functional) (NN correctness) (CC and) (NN termination) (NNS properties)) (PP (IN of) (NP (NML (JJ real) (HYPH -) (NN world)) (NN Haskell) (NNS libraries)))) (, ,) (S (VP (VBG totaling) (PP (IN over) (NP (NP (CD 10,000) (NNS lines)) (PP (IN of) (NP (NN code))))))))))))))) (. .))
