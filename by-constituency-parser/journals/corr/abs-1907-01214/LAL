(S (NP (PRP We)) (VP (VBP present) (NP (NNP MSO) (CC and) (NNP FO) (NNS logics)) (PP (IN with) (NP (NP (NP (NNS predicates)) (ADJP (`` `) (IN between) ('' ›) (CC and) (`` `) (NNS neighbour) ('' ›))) (SBAR (WHNP (IN that)) (S (VP (VBP characterise) (NP (NP (JJ various) (NNS fragments)) (PP (IN of) (NP (NP (NP (DT the) (NN class)) (PP (IN of) (NP (JJ regular) (NNS languages)))) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (VP (VBN closed) (PP (IN under) (NP (DT the) (NN reverse) (NN operation)))))))))))))))) (. .))
(S (NP (NP (DT The) (JJ standard) (NNS connections)) (SBAR (WHNP (WDT that)) (S (VP (VBP exist) (PP (IN between) (NP (NP (NNP MSO) (CC and) (NNP FO) (NNS logics)) (CC and) (NP (NP (NNS varieties)) (PP (IN of) (NP (JJ finite) (NNS semigroups)))))))))) (VP (VBP extend) (PP (TO to) (NP (DT this) (VBG setting))) (PP (IN with) (NP (NP (NNS semigroups)) (VP (VBN extended) (PP (IN with) (NP (DT an) (NN involution))))))) (. .))
(S (NP (DT The) (NN case)) (VP (VBZ is) (ADJP (JJ different)) (PP (IN for) (NP (NP (NP (NNP FO)) (PP (IN with) (NP (JJ neighbour) (NN relation)))) (SBAR (WHADVP (WRB where)) (S (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (CD one)) (VP (VBZ needs) (NP (JJ additional) (NNS equations)) (S (VP (TO to) (VP (VB characterise) (NP (DT the) (NN class)))))))))))))) (. .))
