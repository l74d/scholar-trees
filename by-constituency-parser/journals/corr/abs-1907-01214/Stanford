(S (NP (PRP We)) (VP (VBP present) (NP (NP (NP (NML (NNP MSO) (CC and) (NNP FO)) (NNS logics)) (PP (IN with) (NP (NP (NNS predicates)) (`` `) (PP (IN between)) ('' ')))) (CC and) (NP (`` `) (NP (NN neighbour)) ('' ') (SBAR (WHNP (WDT that)) (S (VP (VBP characterise) (NP (NP (JJ various) (NNS fragments)) (PP (IN of) (NP (NP (DT the) (NN class)) (PP (IN of) (NP (NP (JJ regular) (NNS languages)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (VP (VBN closed) (PP (IN under) (NP (DT the) (JJ reverse) (NN operation)))))))))))))))))) (. .))
(S (NP (NP (DT The) (JJ standard) (NNS connections)) (SBAR (WHNP (WDT that)) (S (VP (VBP exist) (PP (IN between) (NP (NP (NML (NNP MSO) (CC and) (NNP FO)) (NNS logics) (CC and) (NNS varieties)) (PP (IN of) (NP (JJ finite) (NNS semigroups))))))))) (VP (VBP extend) (PP (IN to) (NP (NP (DT this) (NN setting)) (PP (IN with) (NP (NP (NNS semigroups)) (VP (VBN extended) (PP (IN with) (NP (DT an) (NN involution))))))))) (. .))
(S (NP (DT The) (NN case)) (VP (VBZ is) (ADJP (JJ different) (PP (IN for) (NP (NP (NN FO)) (PP (IN with) (NP (NN neighbour) (NN relation)))))) (SBAR (WHADVP (WRB where)) (S (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP one)) (VP (VBZ needs) (NP (JJ additional) (NNS equations)) (PP (IN to) (S (VP (VB characterise) (NP (DT the) (NN class)))))))))))) (. .))
