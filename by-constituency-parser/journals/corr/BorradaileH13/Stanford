(S (NP (PRP We)) (VP (VBP give) (NP (DT an) (JJ iterative) (NN algorithm)) (PP (IN for) (S (VP (VBG finding) (NP (NP (NP (DT the) (NN maximum) (NN flow)) (PP (IN between) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NNS sources) (CC and) (NNS sinks)))))) (SBAR (WHNP (WDT that)) (S (VP (VBP lie) (PP (IN on) (NP (NP (DT the) (NN boundary)) (PP (IN of) (NP (DT a) (JJ planar) (NN graph))))))))))))) (. .))
(S (NP (PRP$ Our) (NN algorithm)) (VP (VBZ uses) (S (ADVP (RB only)) (NP (NN O) (-LRB- -LRB-) (NN n) (-RRB- -RRB-)) (VP (VBZ queries) (PP (IN to) (NP (JJ simple) (NNS data) (NNS structures))) (, ,) (S (VP (VBG achieving) (NP (NP (DT an) (NML (NML (NN O) (PRN (-LRB- -LRB-) (NP (NN n) (NN log) (NN n)) (-RRB- -RRB-))) (NN running)) (NN time)) (SBAR (WHNP (WDT that)) (S (NP (PRP we)) (VP (VBP expect) (S (VP (TO to) (VP (VB be) (ADJP (JJ practical)) (PP (VBN given) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (JJ simple) (NNS primitives))))))))))))))))) (. .))
(S (NP (NP (DT The) (JJ only) (VBG existing) (NN algorithm)) (PP (IN for) (NP (DT this) (NN problem)))) (VP (VP (VP (VBZ uses) (NP (NN divide))) (CC and) (VP (VB conquer))) (CC and) (, ,) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB achieve) (NP (DT an) (NML (NML (NN O) (PRN (-LRB- -LRB-) (NP (NN n) (NN log) (NN n)) (-RRB- -RRB-))) (VBG running)) (NN time)))))) (, ,) (VP (VBZ requires) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NP (DT the) (ADJP (-LRB- -LRB-) (JJ complicated) (-RRB- -RRB-)) (NML (JJ linear) (HYPH -) (NN time)) (NML (JJS shortest) (HYPH -) (NNS paths)) (NN algorithm)) (PP (IN for) (NP (JJ planar) (NNS graphs)))))))) (. .))
