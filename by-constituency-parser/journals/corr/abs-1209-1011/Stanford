(S (NP (PRP We)) (VP (VBP use) (NP (NNS monads)) (S (VP (TO to) (VP (VB relax) (NP (DT the) (NN atomicity) (NN requirement)) (PP (IN for) (NP (NP (NNS data)) (PP (IN in) (NP (DT a) (NN database))))))))) (. .))
(S (PP (VBG Depending) (PP (IN on) (NP (NP (DT the) (NN choice)) (PP (IN of) (NP (NN monad)))))) (, ,) (S (NP (DT the) (NN database) (NNS fields)) (VP (MD may) (VP (VB contain) (NP (NP (VBN generalized) (NNS values)) (PP (JJ such) (IN as) (NP (NP (NNS lists) (CC or) (NNS sets)) (PP (IN of) (NP (NNS values))))))))) (, ,) (CC or) (S (NP (PRP they)) (VP (MD may) (VP (VB contain) (NP (NP (NNS exceptions)) (PP (JJ such) (IN as) (NP (NP (JJ various) (NNS types)) (PP (IN of) (NP (NNS nulls))))))))) (. .))
(S (S (NP (NP (DT The) (NN return) (NN operation)) (PP (IN for) (NP (NNS monads)))) (VP (VBZ ensures) (SBAR (IN that) (S (NP (DT any) (JJ ordinary) (NN database) (NN instance)) (VP (MD will) (VP (VB count) (PP (IN as) (NP (NP (CD one)) (PP (IN of) (NP (DT these) (VBN generalized) (NNS instances))))))))))) (, ,) (CC and) (S (NP (DT the) (NN bind) (NN operation)) (VP (VBZ ensures) (SBAR (IN that) (S (NP (VBN generalized) (NNS values)) (VP (VBP behave) (ADVP (RB well)) (PP (IN under) (S (VP (VBZ joins) (PP (IN of) (NP (JJ foreign) (JJ key) (NNS sequences))))))))))) (. .))
(S (NP (JJ Different) (NNS monads)) (VP (VBP allow) (PP (IN for) (NP (NP (ADJP (RB vastly) (JJ different)) (NNS types)) (PP (IN of) (NP (NN information))))) (S (VP (TO to) (VP (VB be) (VP (VBN stored) (PP (IN in) (NP (DT the) (NN database)))))))) (. .))
(S (PP (IN For) (NP (NN example))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (JJ classical) (NNS concepts)) (PP (IN like) (NP (NP (NNP Markov) (NNS chains)) (, ,) (NP (NNS graphs)) (, ,) (CC and) (NP (JJ finite) (NN state) (NN automata))))) (VP (VBP are) (DT each) (VP (ADVP (RB perfectly)) (VBN captured) (PP (IN by) (NP (NP (DT a) (JJ different) (NN monad)) (PP (IN on) (NP (DT the) (JJ same) (NN schema)))))))))) (. .))
