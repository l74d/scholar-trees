(S (NP (NNP FlatCurry)) (VP (VBZ is) (NP (NP (DT a) (JJ well-established) (JJ intermediate) (NN representation)) (PP (IN of) (NP (NNP Curry) (NNS programs))) (VP (VBD used) (PP (IN in) (NP (NP (NNS compilers)) (SBAR (WHNP (WDT that)) (S (VP (VBP translate) (NP (NNP Curry) (NN code)) (PP (IN into) (NP (NNP Prolog) (CC and) (NNP Haskell) (NN code))))))))))) (. .))
(S (NP (DT Some) (NNP FlatCurry) (NNS constructs)) (VP (VBP have) (NP (NP (DT no) (JJ direct) (NN translation)) (PP (IN into) (NP (JJ imperative) (NN code))))) (. .))
(S (NP (DT These) (NNS constructs)) (VP (MD must) (VP (VB be) (DT each) (VP (VBN handled) (ADVP (RB differently)) (SBAR (WHADVP (WRB when)) (S (VP (VBG translating) (NP (NNP Curry) (NN code)) (PP (IN into) (NP (NNP C) (, ,) (NNP C++) (CC and) (NNP Python) (NN code))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP introduce) (NP (NP (DT a) (JJ new) (NN representation)) (PP (IN of) (NP (NNP Curry) (NNS programs))) (, ,) (VP (VBN called) (S (NP (NNP ICurry)))))) (, ,) (CC and) (VP (VB derive) (NP (NP (DT a) (NN translation)) (PP (IN from) (NP (DT all) (NNP FlatCurry) (NNS constructs))) (PP (IN into) (NP (NNP ICurry)))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (NP (DT the) (NN syntax)) (PP (IN of) (NP (NNP ICurry)))) (CC and) (NP (NP (DT the) (NN translation)) (PP (IN from) (NP (NNP FlatCurry))) (PP (TO to) (NP (NNP ICurry)))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP present) (NP (NP (DT a) (NN model)) (PP (IN of) (NP (JJ functional) (JJ logic) (NNS computations))) (PP (IN as) (NP (NN graph) (NN rewriting))))) (, ,) (VP (VB show) (SBAR (WHADVP (WRB how)) (S (NP (DT this) (NN model)) (VP (MD can) (VP (VB be) (VP (VBN implemented) (PP (IN in) (NP (DT a) (JJ low-level) (JJ imperative) (NN language))))))))) (, ,) (CC and) (VP (VB describe) (NP (NP (DT the) (NN translation)) (PP (IN from) (NP (NNP ICurry))) (PP (TO to) (NP (DT this) (NN model)))))) (. .))
