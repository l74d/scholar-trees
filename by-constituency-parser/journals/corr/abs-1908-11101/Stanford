(S (NP (NNP FlatCurry)) (VP (VBZ is) (NP (NP (DT a) (ADJP (RB well) (HYPH -) (VBN established)) (JJ intermediate) (NN representation)) (PP (IN of) (NP (NP (NNP Curry) (NNS programs)) (VP (VBN used) (PP (IN in) (NP (NP (NNS compilers)) (SBAR (WHNP (WDT that)) (S (VP (VBP translate) (NP (NNP Curry) (NN code)) (PP (IN into) (NP (NML (NNP Prolog) (CC and) (NNP Haskell)) (NN code))))))))))))) (. .))
(S (NP (DT Some) (NNP FlatCurry) (NNS constructs)) (VP (VBP have) (NP (DT no) (JJ direct) (NN translation)) (PP (IN into) (NP (ADJP (JJ imperative)) (NN code)))) (. .))
(S (NP (DT These) (NNS constructs)) (VP (MD must) (VP (VB be) (DT each) (VP (VBN handled) (ADVP (RB differently)) (SBAR (WHADVP (WRB when)) (S (VP (VBG translating) (NP (NNP Curry) (NN code)) (PP (IN into) (NP (NML (NP (NNP C)) (, ,) (NP (NNP C++)) (CC and) (NP (NNP Python))) (NN code))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP introduce) (NP (NP (DT a) (JJ new) (NN representation)) (PP (IN of) (NP (NNP Curry) (NNS programs))))) (, ,) (VP (VBN called) (NP (NN ICurry))) (, ,) (CC and) (VP (VBP derive) (NP (NP (DT a) (NN translation)) (PP (IN from) (NP (DT all) (NNP FlatCurry) (NNS constructs)))) (PP (IN into) (NP (NN ICurry))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (NP (DT the) (NN syntax)) (PP (IN of) (NP (NN ICurry)))) (CC and) (NP (NP (DT the) (NN translation)) (PP (IN from) (NP (NNP FlatCurry))))) (PP (IN to) (NP (NNP ICurry)))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (NN model)) (PP (IN of) (NP (JJ functional) (NN logic) (NNS computations)))) (PP (IN as) (NP (NN graph))) (VP (VBG rewriting)) (, ,) (S (VP (VP (VB show) (SBAR (WHADVP (WRB how)) (S (NP (DT this) (NN model)) (VP (MD can) (VP (VB be) (VP (VBN implemented) (PP (IN in) (NP (DT a) (ADJP (NML (JJ low) (HYPH -) (NN level)) (JJ imperative)) (NN language))))))))) (, ,) (CC and) (VP (VB describe) (NP (NP (DT the) (NN translation)) (PP (IN from) (NP (NN ICurry)))) (PP (IN to) (NP (DT this) (NN model))))))) (. .))
