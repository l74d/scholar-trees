(S (NP (NP (NML (NN State) (HYPH -) (NN space)) (NN reduction) (NNS techniques)) (, ,) (VP (VBN used) (ADVP (RB primarily)) (PP (IN in) (NP (NN model) (HYPH -) (NNS checkers))) (, ,) (SBAR (S (NP (DT all)) (VP (VBP rely) (PP (IN on) (NP (DT the) (NN idea))) (SBAR (IN that) (S (NP (DT some) (NNS actions)) (VP (VBP are) (ADJP (JJ independent))))))))) (, ,)) (ADVP (RB hence)) (VP (MD could) (VP (VB be) (VP (VBN taken) (PP (IN in) (NP (DT any) (-LRB- -LRB-) (JJ respective) (-RRB- -RRB-) (NN order))) (SBAR (IN while) (S (VP (VBN put) (PP (IN in) (NP (NN parallel)))))) (, ,) (PP (IN without) (S (VP (VBG changing) (NP (DT the) (NNS semantics)))))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (ADVP (RB thus)) (RB not) (ADJP (JJ necessary) (S (VP (TO to) (VP (VB consider) (NP (NP (NP (DT all) (NN execution) (NNS paths)) (PP (IN in) (NP (NP (DT the) (VBG interleaving) (NNS semantics)) (PP (IN of) (NP (DT a) (JJ concurrent) (NN program)))))) (, ,) (CONJP (CC but) (RB rather)) (NP (DT some) (NML (NN equivalence)) (NNS classes)))))))) (. .))
(S (NP (NP (DT The) (NN purpose)) (PP (IN of) (NP (DT this) (NN paper)))) (VP (VBZ is) (S (VP (TO to) (VP (VB describe) (NP (DT a) (JJ new) (NN algorithm)) (PP (IN to) (NP (NP (NML (NML (S (VP (VB compute) (ADJP (JJ such))))) (NN equivalence)) (NNS classes)) (, ,) (CC and) (NP (NP (DT a) (NN representative)) (PP (IN per) (NP (NP (NN class)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (NNS ideas)) (VP (VBG originating) (PP (IN in) (NP (JJ algebraic) (NN topology))))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP introduce) (NP (NP (DT a) (JJ geometric) (NNS semantics)) (PP (IN of) (NP (JJ concurrent) (NNS languages)))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (NNS programs)) (VP (VP (VBP are) (VP (VBN interpreted) (PP (IN as) (NP (VBN directed) (JJ topological) (NNS spaces))))) (, ,) (CC and) (VP (VB study) (NP (PRP$ its) (NNS properties)) (PP (IN in) (NP (NN order) (S (VP (TO to) (VP (VB devise) (NP (DT an) (NN algorithm)) (PP (IN for) (NP (NP (VBG computing) (NN dihomotopy) (NNS classes)) (PP (IN of) (NP (NN execution) (NNS paths))))))))))))))) (. .))
(S (PP (IN In) (ADJP (JJ particular))) (, ,) (NP (PRP$ our) (NN algorithm)) (VP (VBZ is) (ADJP (JJ able) (S (VP (TO to) (VP (VB compute) (NP (DT a) (NML (NN control) (HYPH -) (NN flow)) (NN graph)) (PP (IN for) (NP (JJ concurrent) (NNS programs))) (, ,) (S (ADVP (RB possibly)) (VP (VBG containing) (NP (NP (NNS loops)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (`` ") (ADVP (IN as)) (VP (VBN reduced) (PP (IN as) (ADJP (JJ possible))) (`` ") (PP (IN in) (NP (DT the) (NN sense))) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ generates) (NP (NP (NNS traces)) (NP (JJ modulo) (NN equivalence)))))))))))))))))) (. .))
(S (NP (DT A) (JJ preliminary) (NN implementation)) (VP (VBD was) (VP (VBN achieved) (, ,) (S (VP (VBG showing) (NP (JJ promising) (NNS results)) (PP (IN towards) (NP (JJ efficient) (NNS methods))) (S (VP (TO to) (VP (VB analyze) (NP (JJ concurrent) (NNS programs))))))) (, ,) (PP (IN with) (NP (NP (ADJP (RB very) (JJ promising)) (NNS results)) (PP (VBN compared) (PP (IN to) (NP (NML (JJ partial) (HYPH -) (NN order)) (NN reduction) (NNS techniques)))))))) (. .))
