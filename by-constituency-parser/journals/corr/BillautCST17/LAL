(S (PP (IN In) (NP (NN shop) (NN scheduling))) (, ,) (NP (NP (JJ several) (NNS applications))) (VP (VBP exist) (SBAR (WHADVP (WRB where)) (S (NP (NP (PRP it))) (VP (VBZ is) (VP (VBN required) (SBAR (IN that) (S (NP (DT some) (NNS components)) (VP (VBP perform) (ADVP (RB consecutively)))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP refer) (PP (TO to) (NP (JJ no-idle) (NNS schedules))) (SBAR (IN if) (S (NP (NNS machines)) (VP (VBP are) (VP (VBN required) (S (VP (TO to) (VP (VB operate) (PP (IN with) (NP (DT no) (JJ inserted) (JJ idle) (NN time))))))))))) (CC and) (VP (NP (JJ no-wait) (NNS schedules)) (SBAR (IN if) (S (NP (NNS tasks)) (VP (MD can) (RB not) (VP (VB wait) (PP (IN between) (NP (NP (NP (DT the) (NN end)) (PP (IN of) (NP (DT an) (NN operation)))) (CC and) (NP (NP (DT the) (NN start)) (PP (IN of) (NP (DT the) (VBG following) (CD one)))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP consider) (ADVP (RB here)) (NP (NP (JJ no-idle/no-wait) (NN shop) (VBG scheduling) (NNS problems)) (PP (IN with) (NP (NNS makespan)))) (PP (IN as) (NP (NN performance) (NN measure)))) (CC and) (VP (NN determine) (NP (VBN related) (NN complexity) (NNS results)))) (. .))
(S (NP (PRP We)) (ADVP (RB first)) (VP (VP (VBD analyze) (NP (DT the) (JJ two-machine) (JJ no-idle/no-wait) (NN flow) (NN shop) (NN problem))) (CC and) (VP (NN show) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ is) (ADJP (JJ equivalent) (PP (TO to) (NP (NP (DT a) (JJ special) (NN version)) (PP (IN of) (NP (NP (DT the) (NN game)) (PP (IN of) (NP (NNS dominoes))))) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADJP (RB polynomially) (JJ solvable) (PP (IN by) (S (VP (VBG tackling) (NP (DT an) (JJ Eulerian) (NN path) (NN problem)) (PP (IN on) (NP (DT a) (JJ directed) (NN graph)))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (PP (IN for) (NP (DT this) (NN problem))) (NP (DT an) (NNP O) (PRN (-LRB- -LRB-) (NN n) (-RRB- -RRB-)) (NN exact) (NN algorithm))) (. .))
(S (PP (IN As) (NP (DT a) (NN byproduct))) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (DT the) (JJ Hamiltonian) (NNP Path) (NN problem)) (PP (IN on) (NP (NP (DT a) (NN digraph) (PRN (NNP G) (PRN (-LRB- -LRB-) (NP (NNP V) (, ,) (NNP A)) (-RRB- -RRB-))) (PP (IN with) (NP (DT a) (JJ special) (NN structure)))) (PRN (-LRB- -LRB-) (SBAR (WHADVP (WRB where)) (S (NP (NP (DT every) (NN pair)) (PP (IN of) (NP (NNS vertices) (VBP i) (, ,) (NN j)))) (VP (DT either) (VP (VBZ has) (NP (DT all) (NNS successors)) (PP (IN in) (ADJP (JJ common)))) (CC or) (VP (VBZ has) (NP (DT no) (JJ common) (NNS successors)))))) (-RRB- -RRB-))))) (VP (NNS reduces) (PP (TO to) (NP (DT the) (JJ two-machine) (JJ no-idle/no-wait) (NN flow) (NN shop) (NN problem))))))) (. .))
(S (ADVP (RB Correspondingly)) (, ,) (NP (PRP we)) (VP (VBP provide) (NP (NP (DT a) (JJ new) (ADJP (RB polynomially) (JJ solvable)) (JJ special) (NN case)) (PP (IN of) (NP (DT the) (JJ Hamiltonian) (NNP Path) (NN problem))))) (. .))
(S (ADVP (RB Then)) (, ,) (NP (PRP we)) (VP (VP (VBP show) (SBAR (IN that) (S (ADVP (RB also)) (NP (DT the) (JJ corresponding) (ADJP ($ $) (JJ m) ($ $) (JJ -machine)) (JJ no-idle) (JJ no-wait) (NN flow) (NN shop) (NN problem)) (VP (VBZ is) (ADJP (RB polynomially) (JJ solvable)))))) (CC and) (VP (VB provide) (NP (DT an) (NNP O) (PRN (-LRB- -LRB-) (JJ mn) (NN log) (NN n) (-RRB- -RRB-)) (NN exact) (NN algorithm)))) (. .))
(S (ADVP (RB Finally)) (NP (PRP we)) (VP (VBP prove) (SBAR (IN that) (S (NP (NP (DT the) (JJ 2-machine) (JJ no-idle/no-wait) (NN job) (NN shop) (NN problem)) (CC and) (NP (DT the) (JJ 2-machine) (JJ no-idle/no-wait) (JJ open) (NN shop) (NN problem))) (VP (VBP are) (ADJP (NNP NP-Hard)) (PP (IN in) (NP (DT the) (JJ strong) (NN sense))))))) (. .))
