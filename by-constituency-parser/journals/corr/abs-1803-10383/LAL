(S (NP (JJ Functional) (NNS languages)) (VP (VBP have) (VP (VBN provided) (NP (JJ major) (NNS benefits)) (PP (TO to) (NP (DT the) (NN verification) (NN community))))) (. .))
(S (SBAR (IN Although) (S (NP (NP (NNS features)) (PP (JJ such) (IN as) (NP (NP (NN purity)) (, ,) (NP (DT a) (JJ strong) (NN type) (NN system)) (, ,) (CC and) (NP (JJ computational) (NNS abstractions))))) (VP (MD can) (VP (VB help) (S (VP (VB guide) (NP (NNS programmers)) (ADVP (RB away) (PP (IN from) (NP (JJ costly) (NNS errors)))))))))) (, ,) (NP (DT these)) (VP (MD can) (VP (VB present) (NP (NNS challenges)) (SBAR (WHADVP (WRB when)) (S (VP (VBN used) (PP (IN in) (NP (DT a) (JJ reactive) (NN system)))))))) (. .))
(S (NP (NNP Functional) (NNP Reactive) (NNP Programming)) (VP (VBZ is) (NP (NP (DT a) (NN paradigm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ allows) (NP (VBZ users)) (NP (NP (NP (DT the) (NNS benefits)) (PP (IN of) (NP (JJ functional) (NNS languages)))) (CC and) (NP (NP (DT an) (JJ easy) (NN interface)) (PP (TO to) (NP (DT a) (JJ reactive) (NN environment)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (NN tool)) (PP (IN for) (S (VP (VBG building) (NP (JJ autonomous) (NN vehicle) (NNS controllers)) (PP (IN in) (NP (NNP FRP))) (S (VP (VBG using) (NP (NNP Haskell))))))))) (. .))
