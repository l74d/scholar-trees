(S (NP (PRP We)) (VP (VBP propose) (NP (NP (NNP OverSketch)) (, ,) (NP (NP (DT an) (JJ approximate) (NN algorithm)) (PP (IN for) (NP (NP (JJ distributed) (NN matrix) (NN multiplication)) (PP (IN in) (NP (NN serverless) (NN computing)))))))) (. .))
(S (NP (NNP OverSketch)) (VP (VBZ leverages) (NP (NP (NNS ideas)) (PP (IN from) (NP (NP (NN matrix) (VBG sketching)) (CC and) (NP (NN high-performance) (NN computing))))) (S (VP (TO to) (VP (VB enable) (NP (NP (JJ cost-efficient) (NN multiplication)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (JJ resilient) (PP (TO to) (NP (NP (NP (NNS faults)) (CC and) (NP (VBG straggling) (NNS nodes))) (ADJP (JJ pervasive) (PP (IN in) (NP (JJ low-cost) (NN serverless) (NNS architectures))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VP (VB establish) (NP (NP (JJ statistical) (NNS guarantees)) (PP (IN on) (NP (NP (DT the) (NN accuracy)) (PP (IN of) (NP (NNP OverSketch))))))) (CC and) (VP (ADVP (RB empirically)) (VB validate) (NP (PRP$ our) (NNS results)) (PP (IN by) (S (VP (VBG solving) (NP (DT a) (JJ large-scale) (JJ linear) (NN program)) (S (VP (VBG using) (NP (JJ interior-point) (NNS methods))))))))) (CC and) (VP (VB demonstrate) (NP (NP (DT a) (ADJP (CD 34) (NN %)) (NN reduction)) (PP (IN in) (NP (JJ compute) (NN time))) (PP (IN on) (NP (NNP AWS) (NNP Lambda)))))) (. .))
