(S (NP (PRP We)) (VP (VBP reflect) (PP (IN on) (NP (NN programming))) (PP (IN with) (NP (JJ complicated) (NNS effects))) (, ,) (S (VP (VP (VBG recalling) (NP (DT an) (ADJP (RB undeservingly) (VBN forgotten)) (NN alternative)) (PP (IN to) (NP (JJ monadic) (NN programming)))) (CC and) (VP (VBG checking) (S (VP (TO to) (VP (VB see) (SBAR (WHADVP (WRB how) (RB well)) (S (NP (PRP it)) (VP (MD can) (ADVP (RB actually)) (VP (VB work) (PP (IN in) (NP (JJ modern) (JJ functional) (NNS languages)))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP adopt) (CC and) (VBP argue) (NP (NP (DT the) (NN position)) (PP (IN of) (NP (NP (NN factoring)) (NP (DT an) (JJ effectful) (NN program))))) (PP (IN into) (NP (NP (DT a) (NML (JJ first) (HYPH -) (NN order)) (JJ effectful) (NN DSL)) (PP (IN with) (NP (NP (DT a) (JJ rich) (, ,) (ADJP (JJR higher) (HYPH -) (NN order)) ('' ') (NN macro)) ('' ') (NP (NN system))))))) (. .))
(S (NP (RB Not) (DT all) (NNS programs)) (VP (MD can) (VP (VB be) (ADVP (RB thus)) (VP (VBN factored)))) (. .))
(S (SBAR (IN Although) (S (NP (DT the) (NN approach)) (VP (VBZ is) (RB not) (NP (JJ general) (HYPH -) (NN purpose))))) (, ,) (NP (PRP it)) (VP (VBZ does) (VP (VB admit) (NP (JJ interesting) (NNS programs)))) (. .))
(S (NP (DT The) (JJ effectful) (NN DSL)) (VP (VP (VBZ is) (ADVP (RB likewise)) (ADJP (RB rather) (NN problem) (HYPH -) (JJ specific))) (CC and) (VP (VBZ lacks) (NP (NP (NML (JJ general) (HYPH -) (NN purpose)) (JJ monadic) (NN composition)) (, ,) (CC or) (RB even) (NP (NNS functions))))) (. .))
(S (PP (IN On) (NP (DT the) (NN upside))) (, ,) (NP (PRP it)) (VP (VP (VBZ expresses) (NP (DT the) (NN problem)) (ADVP (RB elegantly))) (, ,) (VP (VBZ is) (ADJP (JJ simple) (S (VP (TO to) (VP (VP (VB implement)) (CC and) (NP (NN reason) (RB about))))))) (, ,) (CC and) (VP (VBZ lends) (NP (PRP itself)) (PP (IN to) (NP (NP (JJ non-standard) (NNS interpretations)) (PP (JJ such) (IN as) (NP (NP (NN code) (NN generation) (PRN (-LRB- -LRB-) (NP (NN compilation)) (-RRB- -RRB-))) (CC and) (NP (JJ abstract) (NN interpretation)))))))) (. .))
(S (S (NP (DT A) (JJ specialized) (NN DSL)) (VP (VBZ is) (ADJP (JJ liable) (S (VP (TO to) (VP (VB be) (ADVP (RB frequently)) (VP (VBN extended)))))))) (: ;) (S (NP (NP (DT the) (NN experience)) (PP (IN with) (NP (NP (DT the) (ADJP (JJ tagless) (HYPH -) (JJ final)) (NN style)) (PP (IN of) (NP (NP (NN DSL) (NN embedding)) (VP (VBN shown) (SBAR (IN that) (S (NP (DT the) (NN DSL) (NN evolution)) (VP (MD can) (VP (VB be) (VP (VBN made) (ADJP (JJ painless)) (, ,) (PP (IN with) (NP (DT the) (JJ maximum) (NN code)))))))))))))) (VP (VB reuse))) (. .))
(S (NP (PRP We)) (VP (VBP illustrate) (NP (DT the) (NN argument)) (PP (IN on) (NP (NP (DT a) (ADJP (JJ simple) (CC but) (JJ representative)) (NN example)) (PP (IN of) (NP (NP (DT a) (ADJP (RB rather) (JJ complicated)) (NN effect)) (: --) (NP (NN non-determinism)))) (, ,) (PP (VBG including) (NP (JJ committed) (NN choice)))))) (. .))
(S (ADVP (RB Unexpectedly)) (, ,) (NP (PRP it)) (VP (VBZ turns) (PRT (RP out)) (SBAR (S (NP (PRP we)) (VP (MD can) (VP (VP (VB write) (NP (JJ interesting) (JJ non-deterministic) (NNS programs)) (PP (PP (IN in) (NP (DT an) (ADJP (NN ML) (HYPH -) (JJ like)) (NN language))) (CONJP (RB just) (IN as)) (PP (ADVP (ADVP (RB naturally)) (CC and) (ADVP (RB elegantly) (RB as))) (IN in) (NP (DT the) (JJ functional) (HYPH -) (NN logic) (NN language) (NNP Curry))))) (: --) (CC and) (VP (CONJP (RB not) (RB only)) (VP (VB run) (NP (PRP them))) (CC but) (VP (ADVP (RB also)) (ADVP (RB statically)) (VP (VB analyze) (, ,) (VB optimize) (CC and) (VB compile))))))))) (. .))
(S (NP (NP (DT The) (NN richness)) (PP (IN of) (NP (DT the) (NNP Meta) (NNP Language)))) (VP (VBZ does) (, ,) (PP (IN in) (NP (NN reality))) (, ,) (S (VP (VB compensate) (PP (IN for) (NP (NP (DT the) (NN simplicity)) (PP (IN of) (NP (DT the) (JJ effectful) (NN DSL)))))))) (. .))
(S (NP (DT The) (JJ key) (NN idea)) (VP (VBZ goes) (ADVP (RB back) (PP (IN to) (NP (NP (DT the) (NNS origins)) (PP (IN of) (NP (NNP ML)))))) (PP (IN as) (NP (NP (DT the) (NNP Meta) (NNP Language)) (PP (IN for) (NP (DT the) (NNP Edinburgh) (NNP LCF) (NN theorem) (NN prover)))))) (. .))
(S (PP (RB Instead) (IN of) (S (VP (VBG using) (NP (NNP ML)) (S (VP (TO to) (VP (VB build) (NP (NNS theorems)))))))) (, ,) (NP (PRP we)) (ADVP (RB now)) (VP (VBP build) (NP (-LRB- -LRB-) (NN DSL) (-RRB- -RRB-) (NNS programs))) (. .))
