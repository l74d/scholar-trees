(S (PP (IN For) (NP (NP (DT a) (NN relation)) (SBAR (WHNP (WDT that)) (S (VP (VBZ violates) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (JJ functional) (NNS dependencies))))))))) (, ,) (NP (PRP we)) (VP (VBP consider) (NP (NP (DT the) (NN task)) (PP (IN of) (S (VP (VBG finding) (NP (NP (NP (DT a) (JJ maximum) (NN number)) (PP (IN of) (NP (JJ pairwise-consistent) (NNS tuples)))) (, ,) (CC or) (SBAR (WHNP (WP what)) (S (VP (VBZ is) (VP (VBN known) (PP (IN as) (NP (DT a) (`` ``) (NN cardinality) (NN repair))))))))))))) (. .) ('' ''))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (JJ polynomial-time) (NN algorithm)) (SBAR (WHNP (IN that)) (, ,) (S (PP (IN for) (NP (NP (JJ certain) (JJ fixed) (NN relation) (NN schemas)) (PRN (-LRB- -LRB-) (PP (IN with) (NP (JJ functional) (NNS dependencies))) (-RRB- -RRB-)))) (, ,) (VP (VBZ computes) (NP (DT a) (NN cardinality) (NN repair))))))) (. .))
(S (ADVP (RB Moreover)) (, ,) (NP (PRP we)) (VP (VBP prove) (SBAR (DT that) (S (PP (IN on) (NP (NP (DT any)) (PP (IN of) (NP (NP (DT the) (NN schemas)) (VP (RB not) (VBN covered) (PP (IN by) (NP (DT the) (NN algorithm)))))))) (, ,) (S (VP (VBG finding) (NP (DT a) (NN cardinality) (NN repair)))) (VP (VBZ is) (, ,) (PP (IN in) (NP (NN fact))) (, ,) (NP (DT an) (JJ NP-hard) (NN problem)))))) (. .))
(S (PP (IN In) (NP (JJ particular))) (, ,) (S (NP (PRP we)) (VP (VB establish) (NP (NP (DT a) (NN dichotomy)) (PP (IN in) (NP (NP (DT the) (NN complexity)) (PP (IN of) (S (VP (VBG computing) (NP (DT a) (NN cardinality) (NN repair)))))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP present) (NP (NP (DT an) (JJ efficient) (NN algorithm)) (SBAR (S (VP (TO to) (VP (VB determine) (SBAR (IN whether) (S (NP (DT a) (VBN given) (NN schema)) (VP (NNS belongs) (PP (TO to) (NP (NP (NP (DT the) (JJ positive) (NN side)) (CC or) (NP (DT the) (JJ negative) (NN side))) (PP (IN of) (NP (DT the) (NN dichotomy))))))))))))))) (. .))
