(S (NP (NP (CD Two) (JJ key) (NN synchronization) (NN paradigms)) (PP (IN for) (NP (NP (DT the) (NN construction)) (PP (IN of) (NP (JJ scalable) (JJ concurrent) (NNS data-structures)))))) (VP (VBP are) (NP (NN software) (VBG combining) (CC and) (NN elimination))) (. .))
(S (NP (JJ Elimination-based) (NN concurrent) (NNS data-structures)) (VP (JJ allow) (S (NP (NP (NNS operations)) (PP (IN with) (NP (NN reverse) (NNS semantics))) (PRN (-LRB- -LRB-) (PP (JJ such) (IN as) (NP (NN push) (CC and) (NN pop) (NN stack) (NNS operations))) (-RRB- -RRB-))) (VP (TO to) (VP (`` ``) (VP (VB collide)) ('' '') (CC and) (VP (NN exchange) (NP (NNS values))) (PP (IN without) (S (VP (VBG having) (S (VP (TO to) (VP (NN access) (NP (DT a) (JJ central) (NN location)))))))))))) (. .))
(S (S (NP (NNP Software) (VBG combining)) (, ,) (PP (IN on) (NP (DT the) (JJ other) (NN hand))) (, ,) (VP (VBZ is) (ADJP (JJ effective)) (SBAR (WHADVP (WRB when)) (S (NP (VBG colliding) (NNS operations)) (VP (VBP have) (NP (JJ identical) (NNS semantics))))))) (: :) (S (SBAR (WHADVP (WRB when)) (S (NP (NP (DT a) (NN pair)) (PP (IN of) (NP (NP (NNS threads)) (VP (VBG performing) (NP (NP (NNS operations)) (PP (IN with) (NP (JJ identical) (NNS semantics)))))))) (VP (NN collide)))) (, ,) (S (NP (NP (DT the) (NN task)) (PP (IN of) (S (VP (VBG performing) (NP (NP (DT the) (JJ combined) (NN set)) (PP (IN of) (NP (NNS operations)))))))) (VP (VBZ is) (VP (VBN delegated) (PP (TO to) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (NNS threads)))))))) (CC and) (S (NP (DT the) (JJ other) (JJ thread)) (VP (NNS waits) (SBAR (IN for) (S (NP (PRP$ its) (NN operation) (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-))) (VP (TO to) (VP (VB be) (VP (VBN performed))))))))) (. .))
(S (S (VP (VBG Applying) (NP (DT this) (NN mechanism)) (ADVP (RB iteratively)))) (VP (MD can) (VP (VP (VB reduce) (NP (NN memory) (NN contention))) (CC and) (VP (VB increase) (NP (NN throughput))))) (. .))
(S (NP (DT The) (ADJP (ADVP (RBS most) (RB highly)) (JJ scalable)) (JJ prior) (NN concurrent) (NN stack) (NN algorithm)) (VP (VBZ is) (NP (DT the) (JJ elimination-backoff) (NN stack))) (. .))
(S (S (NP (DT The) (JJ elimination-backoff) (NN stack)) (VP (VBZ provides) (NP (JJ high) (NN parallelism)) (PP (IN for) (NP (NP (JJ symmetric) (NNS workloads)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NP (DT the) (NNS numbers)) (PP (IN of) (NP (NN push) (CC and) (NN pop) (NNS operations)))) (VP (VBP are) (ADJP (RB roughly) (JJ equal))))))))) (, ,) (CC but) (S (NP (PRP$ its) (NN performance)) (VP (NNS deteriorates) (SBAR (WHADVP (WRB when)) (S (NP (NNS workloads)) (VP (VBP are) (ADJP (JJ asymmetric))))))) (. .))
(S (NP (PRP We)) (VP (JJ present) (NP (NP (NNP DECS)) (, ,) (NP (NP (DT a) (JJ novel) (NNP Dynamic) (NNP Elimination-Combining) (NNP Stack) (NN algorithm)) (, ,) (SBAR (WHNP (IN that)) (S (VP (VBZ scales) (ADVP (RB well)) (PP (IN for) (NP (DT all) (NN workload) (NNS types))))))))) (. .))
(S (SBAR (IN While) (S (VP (VBG maintaining) (NP (NP (DT the) (NN simplicity) (CC and) (NN low-overhead)) (PP (IN of) (NP (DT the) (JJ elimination-bakcoff) (NN stack))))))) (, ,) (NP (NNP DECS)) (VP (VBZ manages) (S (VP (TO to) (VP (VB benefit) (PP (IN from) (NP (NP (NNS collisions)) (PP (IN of) (NP (UCP (DT both) (JJ identical-) (CC and) (JJ reverse-semantics)) (NNS operations))))))))) (. .))
(S (NP (PRP$ Our) (JJ empirical) (NN evaluation)) (VP (NNS shows) (SBAR (WDT that) (S (NP (NNP DECS)) (VP (VBZ scales) (ADVP (ADVP (RB significantly) (JJR better)) (PP (IN than) (NP (UCP (DT both) (VBG blocking) (CC and) (JJ non-blocking)) (RBS best) (JJ prior) (NN stack) (NN algorithms)))))))) (. .))
