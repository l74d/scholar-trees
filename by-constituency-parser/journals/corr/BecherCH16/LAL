(S (S (PP (IN In) (NP (DT this) (NN work))) (NP (PRP we)) (VP (VBP introduce) (NP (NP (DT a) (NN notion)) (PP (IN of) (NP (NN independence))) (VP (VBN based) (PP (IN on) (NP (JJ finite-state) (NNS automata))))))) (: :) (S (NP (CD two) (NN infinite) (NNS words)) (VP (VBP are) (ADJP (JJ independent)) (SBAR (IN if) (S (NP (DT no) (NN one)) (VP (VBZ helps) (S (VP (TO to) (VP (VB compress) (NP (DT the) (JJ other)) (S (VP (VBG using) (NP (NP (JJ one-to-one) (JJ finite-state) (NNS transducers)) (PP (IN with) (NP (JJ auxiliary) (NN input)))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (RB that) (, ,) (S (SBAR (IN as) (S (VP (VBN expected)))) (, ,) (NP (NP (DT the) (NN set)) (PP (IN of) (NP (NP (JJ independent) (NNS pairs)) (PP (IN of) (NP (JJ infinite) (NNS words)))))) (VP (VBZ has) (NP (NNP Lebesgue) (NN measure) (CD 1)))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (DT the) (NN join)) (PP (IN of) (NP (CD two) (JJ independent) (JJ normal) (NNS words)))) (VP (VBZ is) (ADJP (JJ normal)))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NP (DT the) (NN independence)) (PP (IN of) (NP (CD two) (JJ normal) (NNS words)))) (VP (VBZ is) (RB not) (VP (VBN guaranteed) (SBAR (IN if) (S (NP (PRP we)) (ADVP (RB just)) (VP (VBP require) (SBAR (IN that) (S (NP (PRP$ their) (NN join)) (VP (VBZ is) (ADJP (JJ normal)))))))))) (. .))
