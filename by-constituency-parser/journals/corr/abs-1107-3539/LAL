(S (NP (PRP We)) (VP (VBP describe) (NP (NP (DT a) (JJ derivational) (NN approach)) (PP (TO to) (NP (VB abstract) (NN interpretation))) (SBAR (WHNP (IN that)) (S (VP (NNS yields) (NP (ADJP (ADJP (RB novel)) (CC and) (ADJP (RB transparently) (JJ sound))) (JJ static) (NNS analyses)) (SBAR (WHADVP (WRB when)) (S (VP (VBN applied) (PP (TO to) (NP (NP (JJ well-established) (JJ abstract) (NNS machines)) (PP (IN for) (NP (ADJP (NN higher-order) (CC and) (JJ imperative)) (NN programming) (NNS languages))))))))))))) (. .))
(S (S (VP (TO To) (VP (VP (VB demonstrate) (NP (DT the) (NN technique))) (CC and) (VP (VB support) (NP (PRP$ our) (NN claim)))))) (, ,) (NP (PRP we)) (VP (VBP transform) (NP (NP (NP (NP (DT the) (NNP CEK) (NN machine)) (PP (IN of) (NP (NNP Felleisen) (CC and) (NNP Friedman)))) (, ,) (NP (NP (DT a) (JJ lazy) (NN variant)) (PP (IN of) (NP (NP (NNP Krivine) (POS 's)) (NN machine)))) (, ,)) (CC and) (NP (NP (DT the) (JJ stack-inspecting) (NNP CM) (NN machine)) (PP (IN of) (NP (NNS Clements) (CC and) (NNP Felleisen))))) (PP (IN into) (NP (NP (JJ abstract) (NNS interpretations)) (PP (IN of) (NP (PRP themselves)))))) (. .))
(S (NP (DT The) (JJ resulting) (NNS analyses)) (VP (VP (IN bound) (NP (NP (JJ temporal) (NN ordering)) (PP (IN of) (NP (NN program) (NNS events))))) (: ;) (VP (CC predict) (NP (JJ return-flow) (CC and) (JJ stack-inspection) (NN behavior))) (: ;) (CC and) (VP (VB approximate) (NP (NP (DT the) (NN flow) (CC and) (NN evaluation)) (PP (IN of) (NP (JJ by-need) (NNS parameters)))))) (. .))
(S (PP (IN For) (NP (NP (DT all)) (PP (IN of) (NP (DT these) (NNS machines))))) (, ,) (NP (PRP we)) (VP (VBP find) (SBAR (IN that) (S (NP (NP (NP (DT a) (NN series)) (PP (IN of) (NP (JJ well-known) (JJ concrete) (NN machine) (NNS refactorings)))) (, ,) (CC plus) (NP (NP (DT a) (NN technique)) (PP (IN of) (NP (JJ store-allocated) (NNS continuations)))) (, ,)) (VP (VBZ leads) (PP (TO to) (NP (NP (NNS machines)) (SBAR (WHNP (WDT that)) (S (VP (VBP abstract) (PP (IN into) (NP (JJ static) (NNS analyses))) (PP (ADVP (RB simply)) (IN by) (S (VP (VBG bounding) (NP (PRP$ their) (NNS stores)))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (SBAR (IN that) (S (NP (DT the) (NN technique)) (VP (VBZ scales) (ADVP (RP up)) (ADVP (RB uniformly)) (S (VP (TO to) (VP (VB allow) (NP (NP (JJ static) (NN analysis)) (PP (IN of) (NP (NP (JJ realistic) (NN language) (NNS features)) (, ,) (PP (VBG including) (NP (NP (NN tail) (NNS calls)) (, ,) (NP (NNS conditionals)) (, ,) (NP (NN side) (NNS effects)) (, ,) (NP (NNS exceptions)) (, ,) (NP (JJ first-class) (NNS continuations)) (, ,) (CC and) (ADVP (RB even)) (NP (VB garbage) (NN collection)))))))))))))) (. .))
(S (SBAR (IN In) (NN order) (S (VP (TO to) (VP (VB close) (NP (NP (DT the) (NN gap)) (PP (IN between) (NP (NN formalism) (CC and) (NN implementation)))))))) (, ,) (NP (PRP we)) (VP (VBP provide) (NP (NP (NNS translations)) (PP (IN of) (NP (DT the) (NNS mathematics))) (PP (IN as) (NP (NP (VBG running) (NNP Haskell) (NN code)) (PP (IN for) (NP (NP (DT the) (JJ initial) (NN development)) (PP (IN of) (NP (PRP$ our) (NN method))))))))) (. .))
