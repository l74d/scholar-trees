(S (NP (PRP We)) (VP (VBP describe) (NP (DT a) (JJ derivational) (NN approach)) (PP (IN to) (NP (NP (JJ abstract) (NN interpretation)) (SBAR (WHNP (WDT that)) (S (VP (VBZ yields) (NP (ADJP (ADJP (JJ novel)) (CC and) (ADJP (RB transparently) (JJ sound))) (NN static) (NNS analyses)) (SBAR (WHADVP (WRB when)) (S (VP (VBN applied) (PP (TO to) (NP (NP (ADJP (RB well) (HYPH -) (VBN established)) (JJ abstract) (NNS machines)) (PP (IN for) (NP (NML (NML (JJR higher) (HYPH -) (NN order)) (CC and) (NML (ADJP (JJ imperative)) (NN programming))) (NNS languages)))))))))))))) (. .))
(S (S (VP (TO To) (VP (VP (VB demonstrate) (NP (DT the) (NN technique))) (CC and) (VP (VB support) (NP (PRP$ our) (NN claim)))))) (, ,) (NP (PRP we)) (VP (VBP transform) (NP (NP (NP (DT the) (NN CEK) (NN machine)) (PP (IN of) (NP (NNP Felleisen) (CC and) (NNP Friedman)))) (, ,) (NP (NP (DT a) (JJ lazy) (NN variant)) (PP (IN of) (NP (NP (NNP Krivine) (POS 's)) (NN machine)))) (, ,) (CC and) (NP (NP (DT the) (NN stack) (HYPH -)) (VP (VBG inspecting) (NP (NP (NN CM) (NN machine)) (PP (IN of) (NP (NNP Clements) (CC and) (NNP Felleisen)))) (PP (IN into) (NP (NP (JJ abstract) (NNS interpretations)) (PP (IN of) (NP (PRP themselves))))))))) (. .))
(S (S (NP (NP (DT The) (VBG resulting) (NNS analyses)) (VP (VBN bound) (NP (NP (JJ temporal) (NN ordering)) (PP (IN of) (NP (NN program) (NNS events))))))) (: ;) (S (VP (VB predict) (NP (NML (NML (NN return) (HYPH -) (NN flow)) (CC and) (NML (NN stack) (HYPH -) (NN inspection))) (NN behavior)))) (: ;) (CC and) (S (VP (VB approximate) (NP (NP (DT the) (NN flow) (CC and) (NN evaluation)) (PP (IN of) (NP (NML (PP (IN by) (HYPH -) (NP (NN need)))) (NNS parameters)))))) (. .))
(S (PP (IN For) (NP (NP (DT all)) (PP (IN of) (NP (DT these) (NNS machines))))) (, ,) (NP (PRP we)) (VP (VBP find) (SBAR (IN that) (S (NP (NP (NP (DT a) (NN series)) (PP (IN of) (NP (ADJP (RB well) (HYPH -) (VBN known)) (JJ concrete) (NN machine) (NNS refactorings)))) (, ,) (CC plus) (NP (NP (DT a) (NN technique)) (PP (IN of) (NP (ADJP (NN store) (HYPH -) (VBN allocated)) (NNS continuations))))) (, ,) (VP (VBZ leads) (PP (IN to) (NP (NNS machines))) (SBAR (IN that) (S (ADJP (JJ abstract) (PP (IN into) (NP (NN static) (NNS analyses)))) (PP (ADVP (RB simply)) (IN by) (S (VP (VBG bounding) (NP (PRP$ their) (NNS stores))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (SBAR (IN that) (S (NP (DT the) (NN technique)) (VP (VBZ scales) (PRT (RP up)) (ADVP (RB uniformly)) (S (VP (TO to) (VP (VB allow) (NP (NP (NN static) (NN analysis)) (PP (IN of) (NP (JJ realistic) (NN language) (NNS features))) (, ,) (PP (VBG including) (NP (NP (NP (NP (NN tail) (NNS calls)) (, ,) (NP (NNS conditionals)) (, ,) (NP (NN side) (NNS effects)) (, ,) (NP (NNS exceptions)) (, ,) (ADVP (RB first))) (HYPH -) (NP (NN class) (NNS continuations))) (, ,) (CC and) (RB even) (NP (NN garbage) (NN collection)))))))))))) (. .))
(S (PP (IN In) (NP (NN order) (S (VP (TO to) (VP (VB close) (NP (NP (DT the) (NN gap)) (PP (IN between) (NP (NN formalism) (CC and) (NN implementation))))))))) (, ,) (NP (PRP we)) (VP (VBP provide) (NP (NP (NNS translations)) (PP (IN of) (NP (DT the) (NNS mathematics)))) (PP (IN as) (S (VP (VBG running) (NP (NNP Haskell) (NN code)) (PP (IN for) (NP (NP (DT the) (JJ initial) (NN development)) (PP (IN of) (NP (PRP$ our) (NN method))))))))) (. .))
