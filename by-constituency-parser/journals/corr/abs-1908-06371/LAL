(S (NP (DT This) (NN paper)) (VP (VBZ proposes) (NP (NP (DT a) (JJ general) (NN algorithm)) (VP (VBN called) (S (NP (NNP Store-zechin)))) (PP (IN for) (S (VP (ADVP (RB quickly)) (VBG computing) (NP (NP (DT the) (NN permanent)) (PP (IN of) (NP (DT an) (JJ arbitrary) (NN square) (NN matrix))))))))) (. .))
(S (NP (PRP$ Its) (JJ key) (NN idea)) (VP (VBZ is) (NP (JJ storage) (, ,) (NN multiplexing) (, ,) (CC and) (NN recursion))) (. .))
(S (INTJ (DT That) (VBZ is)) (, ,) (PP (IN in) (NP (DT a) (JJ recursive) (NN process))) (, ,) (NP (NP (DT some) (NNS sub-terms)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (ADVP (RB already)) (VP (VBN been) (VP (VBN calculated))))))) (VP (VP (VBP are) (ADVP (RB no) (RB longer)) (VP (VBN calculated))) (, ,) (CC but) (VP (VBP are) (VP (ADVP (RB directly)) (VBN substituted) (PP (IN with) (NP (DT the) (JJ previous) (NN calculation) (NNS results)))))) (. .))
(S (NP (DT The) (JJ new) (NN algorithm)) (VP (VBZ utilizes) (NP (NP (ADJP (RB sufficiently) (NN computer)) (NNS memories)) (CC and) (NP (VBN stored) (NNS data))) (S (VP (TO to) (VP (VB speed) (NP (NP (DT the) (NN computation)) (PP (IN of) (NP (DT a) (NN permanent)))))))) (. .))
(S (NP (DT The) (NNP Analyses)) (VP (VBP show) (SBAR (IN that) (S (S (VP (VBG computating) (NP (NP (DT the) (NN permanent)) (PP (IN of) (NP (DT an) (ADJP (JJ n) (NN *) (NNS n)) (VBN matrix)))) (PP (IN by) (NP (JJ Store-zechin))))) (VP (VP (VBZ requires) (NP (NP (PRN (-LRB- -LRB-) (CD 2^) (PRN (-LRB- -LRB-) (NP (JJ n)) (: -) (CD 1) (-RRB- -RRB-)) (: -) (CD 1) (-RRB- -RRB-)) (NP (NN n) (NNS multiplications))) (CC and) (NP (PRN (-LRB- -LRB-) (CD 2^) (PRN (-LRB- -LRB-) (JJ n-1) (-RRB- -RRB-)) (-RRB- -RRB-) (ADJP (-LRB- -LRB-) (JJ n) (: -) (CD 2) (-RRB- -RRB-) (VBD +) (CD 1))) (NNS additions))) (SBAR (IN while) (S (VP (VBZ does) (PRN (-LRB- -LRB-) (CD 2^n) (: -) (CD 1) (-RRB- -RRB-)) (NP (NP (QP (NN n) ($ +) (CD 1)) (NNS multiplications)) (CC and) (NP (PRN (-LRB- -LRB-) (CD 2^n) (: -) (NN n) (-RRB- -RRB-) (PRN (-LRB- -LRB-) (JJ n) (NNP +) (CD 1) (-RRB- -RRB-)) (: -) (CD 2)) (NNS additions))) (PP (IN by) (NP (DT the) (NNP Ryser) (NN algorithm))))))) (, ,) (CC and) (VP (VBZ does) (NP (NP (PRN (-LRB- -LRB-) (CD 2^) (PRN (-LRB- -LRB-) (NP (JJ n)) (: -) (CD 1) (-RRB- -RRB-)) (-RRB- -RRB-)) (NP (FW n) (FW +) (PRN (-LRB- -LRB-) (JJ n) (NNP +) (CD 2) (-RRB- -RRB-)) (NNS multiplications))) (CC and) (NP (-LRB- -LRB-) (CD 2^) (PRN (-LRB- -LRB-) (NP (NP (JJ n)) (: -) (CD 1)) (-RRB- -RRB-)) (-RRB- -RRB-) (PRN (PRN (-LRB- -LRB-) (JJ n) (NNP +) (CD 1) (-RRB- -RRB-)) (NN +) (PRN (-LRB- -LRB-) (JJ n^2) (: -) (JJ n) (NN -1) (-RRB- -RRB-))) (NNS additions))) (PP (IN by) (NP (DT the) (NNP R-N-W) (NN algorithm)))))))) (. .))
(S (ADVP (RB Therefore)) (, ,) (NP (NNP Store-zechin)) (VP (VP (VBZ is) (ADJP (JJ excellent)) (ADVP (ADVP (JJR more)) (PP (IN than) (NP (DT the) (JJ latter) (CD two) (NN algorithms))))) (, ,) (CC and) (VP (VBZ has) (NP (DT a) (JJR better) (NN application) (NN prospect)))) (. .))
