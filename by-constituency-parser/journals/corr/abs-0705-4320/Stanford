(S (NP (PRP We)) (VP (VBP present) (NP (DT a) (NN CAD) (NN framework)) (PP (IN for) (NP (NP (NNP CMOL)) (, ,) (NP (DT a) (NML (NML (NN hybrid) (NN CMOS)) (HYPH /) (NML (JJ molecular) (NN circuit))) (NN architecture))))) (. .))
(S (NP (PRP$ Our) (NN framework)) (ADVP (RB first)) (VP (VP (VBZ transforms) (NP (NP (DT any) (ADJP (ADVP (RB logically)) (VBN synthesized)) (NN circuit)) (VP (VBN based) (PP (IN on) (NP (NP (CC AND)) (, /) (NP (NP (CC OR)) (HYPH /) (NP (RB NOT) (NNS gates))))) (PP (IN to) (NP (DT a) (NNP NOR) (NN gate) (NN circuit)))))) (, ,) (CC and) (ADVP (RB then)) (VP (VBZ maps) (NP (DT the) (NNP NOR) (NNS gates)) (PP (IN to) (NP (NNP CMOL))))) (. .))
(S (NP (PRP We)) (VP (VBP encode) (NP (NP (DT the) (NML (NN CMOL) (NN cell)) (NN assignment) (NN problem)) (PP (IN as) (NP (JJ boolean) (NNS conditions))))) (. .))
(S (NP (DT The) (JJ boolean) (NN constraint)) (VP (VBZ is) (ADJP (JJ satisfiable)) (SBAR (IN if) (CC and) (RB only))) (SBAR (IN if) (S (NP (EX there)) (VP (VBZ is) (NP (DT a) (NN way) (S (VP (TO to) (VP (VB map) (NP (NP (PDT all) (DT the) (NNP NOR) (NNS gates)) (PP (IN to) (NP (DT the) (NN CMOL) (NNS cells))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB further)) (VP (VP (VB investigate) (NP (NP (JJ various) (NNS types)) (PP (IN of) (NP (NN static) (NNS defects)))) (PP (IN for) (NP (DT the) (NNP CMOL) (NN architecture)))) (, ,) (CC and) (VP (VB propose) (NP (NP (DT a) (NN reconfiguration) (NN technique)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB deal) (PP (IN with) (NP (DT these) (NNS defects))) (PP (IN through) (NP (PRP$ our) (NNP CAD) (NN framework)))))))))) (. .))
(S (NP (DT This)) (VP (VBZ is) (NP (NP (NP (DT the) (JJ first) (VBN automated) (NN framework)) (PP (IN for) (NP (NNP CMOL) (NN cell) (NN assignment)))) (, ,) (CC and) (NP (DT the) (ADJP (JJ first) (S (VP (TO to) (VP (VB model) (NP (JJ several) (JJ different) (NN CMOL)))))) (NN static) (NNS defects)))) (. .))
(S (NP (JJ Empirical) (NNS results)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NN approach)) (VP (VBZ is) (ADJP (JJ efficient) (CC and) (JJ scalable)))))) (. .))
