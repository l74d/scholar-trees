(S (PP (IN For) (NP (JJ many) (NX (NX (JJ application-level) (JJ distributed) (NNS protocols)) (CC and) (NX (JJ parallel) (NN algorithms))))) (, ,) (NP (NP (NP (DT the) (NN set)) (PP (IN of) (NP (NNS participants)))) (, ,) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NNS messages)))) (CC or) (NP (DT the) (NN interaction) (NN structure))) (VP (VBP are) (ADVP (RB only)) (VP (VBN known) (PP (IN at) (NP (NN run-time))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ proposes) (NP (NP (DT a) (JJ dependent) (NN type) (NN theory)) (PP (IN for) (NP (NN multiparty) (NNS sessions))) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (ADVP (RB statically)) (VB guarantee) (NP (NP (JJ type-safe) (, ,) (JJ deadlock-free) (NN multiparty) (NNS interactions)) (PP (IN among) (NP (NP (NNS processes)) (SBAR (WHNP (WP$ whose) (NNS specifications)) (S (VP (VBP are) (VP (VBN parameterised) (PP (IN by) (NP (NNS indices)))))))))))))))) (. .))
(S (S (VP (TO To) (VP (VB type) (NP (JJ individual) (VBN distributed) (NNS processes))))) (, ,) (NP (DT a) (JJ parameterised) (JJ global) (NN type)) (VP (VBZ is) (VP (VBN projected) (PP (IN onto) (NP (NP (DT a) (JJ generic) (NN generator)) (SBAR (WHNP (WDT which)) (S (VP (VBZ represents) (NP (NP (DT a) (NN class)) (PP (IN of) (NP (DT all) (JJ possible) (JJ end-point) (NNS types))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (NP (NP (DT the) (NN termination)) (PP (IN of) (NP (DT the) (JJ type-checking) (NN algorithm)))) (PP (IN in) (NP (DT the) (JJ full) (NN system))) (PP (IN with) (NP (DT both) (NP (NN multiparty) (NN session) (NNS types)) (CC and) (NP (JJ recursive) (NNS types))))) (. .))
(S (NP (PRP We)) (VP (VBP illustrate) (NP (PRP$ our) (NN type) (NN theory)) (PP (IN through) (NP (NP (JJ non-trivial) (NN programming) (CC and) (NN verification) (NNS examples)) (VP (VBN taken) (PP (IN from) (NP (NP (JJ parallel) (NN algorithms)) (CC and) (NP (NNP Web) (NNS services) (NNS usecases)))))))) (. .))
