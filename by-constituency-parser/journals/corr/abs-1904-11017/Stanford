(S (NP (NN Parking) (NN pressure)) (VP (VBZ has) (VP (VBN been) (ADVP (RB steadily)) (VP (VBG increasing) (PP (PP (IN in) (NP (NNS cities))) (CONJP (RB as) (RB well) (IN as)) (PP (IN in) (NP (NP (NN university)) (CC and) (NP (JJ corporate) (NNS campuses)))))))) (. .))
(FRAG (S (VP (TO To) (VP (VB relieve)))) (NP (NP (DT this) (NN pressure)) (, ,) (NP (DT this) (NN paper) (NNS studies))) (NP (NP (DT a) (ADJP (NN car) (HYPH -) (VBG pooling)) (NN platform)) (SBAR (WHNP (WDT that)) (S (VP (MD would) (VP (VB match) (NP (NNS riders) (CC and) (NNS drivers)) (, ,) (SBAR (IN while) (S (S (VP (VBG guaranteeing) (NP (DT a) (NN ride)) (ADVP (RB back)))) (CC and) (S (VP (VBG exploiting) (NP (ADJP (JJ spatial) (CC and) (JJ temporal)) (NN locality))))))))))) (. .))
(S (PP (IN In) (ADJP (JJ particular))) (, ,) (NP (DT the) (NN paper)) (VP (VBZ formalizes) (NP (DT the) (NN Commute) (NN Trip)) (S (VP (VBG Sharing) (S (NP (NN Problem) (-LRB- -LRB-) (NN CTSP) (-RRB- -RRB-)) (VP (TO to) (VP (VB find) (NP (NP (DT a) (NN routing) (NN plan)) (SBAR (WHNP (WDT that)) (S (VP (VBZ maximizes) (NP (NP (NN ride) (NN sharing)) (PP (IN for) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NN commute) (NNS trips)))))))))))))))) (. .))
(S (NP (DT The) (NN CTSP)) (VP (VBZ is) (NP (NP (DT a) (NN generalization)) (PP (IN of) (NP (NP (DT the) (NML (NN vehicle) (NN routing)) (NN problem)) (PP (IN with) (NP (NP (NNS routes)) (SBAR (WHNP (WDT that)) (S (VP (VBP satisfy) (NP (NP (NN time) (NN window)) (, ,) (NP (NN capacity)) (, ,) (S (VP (VBG pairing))) (, ,) (NP (NN precedence)) (, ,) (NP (NN ride) (NN duration)) (, ,) (CC and) (NP (NN driver) (NNS constraints)))))))))))) (. .))
(S (NP (DT The) (NN paper)) (VP (VBZ introduces) (NP (NP (NP (CD two) (JJ exact) (NNS algorithms)) (PP (IN for) (NP (DT the) (NNP CTPS)))) (: :) (NP (NP (DT A) (NML (NN route) (HYPH -) (NN enumeration)) (NN algorithm)) (CC and) (NP (DT a) (NML (NN branch) (HYPH -) (CC and) (HYPH -) (NN price)) (NN algorithm))))) (. .))
(S (NP (JJ Experimental) (NNS results)) (VP (VP (VBP show) (SBAR (IN that) (, ,) (SBAR (IN on) (S (NP (NP (DT a) (NML (JJ high) (HYPH -) (NN fidelity)) (, ,) (NML (JJ real) (HYPH -) (NN world)) (NN dataset)) (PP (IN of) (NP (NP (NN commute) (NNS trips)) (PP (IN from) (NP (NP (DT a) (JJ mid-size) (NN city)) (, ,) (CC both) (NP (NNS algorithms))))))) (ADVP (RB optimally)) (VP (VB solve) (NP (ADJP (JJ small) (CC and) (JJ medium) (HYPH -) (JJ sized)) (NNS problems))))))) (CC and) (VP (VBP produce) (NP (NP (NML (JJ high) (HYPH -) (NN quality)) (NNS solutions)) (PP (IN for) (NP (JJR larger) (NN problem) (NNS instances)))))) (. .))
(S (NP (DT The) (NNS results)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (NN car)) (VP (VBG pooling))) (, ,) (SBAR (IN if) (S (ADVP (RB widely)) (VP (VBN adopted)))) (, ,) (VP (VBZ has) (NP (DT the) (JJ potential) (S (VP (TO to) (VP (VB reduce) (NP (NN vehicle) (NN usage)) (PP (IN by) (NP (NP (QP (RB up) (IN to) (CD 57)) (NN %)) (CC and) (NP (NP (NN decrease) (NN vehicle) (NNS miles)) (VP (VBN traveled) (PP (IN by) (S (ADVP (ADVP (RB up) (PP (IN to) (NP (CD 46) (NN %)))) (SBAR (IN while) (FRAG (ADVP (RB only))))) (VP (VBG incurring) (NP (NP (DT a) (NML (CD 22) (NN %)) (NN increase)) (PP (IN in) (NP (NP (JJ average) (NN ride) (NN time)) (PP (IN per) (NP (NN commuter)))))) (PP (IN for) (NP (NP (DT the) (NNS trips)) (VP (VBN considered))))))))))))))))))) (. .))
