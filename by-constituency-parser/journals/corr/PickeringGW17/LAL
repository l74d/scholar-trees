(NP (NP (NN CONTEXT)) (: :) (S (NP (NNP Data) (NNS accessors)) (VP (VBP allow) (S (NP (CD one)) (VP (TO to) (VP (VB read) (CC and) (VB write) (NP (NP (NNS components)) (PP (IN of) (NP (DT a) (NN data) (NN structure))) (, ,) (PP (JJ such) (IN as) (NP (NP (NP (DT the) (NNS fields)) (PP (IN of) (NP (DT a) (NN record)))) (, ,) (NP (NP (DT the) (NNS variants)) (PP (IN of) (NP (DT a) (NN union)))) (, ,) (CC or) (NP (NP (DT the) (NNS elements)) (PP (IN of) (NP (DT a) (NN container)))))))))))) (. .))
(S (S (NP (DT These) (NNS data) (NNS accessors)) (VP (VBP are) (VP (ADVP (RB collectively)) (VBN known) (PP (IN as) (NP (NNS optics)))))) (: ;) (S (NP (PRP they)) (VP (VBP are) (ADJP (JJ fundamental) (PP (TO to) (NP (NP (NNS programs)) (SBAR (WHNP (WDT that)) (S (VP (VBP manipulate) (NP (JJ complex) (NNS data)))))))))) (. .))
(NP (NP (NN INQUIRY)) (: :) (S (NP (NP (NNP Individual) (NNS data) (NNS accessors)) (PP (IN for) (NP (JJ simple) (NNS data) (NNS structures)))) (VP (VBP are) (ADJP (JJ easy) (SBAR (S (VP (TO to) (VP (VB write) (, ,) (PP (IN for) (NP (NN example))) (PP (IN as) (NP (NP (NNS pairs)) (PP (IN of) (NP (ADJP (`` ``) (NN getter) ('' '') (CC and) (`` ``) (NN setter) ('' '')) (NNS methods)))))))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NP (PRP it))) (VP (VBZ is) (RB not) (ADJP (JJ obvious)) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB combine) (NP (NNS data) (NNS accessors)) (, ,) (PP (IN in) (NP (NP (PDT such) (DT a) (NN way)) (SBAR (IN that) (S (NP (NP (NNS data) (NNS accessors)) (PP (IN for) (NP (DT a) (NN compound) (NN data) (NN structure)))) (VP (VBP are) (VP (VBN composed) (PP (IN out) (PP (IN of) (NP (NP (JJR smaller) (NN data) (NNS accessors)) (PP (IN for) (NP (NP (DT the) (NNS parts)) (PP (IN of) (NP (DT that) (NN structure))))))))))))))))))) (. .))
(S (ADVP (RB Generally)) (, ,) (NP (PRP one)) (VP (VP (VBZ has) (S (VP (TO to) (VP (VB write) (NP (NP (DT a) (NN sequence)) (PP (IN of) (NP (NP (NNS statements) (CC or) (NNS declarations)) (SBAR (WHNP (WDT that)) (S (VP (VBP navigate) (NP (NP (NN step)) (PP (IN by) (NP (NN step)))) (PP (IN through) (NP (DT the) (NN data) (NN structure))) (, ,) (S (VP (VBG accessing) (NP (NP (CD one) (NN level)) (PP (IN at) (NP (DT a) (NN time)))))))))))))))) (: -) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (S (VP (TO to) (VP (VB say) (, ,) (SBAR (S (NP (NNS data) (NNS accessors)) (VP (VBP are) (ADVP (RB traditionally)) (RB not) (NP (NP (JJ first-class) (NNS citizens)) (, ,) (ADJP (JJ combinable) (PP (IN in) (NP (PRP$ their) (JJ own) (NN right))))))))))))))) (. .))
(NP (NP (NN APPROACH)) (: :) (S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (NN framework)) (PP (IN for) (NP (JJ modular) (NNS data) (NN access))) (, ,) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NP (JJ individual) (NNS data) (NNS accessors)) (PP (IN for) (NP (JJ simple) (NNS data) (NNS structures)))) (VP (MD may) (VP (VB be) (VP (ADVP (RB freely)) (VBN combined) (S (VP (TO to) (VP (VB obtain) (NP (NP (ADJP (JJR more) (JJ complex)) (NN data) (NNS accessors)) (PP (IN for) (NP (NN compound) (NNS data) (NNS structures))))))))))))))) (. .))
(S (NP (NNP Data) (NNS accessors)) (VP (VBP become) (NP (JJ first-class) (NNS citizens))) (. .))
(S (NP (DT The) (NN framework)) (VP (VBZ is) (VP (VBN based) (PP (IN around) (NP (NP (DT the) (NN notion)) (PP (IN of) (NP (NP (NNS profunctors)) (, ,) (NP (NP (DT a) (JJ flexible) (NN generalization)) (PP (IN of) (NP (NNS functions)))))))))) (. .))
(NP (NP (NN KNOWLEDGE)) (: :) (S (NP (NP (DT The) (NN language) (NNS features)) (VP (VBN required))) (VP (VBP are) (NP (NP (NP (JJ higher-order) (NNS functions)) (PRN (-LRB- -LRB-) (NP (`` ``) (NNS lambdas) ('' '') (CC or) (`` ``) (NNS closures) ('' '')) (-RRB- -RRB-))) (, ,) (NP (NP (VBN parametrized) (NNS types)) (PRN (-LRB- -LRB-) (NP (`` ``) (NNS generics) ('' '') (CC or) (`` ``) (NP (JJ abstract) (NNS types)) ('' '')) (-RRB- -RRB-))) (, ,) (CC and) (NP (NP (DT some) (NN mechanism)) (PP (IN for) (S (VP (VBG separating) (NP (NNS interfaces)) (PP (IN from) (NP (NNS implementations)))))) (PRN (-LRB- -LRB-) (NP (`` ``) (NN abstract) (NNS classes) ('' '') (CC or) (`` ``) (NP (NNS modules)) ('' '')) (-RRB- -RRB-)))))) (. .))
(S (S (NP (PRP We)) (VP (VBP use) (NP (NNP Haskell)) (PP (IN as) (NP (NP (DT a) (NN vehicle)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (VP (TO to) (VP (VB present) (NP (PRP$ our) (NNS constructions)))))))))) (, ,) (CC but) (S (NP (NP (NNS languages)) (PP (JJ such) (IN as) (NP (NP (NNP Java)) (, ,) (NP (NNP C) (# #)) (, ,) (CC or) (NP (NNP Scala)))) (SBAR (WHNP (WDT that)) (S (VP (VBP provide) (NP (DT the) (JJ necessary) (NNS features)))))) (VP (MD should) (VP (VB work) (ADVP (RB just) (RB as) (RB well))))) (. .))
(FRAG (NP (NN GROUNDING)) (: :) (S (NP (PRP We)) (VP (VBP provide) (NP (NP (NNS implementations)) (PP (IN of) (NP (DT all) (PRP$ our) (NNS constructions)))) (, ,) (PP (IN in) (NP (NP (DT the) (NN form)) (PP (IN of) (NP (DT a) (JJ literate) (NN program))))))) (: :) (S (S (NP (NP (DT the) (NN manuscript) (NN file)) (PP (IN for) (NP (DT the) (NN paper)))) (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN source) (NN code)) (PP (IN for) (NP (DT the) (NN program)))))) (, ,) (CC and) (S (NP (DT the) (JJ extracted) (NN code)) (VP (VBZ is) (ADJP (JJ available) (ADVP (RB separately)) (PP (IN for) (NP (NN evaluation))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP prove) (NP (DT the) (JJ essential) (NNS properties)) (S (VP (VBG demonstrating) (SBAR (IN that) (S (NP (PRP$ our) (JJ profunctor-based) (NNS representations)) (VP (VBP are) (ADJP (RB precisely) (JJ equivalent) (PP (TO to) (NP (DT the) (ADJP (JJR more) (JJ familiar)) (JJ concrete) (NNS representations)))))))))) (. .))
(NP (NP (NN IMPORTANCE)) (: :) (S (NP (PRP$ Our) (NNS results)) (VP (MD should) (VP (VB pave) (NP (NP (DT the) (NN way)) (PP (TO to) (NP (NP (VB simpler) (NNS ways)) (PP (IN of) (S (VP (VBG writing) (NP (NP (NNS programs)) (SBAR (WHNP (WDT that)) (S (VP (NN access) (NP (NP (DT the) (NNS components)) (PP (IN of) (NP (NN compound) (NNS data) (NNS structures))))))))))))))))) (. .))
