(S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (NP (DT the) (JJ current) (NN state)) (PP (IN of) (NP (PRP$ our) (NN work)))) (PP (IN on) (NP (NP (DT an) (JJ interactive) (NN toplevel)) (PP (IN for) (NP (DT the) (NNP OCaml) (NN language))))) (PP (VBN based) (PP (IN on) (NP (NP (DT the) (NML (S (VP (VBG optimizing) (NP (JJ native) (NN code))))) (NN compiler)) (CC and) (NP (NN runtime)))))) (. .))
(S (NP (PRP$ Our) (JJ native) (NN toplevel)) (VP (VBZ is) (ADVP (RB up) (PP (IN to) (NP (QP (CD 100) (NNS times))))) (ADJP (ADJP (JJR faster)) (PP (IN than) (NP (NP (DT the) (NN default) (NN OCaml) (NN toplevel)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (DT the) (NN byte) (NN code) (NN compiler)) (CC and) (NP (NN interpreter)))))))))))) (. .))
(S (NP (PRP It)) (VP (VP (VBZ uses) (NP (NML (PP (ADVP (RB Just)) (HYPH -) (IN In) (HYPH -) (NP (NN Time)))) (NNS techniques)) (S (VP (TO to) (VP (VB compile) (NP (NN toplevel) (NNS phrases)) (PP (IN to) (NP (NP (JJ native) (NN code)) (PP (IN at) (NP (NN runtime))))))))) (, ,) (CC and) (ADVP (RB currently)) (VP (VBZ works) (PP (IN with) (NP (NP (JJ various) (NNP Unix)) (HYPH -) (PP (IN like) (NP (NNS systems))))) (S (VP (VBG running) (PP (IN on) (NP (NP (CD x86)) (CC or) (NP (CD x86) (HYPH -) (CD 64) (NNS processors)))))))) (. .))
