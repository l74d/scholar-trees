(S (NP (NP (DT A) (NN class)) (PP (IN of) (NP (NP (ADJP (VBN valued)) (NN constraint) (NN satisfaction) (NNS problems)) (-LRB- -LRB-) (NP (NNS VCSPs)) (-RRB- -RRB-)))) (VP (VBZ is) (VP (VBN characterised) (PP (IN by) (NP (NP (DT a) (ADJP (VBN valued)) (NN constraint) (NN language)) (, ,) (NP (NP (DT a) (VBN fixed) (NN set)) (PP (IN of) (NP (NN cost) (NNS functions))) (PP (IN on) (NP (DT a) (JJ finite) (NN domain)))))))) (. .))
(S (NP (NP (DT An) (NN instance)) (PP (IN of) (NP (DT the) (NN problem)))) (VP (VBZ is) (VP (VBN specified) (PP (IN by) (NP (NP (DT a) (NN sum)) (PP (IN of) (NP (NN cost) (NNS functions))))) (PP (IN from) (NP (NP (DT the) (NN language)) (PP (IN with) (NP (DT the) (NN goal))))) (S (VP (TO to) (VP (VB minimise) (NP (DT the) (NN sum))))))) (. .))
(S (NP (PRP We)) (VP (VBP study) (SBAR (WHNP (WDT which)) (S (NP (ADJP (NP (NP (NNS classes)) (PP (IN of) (NP (NN finite)))) (HYPH -) (VBN valued)) (NNS languages)) (VP (MD can) (VP (VB be) (VP (VBN solved) (ADVP (RB exactly)) (PP (IN by) (NP (DT the) (JJ basic) (NML (JJ linear) (NN programming)) (NN relaxation))) (PRN (-LRB- -LRB-) (NP (NN BLP)) (-RRB- -RRB-)))))))) (. .))
(S (NP (NNP Thapper) (CC and) (NNP Zivny)) (VP (VBD showed) (NP (-LRB- [) (CD 20) (-RRB- ])) (SBAR (IN that) (S (SBAR (IN if) (S (NP (NNP BLP)) (VP (VBZ solves) (NP (DT the) (NN language))))) (ADVP (RB then)) (NP (DT the) (NN language)) (VP (VBZ admits) (NP (DT a) (JJ binary) (JJ commutative) (JJ fractional) (NN polymorphism)))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT the) (NN converse)) (VP (VBZ is) (ADVP (RB also)) (ADJP (JJ true)))))) (. .))
(S (NP (DT This)) (VP (VBZ leads) (PP (IN to) (NP (NP (DT a) (ADJP (JJ necessary) (CC and) (DT a)) (JJ sufficient) (NN condition)) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB be) (VP (VBN checked) (PP (IN in) (NP (NP (JJ polynomial) (NN time)) (PP (IN for) (NP (DT a) (VBN given) (NN language))))))))))))) (. .))
(S (PP (IN In) (NP (NN contrast))) (, ,) (NP (NP (DT the) (JJ previous) (ADJP (JJ necessary) (CC and) (JJ sufficient)) (NN condition)) (PP (IN due) (PP (IN to))) (PRN (-LRB- [) (NP (CD 20)) (-RRB- ]))) (VP (VBN involved) (NP (ADJP (RB infinitely) (JJ many)) (NNS inequalities))) (. .))
(S (ADVP (RBR More) (RB recently)) (, ,) (NP (NNP Thapper) (CC and) (NNP Zivny) (PRN (-LRB- [) (NP (CD 21)) (-RRB- ]))) (VP (VBD showed) (PRN (-LRB- -LRB-) (S (VP (VBG using) (, ,) (PP (IN in) (ADJP (JJ particular))) (, ,) (S (NP (NP (DT a) (NN technique)) (VP (VBN introduced) (PP (IN in) (NP (DT this) (NN paper)))))))) (-RRB- -RRB-)) (SBAR (WHNP (WDT that)) (S (NP (NP (NN core) (NNS languages)) (SBAR (WHNP (WDT that)) (S (VP (VBP do) (RB not) (VP (VB satisfy) (NP (PRP$ our) (NN condition))))))) (VP (VBP are) (ADJP (NP (NNP NP)) (HYPH -) (JJ hard)))))) (. .))
(S (S (VP (VBN Taken) (ADVP (RB together)))) (, ,) (NP (DT these) (NNS results)) (VP (VBP imply) (SBAR (IN that) (S (NP (DT a) (ADJP (NP (NN finite)) (HYPH -) (VBN valued)) (NN language)) (VP (VP (MD can) (CC either) (VP (VB be) (VP (VBN solved) (S (VP (VBG using) (NP (NNP Linear) (NN Programming))))))) (CC or) (VP (VBZ is) (ADJP (NP (NNP NP)) (HYPH -) (JJ hard))))))) (. .))
