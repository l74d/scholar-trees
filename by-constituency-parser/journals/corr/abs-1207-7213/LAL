(S (NP (NP (DT A) (NN class)) (PP (IN of) (NP (NP (VBN valued) (NN constraint) (NN satisfaction) (NNS problems)) (PRN (-LRB- -LRB-) (NP (NNP VCSPs)) (-RRB- -RRB-))))) (VP (VBZ is) (VP (VBN characterised) (PP (IN by) (NP (NP (DT a) (VBN valued) (NN constraint) (NN language)) (, ,) (NP (NP (DT a) (JJ fixed) (NN set)) (PP (IN of) (NP (NP (NN cost) (NNS functions)) (PP (IN on) (NP (DT a) (JJ finite) (NN domain)))))))))) (. .))
(S (NP (NP (DT An) (NN instance)) (PP (IN of) (NP (DT the) (NN problem)))) (VP (VBZ is) (VP (VBN specified) (PP (IN by) (NP (NP (DT a) (NN sum)) (PP (IN of) (NP (NP (NN cost) (NNS functions)) (PP (IN from) (NP (DT the) (NN language))))))) (PP (IN with) (NP (DT the) (NN goal) (S (VP (TO to) (VP (VB minimise) (NP (DT the) (NN sum))))))))) (. .))
(S (NP (PRP We)) (VP (VBP study) (SBAR (WHNP (WHNP (WDT which) (NNS classes)) (PP (IN of) (NP (JJ finite-valued) (NNS languages)))) (S (VP (MD can) (VP (VB be) (VP (VBN solved) (ADVP (RB exactly)) (PP (IN by) (NP (NP (DT the) (JJ basic) (JJ linear) (VBG programming) (NN relaxation)) (PRN (-LRB- -LRB-) (NP (NNP BLP)) (-RRB- -RRB-)))))))))) (. .))
(S (NP (NNP Thapper) (CC and) (NNP Zivny)) (VP (VBD showed) (PRN (JJ -LSB-) (CD 20) (NN -RSB-)) (SBAR (IN that) (S (SBAR (IN if) (S (NP (NNP BLP)) (VP (VBZ solves) (NP (DT the) (NN language))))) (ADVP (RB then)) (NP (DT the) (NN language)) (VP (VBZ admits) (NP (DT a) (JJ binary) (JJ commutative) (JJ fractional) (NN polymorphism)))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT the) (NN converse)) (VP (VBZ is) (ADVP (RB also)) (ADJP (JJ true)))))) (. .))
(S (NP (DT This)) (VP (VBZ leads) (PP (TO to) (NP (NP (UCP (NP (DT a) (JJ necessary)) (CC and) (ADJP (DT a) (JJ sufficient))) (NN condition)) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB be) (VP (VBN checked) (PP (IN in) (NP (JJ polynomial) (NN time))) (PP (IN for) (NP (DT a) (VBN given) (NN language))))))))))) (. .))
(S (PP (IN In) (NP (NN contrast))) (, ,) (NP (NP (DT the) (JJ previous) (ADJP (JJ necessary) (CC and) (JJ sufficient)) (NN condition)) (ADJP (JJ due) (PP (TO to) (NP (VB -LSB-) (CD 20) (NNS -RSB-))))) (VP (VBN involved) (NP (ADJP (RB infinitely) (JJ many)) (NNS inequalities))) (. .))
(S (ADVP (RBR More) (RB recently)) (, ,) (NP (NP (NNP Thapper) (CC and) (NNP Zivny)) (PRN (NNP -LSB-) (CD 21) (NN -RSB-))) (VP (VBD showed) (PRN (-LRB- -LRB-) (S (VP (VBG using) (, ,) (PP (IN in) (NP (JJ particular))) (, ,) (NP (NP (DT a) (NN technique)) (VP (VBN introduced) (PP (IN in) (NP (DT this) (NN paper))))))) (-RRB- -RRB-)) (SBAR (IN that) (S (NP (NP (NN core) (NNS languages)) (SBAR (WHNP (WDT that)) (S (VP (VBP do) (RB not) (VP (VB satisfy) (NP (PRP$ our) (NN condition))))))) (VP (VBP are) (ADJP (NNP NP-hard)))))) (. .))
(S (S (VP (VBN Taken) (ADVP (RB together)))) (, ,) (NP (DT these) (NNS results)) (VP (VBP imply) (SBAR (IN that) (S (NP (DT a) (JJ finite-valued) (NN language)) (VP (VP (MD can) (RB either) (VP (VB be) (VP (VBN solved) (S (VP (VBG using) (NP (JJ Linear) (NNP Programming))))))) (CC or) (VP (VBZ is) (ADJP (NNP NP-hard))))))) (. .))
