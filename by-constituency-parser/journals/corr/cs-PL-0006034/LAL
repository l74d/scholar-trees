(S (NP (NN Type) (NNS classes)) (VP (VBP are) (NP (NP (DT an) (JJ elegant) (NN extension)) (PP (TO to) (NP (JJ traditional) (, ,) (ADJP (NNP Hindley-Milner) (VBN based)) (VBG typing) (NNS systems))))) (. .))
(S (NP (PRP They)) (VP (VBP are) (VP (VBN used) (PP (IN in) (NP (NP (JJ modern) (, ,) (VBD typed) (NNS languages)) (PP (JJ such) (IN as) (NP (NNP Haskell))))) (S (VP (TO to) (VP (VB support) (NP (NP (JJ controlled) (NN overloading)) (PP (IN of) (NP (NNS symbols))))))))) (. .))
(S (NP (NNP Haskell) (CD 98)) (VP (NNS supports) (NP (RB only) (NN single-parameter) (CC and) (NN constructor) (NN type) (NNS classes))) (. .))
(S (NP (NP (JJ Other) (NNS extensions)) (PP (JJ such) (IN as) (NP (JJ multi-parameter) (NN type) (NNS classes)))) (VP (VP (VBP are) (ADJP (RB highly) (VBN desired))) (CC but) (VP (VBP are) (ADVP (RB still)) (RB not) (VP (ADVP (RB officially)) (VBN supported) (PP (IN by) (NP (NNP Haskell)))))) (. .))
(S (NP (NNP Subtle) (NNS issues)) (VP (VB arise) (PP (IN with) (NP (NNS extensions))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (MD may) (VP (VB lead) (PP (TO to) (NP (NP (DT a) (NN loss)) (PP (IN of) (NP (NP (JJ feasible) (JJ type) (NN inference)) (CC or) (NP (JJ ambiguous) (NNS programs))))))))))) (. .))
(S (NP (NP (DT A) (JJ proper) (JJ logical) (NN basis)) (PP (IN for) (NP (JJ type) (NN class) (NNS systems)))) (VP (VBZ seems) (S (VP (TO to) (VP (VB be) (VP (VBG missing)))))) (. .))
(S (NP (JJ Such) (DT a) (NN basis)) (VP (MD would) (VP (VB allow) (S (NP (NNS extensions)) (VP (TO to) (VP (VB be) (VP (VBN characterised) (CC and) (VBN studied) (ADVP (RB rigorously)))))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (S (VP (TO to) (VP (VB employ) (NP (NNP Constraint) (NNP Handling) (NNP Rules)) (PP (IN as) (NP (NP (DT a) (NN tool)) (SBAR (S (VP (TO to) (VP (VB study) (CC and) (VB develop) (NP (JJ type) (NN class) (NNS systems)) (PP (IN in) (NP (DT a) (JJ uniform) (NN way))))))))))))) (. .))
