(S (NP (NP (DT The) (NN share)) (PP (IN of) (NP (DT the) (JJ top) (CD 500) (NNS supercomputers))) (PP (IN with) (NP (NNP NVIDIA) (NNP GPUs)))) (VP (VP (VBZ is) (ADVP (RB now)) (NP (QP (IN over) (CD 25)) (NN %))) (CC and) (VP (VBZ continues) (S (VP (TO to) (VP (VB grow)))))) (. .))
(S (SBAR (IN While) (S (NP (NN fault) (NN tolerance)) (VP (VBZ is) (NP (DT a) (JJ critical) (NN issue)) (PP (IN for) (NP (VBG supercomputing)))))) (, ,) (NP (EX there)) (VP (VBZ does) (RB not) (ADVP (RB currently)) (VP (VBP exist) (NP (NP (DT an) (NN efficient) (, ,) (JJ scalable) (NN solution)) (PP (IN for) (NP (NP (NNP CUDA) (NNS applications)) (PP (IN on) (NP (NNP NVIDIA) (NNP GPUs)))))))) (. .))
(S (NP (NP (NNP CRAC)) (PRN (-LRB- -LRB-) (NP (NP (NNP Checkpoint-Restart) (NNP Architecture)) (PP (IN for) (NP (NNP CUDA)))) (-RRB- -RRB-))) (VP (VBZ is) (NP (NP (JJ new) (JJ checkpoint-restart) (NN solution)) (PP (IN for) (NP (NN fault) (NN tolerance))) (SBAR (WHNP (WDT that)) (S (VP (VBZ supports) (NP (NP (DT the) (JJ full) (NN range)) (PP (IN of) (NP (NNP CUDA) (NNS applications))))))))) (. .))
(S (NP (NNP CRAC)) (VP (NNS combines) (: :) (NP (NP (NP (JJ low) (NN runtime) (NN overhead)) (PRN (-LRB- -LRB-) (NP (QP (RB approximately) (CD 1)) (NN %) (QP (CC or) (JJR less))) (-RRB- -RRB-))) (: ;) (NP (JJ fast) (NN checkpoint-restart)) (: ;) (NP (NP (NN support)) (PP (IN for) (NP (JJ scalable) (NNP CUDA) (NN streams))) (PRN (-LRB- -LRB-) (PP (IN for) (NP (NP (JJ efficient) (NN usage)) (PP (IN of) (NP (NP (DT all)) (PP (IN of) (NP (NP (DT the) (NNS thousands)) (PP (IN of) (NP (NNP GPU) (NNS cores))))))))) (-RRB- -RRB-))) (: ;) (CC and) (NP (NP (NP (NN support)) (PP (IN for) (NP (NP (DT the) (JJ full) (NNS features)) (PP (IN of) (NP (NNP Unified) (NNP Virtual) (NNP Memory)))))) (PRN (-LRB- -LRB-) (S (VP (VBG eliminating) (NP (NP (NP (DT the) (NN programmer) (POS 's)) (NN burden)) (PP (IN of) (S (VP (VBG migrating) (NP (NN memory)) (PP (IN between) (NP (NN device) (CC and) (NN host))))))))) (-RRB- -RRB-))))) (. .))
(S (NP (NNP CRAC)) (VP (VBZ achieves) (NP (PRP$ its) (JJ flexible) (NN architecture)) (PP (IN by) (S (VP (VBG segregating) (NP (NP (NP (NN application) (NN code)) (PRN (-LRB- -LRB-) (ADJP (VBN checkpointed)) (-RRB- -RRB-))) (CC and) (NP (NP (PRP$ its) (JJ external) (NNP GPU) (NN communication)) (PP (IN via) (NP (NP (JJ non-reentrant) (NNP CUDA) (NNS libraries)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBN checkpointed)) (-RRB- -RRB-)))))) (PP (IN within) (NP (NP (DT a) (JJ single) (NN process) (POS 's)) (NN memory))))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ eliminates) (NP (NP (DT the) (JJ high) (NN overhead)) (PP (IN of) (NP (JJ inter-process) (NN communication))) (PP (IN in) (NP (JJR earlier) (NNS approaches))))) (, ,) (CC and) (VP (VBZ has) (NP (JJR fewer) (NNS limitations)))) (. .))
