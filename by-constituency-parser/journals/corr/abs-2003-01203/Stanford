(S (NP (PRP We)) (VP (VBP develop) (CC and) (VBP analyze) (NP (JJ concurrent) (NNS algorithms)) (SBAR (IN for) (S (NP (DT the) (NN disjoint)) (VP (VBD set) (NP (NML (NN union) (PRN (-LRB- -LRB-) (NP (NN union) (HYPH -) (NN find)) (-RRB- -RRB-))) (NN problem)) (PP (IN in) (NP (NP (DT the) (VBN shared) (NN memory)) (, ,) (ADJP (JJ asynchronous) (NP-TMP (NP (NN multiprocessor) (NN model)) (PP (IN of) (NP (NN computation))))) (, ,) (PP (IN with) (NP (NP (NP (NNP CAS)) (PRN (-LRB- -LRB-) (S (VP (VB compare) (CC and) (VB swap))) (-RRB- -RRB-))) (CC or) (NP (NP (NNP DCAS)) (-LRB- -LRB-) (NP (RB double) (S (VP (VBP compare) (CC and) (VBP swap)))) (-RRB- -RRB-)))) (PP (IN as) (NP (DT the) (NN synchronization) (JJ primitive))))))))) (. .))
(S (NP (PRP We)) (VP (VBP give) (NP (NP (CD two) (JJ randomized) (NNS algorithms)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBP use) (NP (RB only) (NNP CAS))) (CC and) (VP (VB have) (NP (NP (DT the) (JJ same) (NN work)) (VP (VBN bound) (PP (IN in) (NP (NN expectation))))))))))) (. .))
(S (NP (NP (DT The) (NN analysis)) (PP (IN of) (NP (DT the) (JJ second) (JJ randomized) (NN algorithm)))) (VP (VBZ is) (ADJP (JJ valid)) (SBAR (RB even) (IN if) (S (NP (DT the) (NN scheduler)) (VP (VBZ is) (ADJP (JJ adversarial)))))) (. .))
(FRAG (S (NP (NP (PRP$ Our) (NN work)) (CC and) (NP (NN step) (NNS bounds))) (VP (VBP grow) (ADVP (RB only)) (PP (ADVP (RB logarithmically)) (IN with) (NP (NP ($ $)) (NP (NN p)))))) (FRAG (NP ($ $)) (, ,) (S (VP (VBG making) (NP (PRP$ our) (NNS algorithms)) (S (ADJP (RB truly) (JJ scalable)))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (IN for) (S (NP (NP (DT a) (NN class)) (PP (IN of) (NP (NP (NP (JJ symmetric) (NNS algorithms)) (SBAR (WHNP (WDT that)) (S (VP (VBZ includes) (S (NP (PRP ours)) (, ,) (ADVP (RB no) (RB better)) (VP (VB step) (CC or) (VB work))))))) (VP (VBN bound))))) (VP (VBZ is) (ADJP (JJ possible)))))) (. .))
