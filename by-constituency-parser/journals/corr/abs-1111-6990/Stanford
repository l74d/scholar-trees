(S (VP (VB Let) (S (NP (NNP G)) (VP (VB be) (NP (NP (DT a) (NN graph)) (VP (VBN embedded) (PP (IN on) (NP (NP (DT a) (NN surface)) (PP (IN of) (NP (NN genus) (NN g))))) (PP (IN with) (NP (NML (NN b) (NN boundary)) (NNS cycles)))))))) (. .))
(S (NP (PRP We)) (VP (VBP describe) (NP (NNS algorithms)) (S (VP (TO to) (VP (VB compute) (NP (NP (JJ multiple) (NNS types)) (PP (IN of) (NP (JJ non-trivial) (NNS cycles)))) (PP (IN in) (NP (NNP G))) (, ,) (S (VP (VBG using) (NP (JJ different) (NNS techniques)) (PP (VBG depending) (PP (IN on) (SBAR (IN whether) (CC or) (RB not) (S (NP (NNP G)) (VP (VBZ is) (NP (DT an) (JJ undirected) (NN graph))))))))))))) (. .))
(S (SBAR (IN If) (S (NP (NNP G)) (VP (VBZ is) (ADJP (JJ undirected))))) (, ,) (ADVP (RB then)) (NP (PRP we)) (VP (VBP give) (NP (DT an) (NN algorithm)) (PP (IN to) (VP (VB compute) (NP (NP (DT a) (JJS shortest) (JJ non-separating) (NN cycle)) (PP (IN in) (NP (NP (CD 2) (SYM ^) (NN O) (-LRB- -LRB-) (NN g) (-RRB- -RRB-)) (NP (NN n) (NN log) (NN log) (NN n) (NN time)))))))) (. .))
(S (NP (JJ Similar) (NNS algorithms)) (VP (VBP are) (VP (VBN given) (PP (IN to) (NP (NML (S (VP (VB compute) (NP (DT a) (JJS shortest) (NML (NML (NML (ADJP (JJ non-contractible) (CC or) (JJ non-null-homologous)) (NN cycle)) (PP (IN in) (NP (CD 2) (SYM ^) (NN O)))) (-LRB- -LRB-) (NML (NN g) (SYM +) (NN b)) (-RRB- -RRB-)) (NN n) (NN log))))) (NN log) (NP (NN n) (NN time)))))) (. .))
(S (NP (NP (PRP$ Our) (NNS algorithms)) (PP (IN for) (NP (JJ undirected) (NN G)))) (VP (VB combine) (NP (NP (DT an) (NN algorithm)) (PP (IN of) (NP (NNP Kutz)))) (PP (IN with) (NP (NP (JJ known) (NNS techniques)) (PP (IN for) (S (ADVP (RB efficiently)) (VP (VBG enumerating) (NP (NP (NN homotopy) (NNS classes)) (PP (IN of) (NP (NP (NNS curves)) (SBAR (WHNP (WDT that)) (S (VP (MD may) (VP (VB be) (NP (ADJP (JJS shortest) (JJ non-trivial)) (NNS cycles))))))))))))))) (. .))
(S (NP (NP (PRP$ Our) (JJ main) (JJ technical) (NNS contributions)) (PP (IN in) (NP (DT this) (NN work)))) (VP (VBP arise) (PP (IN from) (S (VP (VBG assuming) (SBAR (S (NP (NN G)) (VP (VBZ is) (NP (NP (DT a) (ADJP (JJ directed)) (NN graph)) (PP (IN with) (NP (QP (RB possibly)) (JJ asymmetric) (NN edge) (NNS weights))))))))))) (. .))
(S (PP (IN For) (NP (DT this) (NN case))) (, ,) (NP (PRP we)) (VP (VBP give) (NP (DT an) (NN algorithm)) (PP (IN to) (VP (VB compute) (NP (NP (DT a) (JJS shortest) (JJ non-contractible) (NN cycle)) (PP (IN in) (NP (NN G)))) (PP (IN in) (NP (NML (NN O) (PRN (-LRB- -LRB-) (-LRB- -LRB-) (NP (NP (NN g)) (SYM ^) (NP (NML (NML (CD 3) (SYM +)) (NN g) (NN b)) (-RRB- -RRB-) (NML (NN n) (NN log)) (NN n))) (-RRB- -RRB-))) (NN time)))))) (. .))
(S (PP (IN In) (NP (NN order) (S (VP (TO to) (VP (VB achieve) (NP (NP (DT this) (NN time)) (VP (VBN bound)))))))) (, ,) (NP (PRP we)) (VP (VBP use) (NP (NP (DT a) (NN restriction)) (PP (IN of) (NP (NP (DT the) (JJ infinite) (JJ cyclic) (NN cover)) (SBAR (WHNP (WDT that)) (S (VP (MD may) (VP (VB be) (ADJP (JJ useful) (PP (IN in) (NP (JJ other) (NNS contexts)))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP describe) (NP (DT an) (NN algorithm)) (PP (IN to) (VP (VB compute) (NP (NP (DT a) (JJS shortest) (JJ non-null-homologous) (NN cycle)) (PP (IN in) (NP (NN G)))) (PP (IN in) (NP (NML (NN O) (PRN (-LRB- -LRB-) (-LRB- -LRB-) (NP (NP (NN g)) (SYM ^) (NP (NML (NML (CD 2) (SYM +)) (NN g) (NN b)) (-RRB- -RRB-) (NML (NN n) (NN log)) (NN n))) (-RRB- -RRB-))) (NN time))) (, ,) (S (VP (VBG extending) (NP (NP (DT a) (VBN known) (NN algorithm)) (PP (IN of) (NP (NNP Erickson)))) (PP (IN to) (S (VP (VB compute) (NP (DT a) (JJS shortest) (JJ non-separating) (NN cycle)))))))))) (. .))
(S (PP (IN In) (NP (NP (CC both) (DT the) (ADJP (JJ undirected) (CC and) (JJ directed)) (NNS cases)) (, ,) (NP (PRP$ our) (NNS algorithms)))) (VP (VB improve) (NP (NP (DT the) (JJS best) (NN time) (NNS bounds)) (VP (VP (VBN known) (PP (IN for) (NP (NP (JJ many) (NNS values)) (PP (IN of) (NP (NN g)))))) (CC and) (VP (VBN b.))))))
