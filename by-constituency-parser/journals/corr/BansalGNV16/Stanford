(S (NP (DT Both) (NNS algorithms)) (VP (VBP assume) (NP (NP (JJ random) (ADJP (VBN read) (HYPH -) (JJ only)) (NN access)) (PP (IN to) (NP (JJ random) (NNS bits))))) (. .))
(S (NP-TMP (NP (NNP Modulo)) (NP (DT this) (JJ mild) (NN assumption))) (, ,) (NP (DT this)) (VP (VBZ resolves) (NP (NP (DT a) (ADJP (JJ long) (HYPH -) (VBG standing)) (JJ open) (NN problem)) (PP (IN in) (NP (ADJP (NP (NP (JJ exact) (NNS algorithms)) (PP (IN for) (NP (NNP NP)))) (HYPH -) (JJ hard)) (NNS problems))))) (. .))
(S (NP (DT These) (NNS results)) (VP (MD can) (VP (VB be) (VP (VBN extended) (S (VP (TO to) (VP (VB solve) (NP (NP (NNP Binary) (NNP Linear) (NN Programming)) (PP (IN on) (NP (NML (NML (NML ($ $)) (NN n)) (NML ($ $))) (NNS variables)))) (PP (IN with) (NP (NP (JJ few) (NNS constraints)) (PP (IN in) (NP (DT a) (JJ similar) (NN running) (NN time))))))))))) (. .))
(S (S (VP (VBG Underlying) (NP (DT these) (NNS results)))) (VP (VBZ is) (NP (NP (DT an) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ determines) (SBAR (IN whether) (S (NP (NP (CD two)) (VP (VBN given) (NP (NP (NNS lists)) (PP (IN of) (NP (NML (NN length) (NML ($ $))) (NN n)))) (NP (NP ($ $)) (PP (IN with) (NP (NP (NNS integers)) (VP (VBN bounded) (PP (IN by) (NP (NP (DT a) (ADJP (JJ polynomial) (PP (IN in) (FRAG (NP ($ $))))) (NN n)) (NP ($ $)))))))))) (VP (VB share) (NP (DT a) (JJ common) (NN value)))))))))) (. .))
