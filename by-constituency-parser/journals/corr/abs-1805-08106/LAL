(SBAR (IN That) (S (NP (DT the) (NNP Haskell) (NNP Compiler) (NNP GHC)) (VP (VBZ is) (ADJP (JJ capable) (PP (IN of) (S (VP (VBG proving) (NP (NP (JJ non-trivial) (NNS equalities)) (PP (IN between) (NP (NNP Haskell) (NN code)))))))) (, ,) (PP (IN by) (NP (NP (NN virtue)) (PP (IN of) (NP (NP (PRP$ its) (JJ aggressive) (NN optimizer)) (, ,) (FRAG (PP (IN in) (ADJP (JJ particular))) (NP (NP (DT the) (NN term) (VBG rewriting) (NN engine)) (PP (IN in) (NP (DT the) (NN simplifier))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP demonstrate) (NP (DT this)) (PP (IN with) (NP (NP (DT a) (JJ surprising) (JJ little) (NN code)) (PP (IN in) (NP (DT a) (NNP GHC) (NN plugin)))))) (, ,) (VP (VBZ explains) (NP (NP (DT the) (NN knobs)) (SBAR (S (NP (PRP we)) (VP (VBD had) (S (VP (TO to) (VP (VB turn))))))))) (, ,) (VP (VB discuss) (NP (NP (NP (DT the) (NNS limits)) (PP (IN of) (NP (DT the) (NN approach)))) (CC and) (NP (NP (NP (JJ related) (NNS applications)) (PP (IN of) (NP (DT the) (JJ same) (NN idea)))) (, ,) (ADVP (RB namely)) (NP (NP (VBG testing)) (SBAR (WHNP (IN that)) (S (NP (NP (NNS promises)) (PP (IN from) (NP (NP (NNP Haskell) (NNS libraries)) (PP (IN with) (NP (JJ domain-specific) (NNS optimizations)))))) (VP (VBP hold))))))))) (. .))
