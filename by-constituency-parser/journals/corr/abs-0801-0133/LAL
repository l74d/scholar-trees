(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP describe) (NP (NP (DT a) (JJ new) (NN approach)) (PP (TO to) (NP (VBG programming))) (SBAR (WHNP (WDT which)) (S (VP (VBZ generalizes) (NP (JJ object-oriented) (NN programming))))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (VP (VBN based) (PP (IN on) (S (VP (VBG using) (NP (NP (DT a) (JJ new) (NN programming) (NN construct)) (, ,) (VP (VBN called) (S (NP (NN concept)))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ generalizes) (NP (NNS classes))))))))))) (. .))
(S (NP (NNP Concept)) (VP (VBZ is) (VP (VBN defined) (PP (IN as) (NP (NP (DT a) (NN pair)) (PP (IN of) (NP (NP (CD two) (NNS classes)) (: :) (NP (NP (CD one) (NN reference) (NN class)) (CC and) (NP (CD one) (NN object) (NN class))))))))) (. .))
(S (NP (DT Each) (NN concept)) (VP (VBZ has) (NP (NP (DT a) (NN parent) (NN concept)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN specified) (S (VP (VBG using) (NP (NP (NN inclusion) (NN relation)) (VP (VBG generalizing) (NP (NN inheritance)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP describe) (NP (NP (JJ several) (JJ important) (NNS mechanisms)) (PP (JJ such) (IN as) (NP (NP (NN reference) (NN resolution)) (, ,) (NP (JJ context) (NN stack)) (, ,) (NP (JJ dual) (NNS methods)) (CC and) (NP (NP (JJ life-cycle) (NN management)) (, ,) (NP (NN inheritance)) (CC and) (NN polymorphism)))))) (. .))
(S (S (NP (NP (DT This) (NN approach)) (PP (TO to) (NP (NN programming)))) (VP (VBZ is) (VP (VBN positioned) (PP (IN as) (NP (DT a) (JJ new) (NN programming) (NN paradigm)))))) (CC and) (ADVP (IN therefore)) (S (NP (PRP we)) (VP (VBP formulate) (NP (PRP$ its) (JJ main) (NNS principles) (CC and) (NNS rules)))) (. .))
