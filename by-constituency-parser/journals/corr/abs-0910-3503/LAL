(S (PP (VBN Given) (NP (DT an) (JJ arbitrary) (NN bitstream))) (, ,) (NP (PRP we)) (VP (VBP consider) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG finding) (NP (NP (DT the) (JJS longest) (NN substring)) (SBAR (WHNP (WHNP (WP$ whose) (NN ratio)) (PP (IN of) (NP (NNS ones))) (PP (TO to) (NP (NNS zeroes)))) (S (VP (VB equals) (NP (DT a) (VBN given) (NN value))))))))))) (. .))
(S (NP (NP (DT The) (JJ central) (NN result)) (PP (IN of) (NP (DT this) (NN paper)))) (VP (VBZ is) (NP (NP (DT an) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ solves) (NP (DT this) (NN problem)) (PP (IN in) (NP (JJ linear) (NN time)))))))) (. .))
(S (NP (DT The) (NN method)) (VP (VBZ involves) (SBAR (S (ADJP (PRN (-LRB- -LRB-) (NN i) (-RRB- -RRB-)) (VP (VBG reformulating) (NP (DT the) (NN problem)) (PP (IN as) (NP (NP (DT a) (JJ constrained) (NN walk)) (PP (IN through) (NP (DT a) (JJ sparse) (NN matrix))))))) (, ,) (CC and) (ADVP (RB then)) (VP (PRN (-LRB- -LRB-) (NN ii) (-RRB- -RRB-)) (VP (VBG developing) (NP (NP (DT a) (NN data) (NN structure)) (PP (IN for) (NP (DT this) (NN sparse) (NN matrix))) (SBAR (WHNP (WDT that)) (S (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (VP (VB perform) (NP (NP (DT each) (NN step)) (PP (IN of) (NP (DT the) (NN walk)))) (PP (IN in) (NP (JJ amortised) (JJ constant) (NN time))))))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP give) (NP (NP (DT a) (JJ linear) (NN time) (NN algorithm)) (SBAR (S (VP (TO to) (VP (VB find) (NP (NP (DT the) (JJS longest) (NN substring)) (SBAR (WHNP (NP (WP$ whose) (NN ratio)) (PP (IN of) (NP (NP (NNS ones)) (PP (TO to) (NP (NNS zeroes)))))) (S (VP (VBZ is) (VP (VBN bounded) (ADVP (IN below)) (PP (IN by) (NP (DT a) (VBN given) (NN value)))))))))))))) (. .))
(S (NP (DT Both) (NNS problems)) (VP (VBP have) (NP (NP (JJ practical) (NN relevance)) (PP (TO to) (NP (NN cryptography) (CC and) (NNS bioinformatics))))) (. .))
