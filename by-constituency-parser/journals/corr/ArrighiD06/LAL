(S (NP (PRP We)) (VP (VBP provide) (NP (NP (DT a) (JJ computational) (NN definition)) (PP (IN of) (NP (NP (DT the) (NNS notions)) (PP (IN of) (NP (NP (NN vector) (NN space)) (CC and) (NP (JJ bilinear) (NNS functions)))))))) (. .))
(S (NP (PRP We)) (VP (VBP use) (NP (DT this) (NN result)) (S (VP (TO to) (VP (VB introduce) (NP (NP (DT a) (JJ minimal) (NN language)) (VP (VBG combining) (NP (NP (JJ higher-order) (NN computation)) (CC and) (NP (JJ linear) (NN algebra))))))))) (. .))
(S (NP (DT This) (NN language)) (VP (VBZ extends) (NP (DT the) (JJ Lambda-calculus)) (PP (IN with) (NP (DT the) (NN possibility) (S (VP (TO to) (VP (VB make) (NP (NP (JJ arbitrary) (JJ linear) (NNS combinations)) (PP (IN of) (NP (NNS terms) (VBP alpha.t) (JJ +) (NN beta.u)))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP describe) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (`` ``) (VB execute) ('' '') (NP (DT this) (NN language)))))) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (DT a) (JJ few) (NN rewrite) (NNS rules)))))) (, ,) (CC and) (VP (VB justify) (NP (PRP them)) (PP (IN through) (NP (DT the) (CD two) (JJ fundamental) (NNS requirements) (SBAR (SBAR (IN that) (S (NP (DT the) (NN language)) (VP (VB be) (NP (NP (DT a) (NN language)) (PP (IN of) (NP (JJ linear) (NNS operators))))))) (, ,) (CC and) (SBAR (IN that) (S (NP (PRP it)) (VP (VB be) (ADJP (JJ higher-order)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP mention) (NP (NP (DT the) (NNS perspectives)) (PP (IN of) (NP (NP (DT this) (NN work)) (PP (IN in) (NP (NP (DT the) (NN field)) (PP (IN of) (NP (NP (JJ quantum) (NN computation)) (, ,) (SBAR (WHNP (WP$ whose) (NNS circuits)) (S (NP (PRP we)) (VP (VBP show) (SBAR (S (VP (MD can) (VP (VB be) (VP (ADVP (RB easily)) (VBN encoded) (PP (IN in) (NP (DT the) (NN calculus))))))))))))))))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP prove) (NP (NP (DT the) (NN confluence)) (PP (IN of) (NP (DT the) (JJ entire) (NN calculus))))) (. .))
