(S (NP (PRP We)) (VP (VBP provide) (NP (NP (DT a) (JJ computational) (NN definition)) (PP (IN of) (NP (NP (DT the) (NNS notions)) (PP (IN of) (NP (NN vector) (NML (NN space) (CC and) (NN bilinear)) (NNS functions))))))) (. .))
(S (NP (PRP We)) (VP (VBP use) (NP (DT this) (NN result)) (S (VP (TO to) (VP (VB introduce) (NP (DT a) (JJ minimal) (NN language)) (S (VP (VBG combining) (NP (NP (NML (JJR higher) (HYPH -) (NN order)) (NN computation)) (CC and) (NP (JJ linear) (NN algebra))))))))) (. .))
(S (NP (DT This) (NN language)) (VP (VBZ extends) (NP (DT the) (NNP Lambda) (HYPH -) (NN calculus)) (PP (IN with) (NP (DT the) (NN possibility) (S (VP (TO to) (VP (VB make) (NP (NP (JJ arbitrary) (JJ linear) (NNS combinations)) (PP (IN of) (NP (NP (NNS terms)) (NP (NN alpha.t) (SYM +) (NN beta.u))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP describe) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (`` ") (VB execute) ('' ") (NP (DT this) (NN language)) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NP (QP (DT a) (JJ few))) (SBAR (S (VP (VP (VBP rewrite) (NP (NNS rules))) (, ,) (CC and) (VP (VB justify) (NP (PRP them)) (PP (IN through) (NP (DT the) (CD two) (JJ fundamental) (NNS requirements))) (SBAR (SBAR (IN that) (S (NP (DT the) (NN language)) (VP (VB be) (NP (NP (DT a) (NN language)) (PP (IN of) (NP (JJ linear) (NNS operators))))))) (, ,) (CC and) (SBAR (IN that) (S (NP (PRP it)) (VP (VB be))))))))))) (NML (JJR higher) (HYPH -) (NN order))))))))) (. .))
(S (NP (PRP We)) (VP (VBP mention) (SBAR (S (NP (NP (DT the) (NNS perspectives)) (PP (IN of) (NP (NP (NP (DT this) (NN work)) (PP (IN in) (NP (NP (DT the) (NN field)) (PP (IN of) (NP (NN quantum) (NN computation)))))) (, ,) (SBAR (WHNP (WP$ whose) (NNS circuits)) (S (NP (PRP we)) (VP (VBP show))))))) (VP (MD can) (VP (VB be) (ADVP (RB easily)) (VP (VBN encoded) (PP (IN in) (NP (DT the) (NN calculus))))))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP prove) (NP (NP (DT the) (NN confluence)) (PP (IN of) (NP (DT the) (JJ entire) (NN calculus))))) (. .))
