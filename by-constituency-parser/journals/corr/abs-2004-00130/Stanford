(S (NP (NP (NML (NN Graph) (NN database)) (NN management) (NNS systems)) (-LRB- -LRB-) (NP (NNS GDBMSs)) (-RRB- -RRB-)) (VP (VBP are) (ADJP (RB highly) (VBN optimized) (S (VP (TO to) (VP (VB perform) (ADVP (RB very) (RB fast) (S (VP (VBZ joins) (PP (IN of) (NP (NNS vertices))) (PP (IN by) (S (VP (VBG indexing) (NP (NP (DT the) (NNS neighbourhoods)) (PP (IN of) (NP (NP (NNS vertices)) (PP (IN in) (NP (NN adjacency) (NN list) (NNS indexes))))))))))))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (VBG existing) (NNS GDBMSs)) (VP (VBP have) (NP (NP (NP (NN system) (HYPH -) (JJ specific)) (CC and) (NP (JJ fixed) (NN adjacency) (NN list) (NN index) (NNS structures))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ makes) (S (NP (DT each) (NN system)) (ADJP (RB highly) (JJ efficient) (PP (IN on) (NP (NP (RB only) (DT a) (VBN fixed) (NN set)) (PP (IN of) (NP (NNS workloads)))))))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP describe) (NP (NP (DT a) (ADJP (RB highly) (JJ flexible) (CC and) (JJ lightweight)) (NN indexing) (NN sub-system)) (PP (IN for) (NP (NNS GDBMSs)))))) (, ,) (NP (DT that)) (VP (VBZ is) (VP (VBN coupled) (PP (IN with) (NP (VBN materialized) (NN view) (NN capability))) (, ,) (SBAR (IN that) (S (NP (PRP we)) (VP (VBP call) (NP (DT A) (NP (SYM +) (NP (NNS indexes))))))))) (. .))
(S (NP (DT A) (NP (SYM +) (NP (NNS indexes)))) (VP (VBP comprise) (PP (IN of) (NP (CD three) (NNS components)))) (. .))
(S (NP (NN Default) (NML (NN A) (SYM +)) (NNS indexes)) (VP (VBP provide) (NP (NN flexibility)) (PP (IN to) (NP (NNS users))) (PP (IN to) (NP (NP (NN index) (NNS neighbourhoods)) (PP (IN of) (NP (NP (NNS vertices)) (VP (VBG using) (NP (NP (JJ arbitrary) (VBN nested) (JJ secondary) (NN partitioning)) (CC and) (NP (VBG sorting) (NNS criteria))))))))) (. .))
(S (NP (DT This)) (VP (VBZ allows) (NP (NNS users)) (S (VP (TO to) (VP (VB optimize) (NP (DT a) (NN system)) (PP (IN for) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (NP (NNS workloads)) (PP (IN with) (NP (ADJP (DT no) (CC or) (JJ minimal)) (NN memory) (NNS overheads))))))))))) (. .))
(S (NP (JJ Secondary) (ADJP (NP (NN vertex) (HYPH -) (CC and) (NN edge)) (HYPH -) (VBN bound)) (NML (NN A) (SYM +)) (NNS indexes)) (, ,) (ADVP (RB respectively)) (VP (VBP are) (NP (NP (NNS views)) (PP (IN over) (NP (NP (NNS edges)) (CC and) (NP (CD 2) (HYPH -) (NNS paths)))))) (. .))
(S (NP (ADJP (NN Edge) (HYPH -) (VBN bound)) (NNS indexes)) (VP (VP (VBP partition) (NP (NNS views)) (PP (IN over) (NP (NP (CD 2) (HYPH -) (NNS paths)) (PP (IN by) (NP (NN edge) (NNS IDs)))))) (CC and) (VP (VB store) (NP (NP (DT the) (NNS neighbourhoods)) (PP (IN of) (NP (NP (NNS edges)) (PP (RB instead) (IN of) (NP (NNS vertices)))))))) (. .))
(S (NP (PRP$ Our) (JJ secondary) (NNS indexes)) (VP (VBP are) (VP (VBN designed) (S (VP (TO to) (VP (VB have) (NP (DT a) (ADJP (RB very) (JJ lightweight)) (NN implementation)) (PP (VBN based) (PP (IN on) (NP (NP (DT a) (NN technique)) (SBAR (S (NP (PRP we)) (VP (VBP call) (NP (JJ offset) (NNS lists))))))))))))) (. .))
(S (NP (DT A) (NP (SYM +) (NP (NNS indexes)))) (VP (VBP allow) (NP (NP (DT a) (JJR wider) (NN range)) (PP (IN of) (NP (NNS applications)))) (S (VP (TO to) (VP (VB benefit) (PP (IN from) (NP (NNS GDBMSs) (POS '))) (ADVP (RB fast) (S (VP (VB join) (NP (NNS capabilities))))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (NP (NP (DT the) (NN flexibility)) (, ,) (NP (NN efficiency)) (, ,) (CC and) (NP (NP (NML (JJ low) (NN memory)) (NNS overheads)) (PP (IN of) (NP (NML (NN A) (SYM +)) (NNS indexes))))) (PP (IN through) (NP (NP (JJ extensive) (NNS experiments)) (PP (IN on) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (NNS applications)))))))) (. .))
