(S (NP (DT The) (JJ static) (NN dependency) (NN pair) (NN method)) (VP (VBZ is) (NP (NP (DT a) (NN method)) (PP (IN for) (S (VP (VBG proving) (NP (NP (DT the) (NN termination)) (PP (IN of) (NP (JJ higher-order) (JJ rewrite) (NNS systems)))) (ADVP (DT a) (NN la) (NP (NNP Nipkow)))))))) (. .))
(S (NP (PRP It)) (VP (VBZ combines) (NP (NP (DT the) (NN dependency) (NN pair) (NN method)) (VP (VBN introduced) (PP (IN for) (NP (JJ first-order) (JJ rewrite) (NNS systems))))) (PP (IN with) (NP (NP (DT the) (NN notion)) (PP (IN of) (NP (JJ strong) (NN computability))) (VP (VBN introduced) (PP (IN for) (NP (JJ typed) (NN lambda-calculi))))))) (. .))
(S (NP (NP (NNP Argument) (NNS filterings)) (CC and) (NP (JJ usable) (NNS rules))) (VP (VBP are) (NP (NP (CD two) (JJ important) (NNS methods)) (PP (IN of) (NP (NP (DT the) (NN dependency) (NN pair) (NN framework)) (VP (VBN used) (PP (IN by) (NP (JJ current) (JJ state-of-the-art) (NN first-order) (VBN automated) (NN termination) (NNS provers)))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP extend) (NP (NP (DT the) (NN class)) (PP (IN of) (NP (NP (JJ higher-order) (NNS systems)) (SBAR (WHPP (IN on) (WHNP (WDT which))) (S (NP (DT the) (JJ static) (NN dependency) (NN pair) (NN method)) (VP (MD can) (VP (VB be) (VP (VBN applied)))))))))) (. .))
(S (ADVP (RB Then)) (, ,) (NP (PRP we)) (VP (VBP extend) (NP (NP (JJ argument) (NNS filterings)) (CC and) (NP (JJ usable) (NNS rules))) (PP (TO to) (NP (NN higher-order) (NN rewriting))) (, ,) (S (ADVP (RB hence)) (VP (VBG providing) (NP (NP (DT the) (NN basis)) (PP (IN for) (NP (NP (DT a) (JJ powerful) (JJ automated) (NN termination) (NN prover)) (PP (IN for) (NP (JJ higher-order) (JJ rewrite) (NNS systems))))))))) (. .))
