(S (NP (NN Double-fetch) (NNS bugs)) (VP (VBP are) (NP (NP (DT a) (JJ special) (NN type)) (PP (IN of) (NP (NN race) (NN condition))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (DT an) (JJ unprivileged) (NN execution) (NN thread)) (VP (VBZ is) (ADJP (JJ able) (S (VP (TO to) (VP (VB change) (NP (DT a) (NN memory) (NN location)) (PP (IN between) (NP (NP (DT the) (NN time-of-check) (CC and) (NN time-of-use)) (PP (IN of) (NP (DT a) (JJ privileged) (NN execution) (NN thread)))))))))))))) (. .))
(S (SBAR (IN If) (S (NP (DT an) (JJ unprivileged) (NN attacker)) (VP (VBZ changes) (NP (DT the) (NN value)) (PP (IN at) (NP (DT the) (JJ right) (NN time)))))) (, ,) (NP (DT the) (JJ privileged) (NN operation)) (VP (VBZ becomes) (ADJP (JJ inconsistent)) (, ,) (S (VP (VBG leading) (PP (TO to) (NP (NP (NP (DT a) (NN change)) (PP (IN in) (NP (NN control) (NN flow)))) (, ,) (CC and) (RB thus) (NP (NP (DT an) (NN escalation)) (PP (IN of) (NP (NNS privileges))) (PP (IN for) (NP (DT the) (NN attacker))))))))) (. .))
(S (ADVP (RBR More) (RB severely)) (, ,) (NP (JJ such) (JJ double-fetch) (NNS bugs)) (VP (MD can) (VP (VB be) (VP (VBN introduced) (PP (IN by) (NP (DT the) (NN compiler))) (, ,) (ADJP (RB entirely) (JJ invisible) (PP (IN on) (NP (DT the) (JJ source-code) (NN level))))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (JJ novel) (NNS techniques)) (SBAR (S (VP (TO to) (VP (ADVP (RB efficiently)) (VB detect) (, ,) (VB exploit) (, ,) (CC and) (VB eliminate) (NP (JJ double-fetch) (NNS bugs)))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (NP (NP (DT the) (JJ first) (NN combination)) (PP (IN of) (NP (JJ state-of-the-art) (NN cache) (NNS attacks))) (PP (IN with) (NP (NN kernel-fuzzing) (NNS techniques))) (SBAR (S (VP (TO to) (VP (VB allow) (NP (NP (RB fully) (VBN automated) (NN identification)) (PP (IN of) (NP (JJ double) (NNS fetches)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (NP (NP (DT the) (JJ first) (ADJP (RB fully) (VBN automated)) (JJ reliable) (NN detection) (CC and) (NN exploitation)) (PP (IN of) (NP (NN double-fetch) (NNS bugs)))) (, ,) (S (VP (VBG making) (S (NP (NP (JJ manual) (NN analysis)) (PP (IN as) (PP (IN in) (NP (JJ previous) (NN work))))) (ADJP (JJ superfluous)))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (JJ cache-based) (NNS triggers)) (VP (IN outperform) (NP (JJ state-of-the-art) (NN exploitation) (NNS techniques)) (ADVP (RB significantly)) (, ,) (S (VP (VBG leading) (PP (TO to) (NP (NP (DT an) (NN exploitation) (NN success) (NN rate)) (PP (IN of) (NP (QP (IN up) (TO to) (CD 97)) (NN %))))))))))) (. .))
(S (NP (PRP$ Our) (JJ modified) (NN fuzzer)) (VP (VP (ADVP (RB automatically)) (VBZ detects) (NP (JJ double) (NNS fetches))) (CC and) (VP (ADVP (RB automatically)) (VBZ narrows) (PRT (RP down)) (NP (NP (DT this) (NN candidate) (VBN set)) (PP (IN for) (NP (NN double-fetch) (NNS bugs)))) (PP (TO to) (NP (DT the) (JJ exploitable) (NNS ones))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT the) (JJ first) (NN generic) (NN technique)) (VP (VBN based) (PP (IN on) (NP (JJ hardware) (JJ transactional) (NN memory)))) (, ,) (SBAR (S (VP (TO to) (VP (VB eliminate) (NP (JJ double-fetch) (NNS bugs)) (PP (IN in) (NP (DT a) (ADJP (RB fully) (VBN automated) (CC and) (JJ transparent)) (NN manner))))))))) (. .))
(S (NP (PRP We)) (VP (VBP extend) (NP (JJ defensive) (NN programming) (NNS techniques)) (PP (IN by) (S (VP (VBG retrofitting) (NP (JJ arbitrary) (NN code)) (PP (IN with) (NP (JJ automated) (JJ double-fetch) (NN prevention))) (, ,) (PP (DT both) (PP (IN in) (NP (JJ trusted) (NN execution) (NNS environments))) (CONJP (RB as) (RB well) (IN as)) (PP (IN in) (NP (NNS syscalls)))) (, ,) (PP (IN with) (NP (NP (DT a) (NN performance) (NN overhead)) (PP (IN below) (NP (CD 1) (NN %))))))))) (. .))
