(S (NP (NN Synthesis)) (VP (VBZ is) (NP (NP (DT a) (ADJP (RB particularly) (NN challenging)) (NN problem)) (PP (IN for) (NP (NN concurrent) (NNS programs))))) (. .))
(S (PP (IN At) (NP (DT the) (JJ same) (NN time))) (NP (PRP it)) (VP (VBZ is) (NP (DT a) (ADJP (RB very) (JJ promising)) (NN approach)) (, ,) (SBAR (IN since) (S (NP (NN concurrent) (NNS programs)) (VP (VBP are) (ADJP (JJ difficult) (SBAR (S (VP (VP (TO to) (VP (VB get) (S (ADJP (JJ right))))) (, ,) (CC or) (VP (TO to) (VP (VB analyze) (PP (IN with) (NP (JJ traditional) (NN verification) (NNS techniques))))))))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ gives) (NP (NP (NP (DT an) (NN introduction)) (PP (TO to) (NP (VBN distributed) (NN synthesis))) (PP (IN in) (NP (NP (DT the) (NN setting)) (PP (IN of) (NP (NNP Mazurkiewicz) (NNS traces)))))) (, ,) (CC and) (NP (NP (PRP$ its) (NNS applications)) (PP (TO to) (NP (VB decentralized) (JJ runtime) (NN monitoring)))))) (. .))
(S (NP (CD 1) (NNP Context)) (NP (NNP Modern) (VBG computing) (NNS systems)) (VP (VBP are) (ADJP (RB increasingly) (VBN distributed) (CC and) (JJ heterogeneous))) (. .))
(S (NP (NNP Software)) (VP (VBZ needs) (S (VP (TO to) (VP (VB be) (ADJP (JJ able) (S (VP (TO to) (VP (VB exploit) (NP (DT these) (NNS advances))))))))) (, ,) (S (VP (VBG providing) (NP (NP (NNS means)) (SBAR (IN for) (S (NP (NNS applications)) (VP (TO to) (VP (VB be) (ADJP (RBR more) (JJ performant)))))))))) (. .))
(S (NP (NP (JJ Traditional) (NN concurrent) (VBG programming) (NN paradigms)) (, ,) (PP (IN as) (PP (IN in) (NP (NNP Java)))) (, ,)) (VP (VBP are) (VP (VBN based) (PP (IN on) (NP (NP (NNS threads)) (, ,) (NP (JJ shared-memory)) (, ,) (CC and) (NP (NP (VBG locking) (NNS mechanisms)) (SBAR (WHNP (WDT that)) (S (VP (VBP guard) (NP (NP (NN access)) (PP (TO to) (NP (JJ common) (NNS data)))))))))))) (. .))
(S (NP (NP (ADJP (RBR More) (JJ recent)) (NN paradigms)) (PP (IN like) (NP (NP (DT the) (JJ reactive) (NN programming) (NN model)) (PP (IN of) (NP (NP (NP (NNP Erlang)) (NP (NNP -LSB-) (CD 4) (NN -RSB-))) (CC and) (NP (NP (NNP Scala)) (NP (NNP -LSB-) (CD 35,36) (NNP -RSB-)))))))) (VP (VB replace) (NP (VBN shared) (NN memory)) (PP (IN by) (NP (NP (JJ asynchronous) (NN message) (NN passing)) (, ,) (SBAR (WHADVP (WRB where)) (S (S (VP (VBG sending) (NP (DT a) (NN message)))) (VP (VBZ is) (ADJP (JJ non-blocking)))))))) (. .))
(S (PP (IN In) (NP (PDT all) (DT these) (JJ concurrent) (NNS frameworks))) (, ,) (S (VP (VBG writing) (NP (JJ reliable) (NN software)))) (VP (VBZ is) (NP (DT a) (JJ serious) (NN challenge))) (. .))
(S (S (NP (NNS Programmers)) (VP (VBP tend) (S (VP (TO to) (VP (VB think) (PP (IN about) (NP (NN code))) (PP (ADVP (RB mostly)) (IN in) (NP (DT a) (JJ sequential) (NN way)))))))) (, ,) (CC and) (S (NP (NP (PRP it))) (VP (VBZ is) (ADJP (JJ hard)) (S (VP (TO to) (VP (VB grasp) (NP (NP (DT all) (JJ possible) (NNS schedulings)) (PP (IN of) (NP (NNS events))) (PP (IN in) (NP (DT a) (JJ concurrent) (NN execution))))))))) (. .))
(S (PP (IN For) (NP (JJ similar) (NNS reasons))) (, ,) (NP (NP (NN verification) (CC and) (NN analysis)) (PP (IN of) (NP (NN concurrent) (NNS programs)))) (VP (VBZ is) (NP (DT a) (JJ difficult) (NN task))) (. .))
(S (NP (NP (NNP Testing)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB still)) (NP (NP (DT the) (JJ main) (NN method)) (PP (IN for) (NP (NP (NN error) (NN detection)) (PP (IN in) (NP (NN software))))))))) (, ,)) (VP (VBZ has) (NP (NP (JJ low) (NN coverage)) (PP (IN for) (NP (JJ concurrent) (NNS programs))))) (. .))
(S (S (NP (DT The) (NN reason)) (VP (VBZ is) (SBAR (IN that) (S (NP (NP (NNS bugs)) (PP (IN in) (NP (JJ such) (NNS programs)))) (VP (VBP are) (ADJP (JJ difficult) (SBAR (S (VP (TO to) (VP (VB reproduce))))))))))) (: :) (S (S (NP (PRP they)) (VP (MD may) (VP (VB happen) (PP (IN under) (NP (ADJP (RB very) (JJ specific)) (NN thread) (NNS schedules)))))) (CC and) (S (NP (NP (DT the) (NN likelihood)) (PP (IN of) (S (VP (VBG taking) (NP (JJ such) (JJ corner-case) (NNS schedules)))))) (VP (VBZ is) (ADJP (RB very) (JJ low))))) (. .))
(S (NP (NP (VBN Automated) (NN verification)) (, ,) (PP (JJ such) (IN as) (NP (NP (NN model-checking)) (CC and) (NP (JJ other) (JJ traditional) (NN exploration) (NNS techniques)))) (, ,)) (VP (MD can) (VP (VB handle) (NP (NP (ADJP (RB very) (JJ limited)) (NNS instances)) (PP (IN of) (NP (NN concurrent) (NNS programs)))) (, ,) (PP (ADVP (RB mostly)) (IN because) (IN of) (NP (NP (DT the) (ADJP (RB very) (JJ large)) (NN number)) (PP (PP (IN of) (NP (JJ possible) (NNS states))) (CC and) (PP (IN of) (NP (NP (JJ possible) (NNS interleavings)) (PP (IN of) (NP (NNS executions)))))))))) (. .))
(S (NP (NP (JJ Formal) (NN analysis)) (PP (IN of) (NP (NNS programs)))) (VP (VBZ requires) (PP (IN as) (NP (DT a) (NN prerequisite))) (NP (NP (DT a) (JJ clean) (JJ mathematical) (NN model)) (PP (IN for) (NP (NNS programs))))) (. .))
(S (NP (NP (NN Verification)) (PP (IN of) (NP (JJ sequential) (NNS programs)))) (VP (VBZ starts) (ADVP (RB usually)) (PP (IN with) (NP (NP (DT an) (JJ abstraction) (NN step)) (: â€”) (S (VP (VP (VBG reducing) (NP (NP (DT the) (NN value) (VBZ domains)) (PP (IN of) (NP (NNS variables)))) (PP (TO to) (NP (VB finite) (NNS domains)))) (, ,) (VP (VBG viewing) (NP (JJ conditional) (NN branching)) (PP (IN as) (NP (NN non-determinism)))) (, ,) (FW etc)))))) (. .))
(S (NP (DT Another) (JJ major) (NN simplification)) (VP (VBZ consists) (PP (IN in) (S (VP (VBG disallowing) (NP (NN recursion)))))) (. .))
(S (NP (DT This)) (VP (VBZ leads) (PP (TO to) (NP (NP (DT a) (ADJP (RB very) (JJ robust)) (JJ computational) (NN model)) (, ,) (ADVP (RB namely)) (NP (NP (JJ finite-state) (NNS automata)) (CC and) (NP (JJ regular) (NNS languages)))))) (. .))
(S (NP (NP (JJ Regular) (NNS languages)) (PP (IN of) (NP (NP (NNS words)) (PRN (-LRB- -LRB-) (CC and) (NP (NNS trees)) (-RRB- -RRB-))))) (VP (VBP are) (NP (ADJP (ADVP (RB particularly) (RB well)) (JJ understood)) (NNS notions))) (. .))
