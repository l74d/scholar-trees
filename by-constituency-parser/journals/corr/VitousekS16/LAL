(S (NP (JJ Gradual) (NN typing)) (VP (NNS combines) (NP (JJ static) (CC and) (JJ dynamic) (NN typing)) (PP (IN in) (NP (DT the) (JJ same) (NN language))) (, ,) (S (VP (VBG offering) (NP (NP (DT the) (NNS benefits)) (PP (IN of) (NP (DT both)))) (PP (TO to) (NP (NNS programmers)))))) (. .))
(S (NP (JJ Static) (VBG typing)) (VP (VBZ provides) (NP (NP (NN error) (NN detection)) (CC and) (NP (JJ strong) (NNS guarantees))) (SBAR (IN while) (S (NP (JJ dynamic) (VBG typing)) (VP (NNS enables) (NP (NP (JJ rapid) (NN prototyping)) (CC and) (NP (JJ flexible) (NN programming) (NNS idioms))))))) (. .))
(S (S (SBAR (IN For) (S (NP (NNS programmers)) (VP (TO to) (ADVP (RB fully)) (VP (VB take) (NP (NN advantage)) (PP (IN of) (NP (DT a) (JJ gradual) (NN type) (NN system))))))) (, ,) (ADVP (RB however)) (, ,) (NP (PRP they)) (VP (MD must) (VP (VB be) (ADJP (JJ able) (S (VP (TO to) (VP (VB trust) (NP (PRP$ their) (NN type) (NNS annotations))))))))) (, ,) (CC and) (ADVP (RB so)) (S (NP (JJ runtime) (NNS checks)) (VP (MD must) (VP (VB be) (VP (VBN performed) (PP (IN at) (NP (NP (DT the) (NNS boundaries)) (PP (IN of) (NP (JJ static) (CC and) (JJ dynamic) (NN code))))) (S (VP (TO to) (VP (VB ensure) (SBAR (IN that) (S (NP (JJ static) (NNS types)) (VP (VBP are) (VP (VBN respected)))))))))))) (. .))
(S (S (NP (UCP (JJR Higher) (NN order) (CC and) (JJ mutable)) (NNS values)) (VP (MD can) (RB not) (VP (VB be) (VP (ADVP (RB completely)) (VBN checked) (PP (IN at) (NP (DT these) (NNS boundaries))))))) (, ,) (CC and) (RB so) (S (NP (JJ additional) (NNS checks)) (VP (MD must) (VP (VB be) (VP (VBN performed) (PP (IN at) (NP (PRP$ their) (NN use) (NNS sites))))))) (. .))
(S (S (ADVP (RB Traditionally)) (, ,) (NP (DT this)) (VP (VBZ has) (VP (VBN been) (VP (VBN achieved) (PP (IN by) (S (VP (VBG installing) (UCP (NP (NNS wrappers) (CC or) (NNS proxies)) (PP (IN on) (NP (JJ such) (NNS values))) (SBAR (WHNP (WDT that)) (S (VP (VBP moderate) (NP (NP (DT the) (NN flow)) (PP (IN of) (NP (NNS data))) (PP (IN between) (ADJP (JJ static) (CC and) (JJ dynamic))))))))))))))) (, ,) (CC but) (S (NP (DT these)) (VP (MD can) (VP (VB cause) (NP (NNS problems)) (SBAR (IN if) (S (NP (DT the) (NN language)) (VP (VP (VBZ supports) (NP (NP (NN comparison)) (PP (IN of) (NP (JJ object) (NN identity))))) (CC or) (VP (VBZ has) (NP (DT a) (JJ foreign) (NN function) (NN interface))))))))) (. .))
(S (NP (VBN Reticulated) (NNP Python)) (VP (VBZ is) (NP (NP (DT a) (ADJP (RB gradually) (JJ typed)) (NN variant)) (PP (IN of) (NP (NNP Python))) (VP (VBD implemented) (PP (IN via) (NP (NP (DT a) (JJ source-to-source) (NN translator)) (PP (IN for) (NP (NNP Python) (CD 3)))))))) (. .))
(S (NP (PRP It)) (VP (VBZ implements) (NP (NP (DT a) (JJ proxy-free) (JJ alternative) (NN design)) (VP (VBN named) (S (NP (JJ transient) (NNS casts)))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VP (VBZ presents) (NP (NP (DT a) (JJ formal) (NNS semantics)) (PP (IN for) (NP (JJ transient) (NNS casts))))) (CC and) (VP (NNS shows) (SBAR (IN that) (S (CONJP (RB not) (RB only)) (SINV (VBP are) (NP (PRP they)) (ADJP (JJ sound))) (, ,) (CC but) (S (NP (PRP they)) (VP (VBP work) (PP (IN in) (NP (NP (DT an) (JJ open-world) (NN setting)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (S (NP (DT the) (NNP Reticulated) (NN translator)) (VP (VBZ has) (ADVP (RB only)) (VP (VBN been) (VP (VBN applied) (PP (TO to) (NP (NP (DT some)) (PP (IN of) (NP (DT the) (NN program))))))))) (: ;) (S (NP (DT the) (NN rest)) (VP (VBZ is) (NP (JJ untranslated) (NNP Python)))))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP formalize) (NP (DT this) (JJ open) (NN world) (NN soundness) (NN property))) (CC and) (VP (NN use) (NP (NNP Coq)) (S (VP (TO to) (VP (VB prove) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ holds) (PP (IN for) (NP (NP (NNP Anthill) (NNP Python)) (, ,) (NP (NP (DT a) (NN calculus)) (SBAR (WHNP (WDT that)) (S (VP (NNS models) (NP (VBN Reticulated) (NNP Python)))))))))))))))) (. .))
