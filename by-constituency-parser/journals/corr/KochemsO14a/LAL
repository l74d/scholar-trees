(S (NP (NP (ADJP (RB Asynchronously) (VBG communicating)) (JJ pushdown) (NNS systems)) (PRN (-LRB- -LRB-) (NP (NNP ACPS)) (-RRB- -RRB-)) (SBAR (WHNP (WDT that)) (S (VP (VBD satisfy) (NP (NP (DT the) (JJ empty-stack) (NN constraint)) (PRN (-LRB- -LRB-) (S (NP (DT a) (NN pushdown) (NN process)) (VP (MD may) (VP (VB receive) (SBAR (WHADVP (RB only) (WRB when)) (S (NP (PRP$ its) (NN stack)) (VP (VBZ is) (ADJP (JJ empty)))))))) (-RRB- -RRB-))))))) (VP (VBP are) (NP (NP (DT a) (JJ popular) (JJ decidable) (NN model)) (PP (IN for) (NP (NP (JJ recursive) (NNS programs)) (PP (IN with) (NP (JJ asynchronous) (JJ atomic) (NN procedure) (VBZ calls))))))) (. .))
(S (NP (PRP We)) (VP (VBP study) (NP (NP (DT a) (NN relaxation)) (PP (IN of) (NP (NP (DT the) (JJ empty-stack) (NN constraint)) (PP (IN for) (NP (NNP ACPS))))) (SBAR (WHNP (IN that)) (S (VP (VP (VBZ permits) (NP (NN concurrency) (CC and) (NN communication) (NNS actions)) (PP (IN at) (NP (DT any) (NN stack) (NN height)))) (, ,) (VP (VBD called) (S (NP (DT the) (JJ shaped) (NN stack) (NN constraint)))) (, ,) (S (ADVP (RB thus)) (VP (VBG enabling) (S (NP (NP (DT a) (JJR larger) (NN class)) (PP (IN of) (NP (JJ concurrent) (NNS programs)))) (VP (TO to) (VP (VB be) (VP (VBN modelled)))))))))))) (. .))
(S (NP (PRP We)) (VP (VB establish) (NP (NP (DT a) (JJ close) (NN connection)) (PP (IN between) (NP (NP (NP (NNP ACPS)) (PP (IN with) (NP (JJ shaped) (NNS stacks)))) (CC and) (NP (NP (NP (DT a) (JJ novel) (NN extension)) (PP (IN of) (NP (NNP Petri) (NNS nets)))) (: :) (NP (NP (NP (NNS Nets)) (PP (IN with) (NP (NNP Nested) (NNP Coloured) (NNP Tokens)))) (PRN (-LRB- -LRB-) (NP (NNP NNCTs)) (-RRB- -RRB-)))))))) (. .))
(S (NP (NP (NNS Tokens)) (PP (IN in) (NP (NNP NNCTs)))) (VP (VBP are) (PP (IN of) (NP (NP (CD two) (NNS types)) (: :) (ADJP (NN simple) (CC and) (JJ complex))))) (. .))
(S (NP (JJ Complex) (NNS tokens)) (VP (VBP carry) (NP (NP (DT an) (JJ arbitrary) (NN number)) (PP (IN of) (NP (JJ coloured) (NNS tokens))))) (. .))
(S (NP (NP (DT The) (NNS rules)) (PP (IN of) (NP (NNP NNCT)))) (VP (MD can) (VP (VP (VB synchronise) (NP (ADJP (JJ complex) (CC and) (JJ simple)) (NNS tokens))) (, ,) (VP (NN inject) (NP (VBD coloured) (NNS tokens)) (PP (IN into) (NP (DT a) (JJ complex) (NN token)))) (, ,) (CC and) (VP (VBP eject) (NP (NP (DT all) (NNS tokens)) (PP (IN of) (NP (NP (DT a) (JJ specified) (NN set)) (PP (IN of) (NP (NNS colours)))))) (PP (TO to) (NP (JJ predefined) (NNS places)))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (DT the) (NN coverability) (NN problem)) (PP (IN for) (NP (NNP NNCTs)))) (VP (VBZ is) (ADJP (NNP Tower-complete)))))) (. .))
(S (PP (TO To) (NP (PRP$ our) (NN knowledge))) (, ,) (NP (NNP NNCT)) (VP (VBZ is) (NP (NP (DT the) (JJ first) (NN extension)) (PP (IN of) (NP (NNP Petri) (NNS nets))) (, ,) (PP (IN in) (NP (NP (DT the) (NN class)) (PP (IN of) (NP (NP (NNS nets)) (PP (IN with) (NP (NP (DT an) (JJ infinite) (NN set)) (PP (IN of) (NP (JJ token) (NNS types))))))))) (, ,) (SBAR (WHNP (WDT that)) (S (VP (VBZ has) (NP (JJ primitive) (JJ recursive) (NN coverability))))))) (. .))
(S (NP (DT This) (NN result)) (VP (VBZ implies) (NP (NP (NNP Tower-completeness)) (PP (IN of) (NP (NN coverability))) (PP (IN for) (NP (NP (NNP ACPS)) (PP (IN with) (NP (JJ shaped) (NNS stacks))))))) (. .))
