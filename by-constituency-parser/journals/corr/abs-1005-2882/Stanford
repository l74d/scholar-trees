(FRAG (NP (NP (DT The) (NN success)) (PP (IN of) (NP (NP (ADJP (NP (JJ several) (NN constraint)) (HYPH -) (VBN based)) (NN modeling) (NNS languages)) (PP (JJ such) (IN as) (NP (NP (NN OPL) (, ,) (NN ZINC) (, ,) (CC or) (NN COMET)) (, ,) (NP (NP (NNS appeals)) (PP (IN for) (NP (JJR better) (NML (NN software) (NN engineering)) (NNS practices))))))))) (, ,) (FRAG (ADVP (RB particularly)) (PP (IN in) (NP (DT the) (NN testing) (NN phase)))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ introduces) (NP (DT a) (NN testing) (NN framework)) (S (VP (VBG enabling) (NP (NP (VBN automated) (NN test) (NN case) (NN generation)) (PP (IN for) (NP (NN constraint) (NN programming))))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT a) (JJ general) (NN framework)) (PP (IN of) (NP (NP (NN constraint) (NN program) (NN development)) (SBAR (WHNP (WDT which)) (S (VP (VBZ supposes) (SBAR (IN that) (S (NP (DT a) (JJ first) (ADJP (JJ declarative) (CC and) (JJ simple)) (NN constraint) (NN model)) (VP (VBZ is) (ADJP (JJ available) (PP (IN from) (NP (DT the) (NN problem) (NNS specifications) (NN analysis)))))))))))))) (. .))
(S (ADVP (RB Then)) (, ,) (NP (DT this) (NN model)) (VP (VBZ is) (VP (VBN refined) (S (VP (VBG using) (NP (NP (JJ classical) (NNS techniques)) (PP (JJ such) (IN as) (NP (NP (NN constraint) (NN reformulation)) (, ,) (NP (NN surrogate)) (CC and) (NP (JJ global) (NN constraint) (NN addition))))) (, ,) (NAC (CC or) (NP (ADJP (NN symmetry) (HYPH -) (VBG breaking)))))) (S (VP (TO to) (VP (VB form) (NP (NP (DT an) (JJ improved) (NN constraint) (NN model)) (SBAR (WHNP (WDT that)) (S (VP (MD must) (VP (VB be) (ADVP (RB thoroughly)) (VP (VBN tested) (PP (IN before) (S (VP (VBG being) (VP (VBN used) (S (VP (TO to) (VP (VB address) (NP (ADJP (JJ real) (HYPH -) (JJ sized)) (NNS problems)))))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP think) (SBAR (IN that) (S (NP (NP (JJS most)) (PP (IN of) (NP (DT the) (NNS faults)))) (VP (VP (VBP are) (VP (VBN introduced) (PP (IN in) (NP (DT this) (NN refinement) (NN step))))) (CC and) (VP (VB propose) (NP (NP (DT a) (NN process)) (SBAR (WHNP (WDT which)) (S (VP (VBZ takes) (NP (DT the) (JJ first) (JJ declarative) (NN model)) (PP (IN as) (NP (NP (DT an) (NN oracle)) (PP (IN for) (S (VP (VBG detecting) (NP (NNS non-conformities)))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP derive) (NP (JJ practical) (NN test) (NNS purposes)) (PP (IN from) (NP (DT this) (NN process) (S (VP (TO to) (VP (VB generate) (ADVP (RB automatically)) (NP (NP (NN test) (NNS data)) (SBAR (WHNP (WDT that)) (S (VP (VBP exhibit) (NP (NNS non-conformities)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBD implemented) (NP (DT this) (NN approach)) (PP (IN in) (NP (NP (DT a) (JJ new) (NN tool)) (VP (VBN called) (NP (NP (NN CPTEST)) (SBAR (WHNP (WDT that)) (S (VP (VBD was) (VP (VBN used) (S (VP (TO to) (ADVP (RB automatically)) (VP (VB detect) (NP (NNS non-conformities)) (PP (IN on) (NP (NP (CD two) (JJ classical) (NN benchmark) (NNS programs)) (, ,) (ADVP (RB namely)) (NP (DT the) (NNP Golomb) (NNS rulers)) (CC and) (NP (DT the) (NML (NN car) (HYPH -) (NN sequencing)) (NN problem)))))))))))))))) (. .))
