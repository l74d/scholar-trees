(S (NP (NNP JSON)) (VP (VBZ is) (NP (NP (DT a) (JJ popular) (NNS data) (NN format)) (VP (VBN used) (ADVP (RB pervasively)) (PP (IN in) (NP (NP (NN web) (NNS APIs)) (, ,) (NP (NN cloud) (NN computing)) (, ,) (NP (NN NoSQL) (NNS databases)) (, ,) (CC and) (NP (NML (ADVP (RB increasingly)) (ADVP (RB also))) (NN machine) (NN learning))))))) (. .))
(S (NP (NNP JSON) (NNP Schema)) (VP (VBZ is) (NP (NP (DT a) (NN language)) (PP (IN for) (S (VP (VBG declaring) (NP (NP (DT the) (NN structure)) (PP (IN of) (NP (JJ valid) (NNP JSON) (NNS data))))))))) (. .))
(S (NP (EX There)) (VP (VBP are) (NP (NP (NNS validators)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB decide) (SBAR (IN whether) (S (NP (DT a) (NNP JSON) (NN document)) (VP (VBZ is) (ADJP (JJ valid) (PP (IN with) (NP (NN respect)))) (PP (IN to) (NP (DT a) (NN schema)))))))))))) (. .))
(S (ADVP (RB Unfortunately)) (, ,) (PP (IN like) (NP (ADJP (NP (DT all) (NN instance)) (HYPH -) (VBN based)) (NN testing))) (, ,) (NP (DT these) (NNS validators)) (VP (MD can) (ADVP (RB only)) (VP (VB show) (NP (NP (DT the) (NN presence)) (CC and) (ADVP (RB never)) (NP (NP (DT the) (NN absence)) (PP (IN of) (NP (DT a) (NN bug))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (NP (DT a) (JJ complementary) (NN technique)) (: :) (NP (NP (NNP JSON) (NN subschema) (NN checking)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB be) (VP (VBN used) (PP (IN for) (NP (NP (NN static) (NN type)) (VP (VBG checking) (PP (IN with) (NP (NNP JSON) (NNP Schema)))))))))))))) (. .))
(S (S (VP (VBG Deciding) (SBAR (IN whether) (S (NP (CD one) (NN schema)) (VP (VBZ is) (NP (NP (DT a) (NN subschema)) (PP (IN of) (NP (DT another))))))))) (VP (VBZ is) (ADJP (JJ non-trivial) (PP (IN because) (PP (IN of) (NP (NP (DT the) (NN richness)) (PP (IN of) (NP (DT the) (NML (NNP JSON) (NNP Schema)) (NN specification) (NN language)))))))) (. .))
(S (PP (VBN Given) (NP (NP (DT a) (NN pair)) (PP (IN of) (NP (NNS schemas))))) (, ,) (NP (PRP$ our) (NN approach)) (ADVP (RB first)) (VP (VP (VBZ canonicalizes) (CC and) (VBZ simplifies) (NP (DT both) (NNS schemas))) (, ,) (VP (ADVP (RB then)) (VBZ decides) (NP (NP (DT the) (NN subschema) (NN question)) (PP (IN on) (NP (DT the) (JJ canonical) (NNS forms))))) (, ,) (S (VP (VBG dispatching) (NP (JJR simpler) (NN subschema) (NNS queries)) (PP (IN to) (NP (ADJP (NN type) (HYPH -) (JJ specific)) (NNS checkers)))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP apply) (NP (NP (DT an) (NN implementation)) (PP (IN of) (NP (NP (PRP$ our) (NN subschema)) (VP (VBG checking) (NP (NN algorithm)) (PP (IN to) (NP (NP (CD 8,548) (NNS pairs)) (PP (IN of) (NP (NML (JJ real) (HYPH -) (NN world)) (NN JSON) (NNS schemas))))) (PP (IN from) (NP (JJ different) (NNS domains))) (, ,) (S (VP (VBG demonstrating) (SBAR (IN that) (S (NP (PRP it)) (VP (MD can) (VP (VB decide) (NP (DT the) (NN subschema) (NN question)) (PP (IN for) (NP (JJS most) (NN schema) (NNS pairs)))))))))))))) (CC and) (VP (VBZ is) (ADVP (RB always)) (ADJP (JJ correct) (PP (IN for) (NP (NN schema) (NNS pairs)))) (SBAR (IN that) (S (NP (PRP it)) (VP (MD can) (VP (VB decide))))))) (. .))
(S (NP (PRP We)) (VP (VBP hope) (SBAR (IN that) (S (NP (PRP$ our) (NN work)) (VP (MD will) (VP (VB bring) (NP (JJR more) (NN static) (NNS guarantees)) (PP (IN to) (NP (NP (ADJP (JJ hard) (HYPH -) (S (VP (TO to) (HYPH -) (VP (VB debug))))) (NNS domains)) (, ,) (PP (JJ such) (IN as) (NP (NP (NN cloud) (NN computing)) (CC and) (NP (JJ artificial) (NN intelligence))))))))))) (. .))
