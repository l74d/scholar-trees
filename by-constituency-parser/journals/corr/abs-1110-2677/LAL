(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NP (DT a) (JJ hybrid) (JJ static/dynamic) (VBG scheduling) (NN strategy)) (PP (IN of) (NP (DT the) (NN task) (NN dependency) (NN graph))))) (PP (IN for) (NP (NP (JJ direct) (NNS methods)) (VP (VBN used) (PP (IN in) (NP (JJ dense) (JJ numerical) (NN linear) (NN algebra)))))))) (. .))
(S (NP (DT This) (NN strategy)) (VP (VBZ provides) (NP (NP (DT a) (NN balance)) (PP (IN of) (NP (NP (NNS data) (NN locality)) (, ,) (NP (NN load) (NN balance)) (, ,) (CC and) (NP (JJ low) (NN dequeue) (NN overhead)))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (DT the) (NN usage)) (PP (IN of) (NP (DT this) (NN scheduling))) (PP (IN in) (NP (NP (NN communication)) (VP (VBG avoiding) (NP (JJ dense) (NN factorization)))))) (VP (VBZ leads) (PP (TO to) (NP (JJ significant) (NN performance) (NNS gains))))))) (. .))
(S (PP (IN On) (NP (DT a) (ADJP (CD 48) (NN core)) (NNP AMD) (NNP Opteron) (NNP NUMA) (NN machine))) (, ,) (NP (PRP$ our) (NNS experiments)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP we)) (VP (MD can) (VP (VB achieve) (NP (NP (NP (ADJP (QP (RB up) (TO to) (CD 64)) (NN %)) (NN improvement)) (PP (IN over) (NP (NP (DT a) (NN version)) (PP (IN of) (NP (NNP CALU))) (SBAR (WHNP (WDT that)) (S (VP (VBZ uses) (NP (ADJP (RB fully) (JJ dynamic)) (NN scheduling)))))))) (, ,) (CC and) (NP (NP (ADJP (QP (RB up) (TO to) (CD 30)) (NN %)) (NN improvement)) (PP (IN over) (NP (NP (DT the) (NN version)) (PP (IN of) (NP (NNP CALU))) (SBAR (WHNP (WDT that)) (S (VP (VBZ uses) (NP (ADJP (RB fully) (JJ static)) (NN scheduling)))))))))))))) (. .))
(S (PP (IN On) (NP (DT a) (JJ 16-core) (NNP Intel) (NNP Xeon) (NN machine))) (, ,) (NP (PRP$ our) (JJ hybrid) (JJ static/dynamic) (NN scheduling) (NN approach)) (VP (VBZ is) (ADJP (ADJP (NP (QP (IN up) (TO to) (CD 8)) (NN %)) (JJR faster)) (PP (IN than) (NP (NP (DT the) (NN version)) (PP (IN of) (NP (NNP CALU))) (SBAR (WHNP (WDT that)) (S (VP (VBZ uses) (NP (DT a) (ADJP (NX (ADJP (RB fully) (JJ static)) (NN scheduling)) (CC or) (ADJP (RB fully) (JJ dynamic))) (NN scheduling))))))))) (. .))
(S (NP (PRP$ Our) (NN algorithm)) (VP (VBZ leads) (PP (TO to) (NP (NP (VB speedups)) (PP (IN over) (NP (NP (DT the) (JJ corresponding) (NNS routines)) (PP (IN for) (S (VP (VBG computing) (NP (NNP LU) (NN factorization))))) (PP (IN in) (NP (ADJP (RB well) (VBN known)) (NNS libraries)))))))) (. .))
(S (PP (IN On) (NP (DT the) (CD 48) (NN core) (NNP AMD) (NNP NUMA) (NN machine))) (, ,) (NP (PRP$ our) (JJS best) (NN implementation)) (VP (VBZ is) (ADJP (ADJP (NP (QP (IN up) (TO to) (CD 110)) (NN %)) (JJR faster)) (PP (IN than) (NP (NNP MKL)))) (, ,) (SBAR (IN while) (S (PP (IN on) (NP (DT the) (ADJP (CD 16) (NN core)) (NNP Intel) (NNP Xeon) (NN machine))) (, ,) (NP (PRP it)) (VP (VBZ is) (ADJP (ADJP (NP (QP (IN up) (TO to) (CD 82)) (NN %)) (JJR faster)) (PP (IN than) (NP (NNP MKL)))))))) (. .))
(S (NP (PRP$ Our) (NN approach)) (ADVP (RB also)) (VP (VBZ shows) (NP (NP (JJ significant) (NNS speedups)) (PP (VBN compared) (PP (IN with) (NP (NNP PLASMA)))) (PP (IN on) (NP (NP (DT both)) (PP (IN of) (NP (DT these) (NNS systems))))))) (. .))
