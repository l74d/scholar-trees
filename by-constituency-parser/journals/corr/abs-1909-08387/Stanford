(S (NP (JJ Many) (JJ combinatorial) (NN optimization) (NNS problems)) (VP (MD can) (VP (VB be) (VP (VBN phrased) (PP (IN in) (NP (NP (DT the) (NN language)) (PP (IN of) (NP (NN constraint) (NN satisfaction) (NNS problems)))))))) (. .))
(S (NP (PRP We)) (VP (VBP introduce) (NP (DT a) (NN graph) (NML (JJ neural) (NN network)) (NN architecture)) (PP (IN for) (S (VP (VBG solving) (NP (JJ such) (NN optimization) (NNS problems)))))) (. .))
(S (S (NP (DT The) (NN architecture)) (VP (VBZ is) (ADJP (JJ generic)))) (: ;) (S (NP (PRP it)) (VP (VBZ works) (PP (IN for) (NP (DT all) (JJ binary) (NN constraint) (NN satisfaction) (NNS problems))))) (. .))
(S (S (NP (NN Training)) (VP (VBZ is) (ADJP (JJ unsupervised)))) (, ,) (CC and) (S (NP (PRP it)) (VP (VBZ is) (ADJP (JJ sufficient) (S (VP (TO to) (VP (VB train) (PP (IN on) (NP (ADJP (RB relatively) (JJ small)) (NNS instances))))))) (: ;) (S (NP (DT the) (VBG resulting) (NNS networks)) (VP (VB perform) (ADVP (RB well)) (PP (IN on) (NP (ADJP (RB much) (JJR larger)) (NNS instances) (PRN (-LRB- -LRB-) (ADVP (ADVP (IN at) (RBS least)) (ADJP (QP (CD 10) (HYPH -) (NNS times)) (JJR larger))) (-RRB- -RRB-)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB experimentally)) (VP (VB evaluate) (NP (PRP$ our) (NN approach)) (PP (IN for) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (NNS problems))) (, ,) (PP (VBG including) (NP (NML (NNP Maximum) (NNP Cut) (CC and) (NNP Maximum)) (NNP Independent) (NNP Set)))))) (. .))
(S (PP (IN Despite) (S (VP (VBG being) (ADJP (JJ generic))))) (, ,) (NP (PRP we)) (VP (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NN approach)) (VP (VBZ matches) (CC or) (VBZ surpasses) (NP (NP (ADJP (RBS most) (JJ greedy) (CC and) (JJ semi-definite)) (NN programming)) (VP (VBN based) (NP (NNS algorithms)))))))) (CC and) (VP (ADVP (RB sometimes)) (ADVP (RB even)) (VBZ outperforms) (NP (NP (NML (NML (NN state)) (HYPH -) (PP (IN of) (HYPH -) (NP (DT the) (HYPH -) (NN art)))) (NNS heuristics)) (PP (IN for) (NP (DT the) (JJ specific) (NNS problems)))))) (. .))
