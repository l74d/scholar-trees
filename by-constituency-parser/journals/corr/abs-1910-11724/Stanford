(SQ (SBAR (IN If) (S (NP (DT a) (NN code) (NN base)) (VP (VBZ is) (ADJP (RB so) (JJ big) (CC and) (JJ complicated) (SBAR (IN that) (S (NP (JJ complete) (JJ mechanical) (NN verification)) (VP (VBZ is) (ADJP (JJ intractable))))))))) (, ,) (MD can) (NP (PRP we)) (ADVP (RB still)) (VP (VB apply) (CC and) (VB benefit) (PP (IN from) (NP (NN verification) (NNS methods)))) (. ?))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (PP (IN by) (S (VP (VBG allowing) (NP (DT a) (JJ deliberate) (JJ mechanized) (NN formalization) (NN gap))))) (NP (PRP we)) (VP (MD can) (VP (VB shrink) (CC and) (VB simplify) (NP (DT the) (NN model)) (SBAR (IN until) (S (NP (PRP it)) (VP (VBZ is) (ADJP (JJ manageable)) (, ,) (SBAR (IN while) (S (ADVP (RB still)) (VP (VBG retaining) (NP (NP (DT a) (JJ meaningful) (, ,) (ADJP (RB declaratively) (VBN documented)) (NN connection)) (PP (IN to) (NP (DT the) (JJ original) (, ,) (JJ unmodified) (NN source) (NN code))))))))))))))) (. .))
(S (ADVP (RB Concretely)) (, ,) (NP (PRP we)) (VP (VBP translate) (NP (NP (JJ core) (NNS parts)) (PP (IN of) (NP (DT the) (NNP Haskell) (NN compiler) (NN GHC)))) (PP (IN into) (NP (NNP Coq))) (, ,) (S (VP (VP (VBG using) (NP (NP (NNP hs)) (HYPH -) (PP (IN to) (HYPH -) (NP (NN coq))))) (, ,) (CC and) (VP (VB verify) (NP (NP (NNS invariants)) (VP (VBN related) (PP (IN to) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NN term) (NNS variables))))))))))) (. .))
