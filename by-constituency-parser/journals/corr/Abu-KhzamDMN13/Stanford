(S (NP (NNS Supercomputers)) (VP (VBP are) (VP (VBN equipped) (PP (IN with) (NP (NP (DT an) (ADJP (RB increasingly) (JJ large)) (NN number)) (PP (IN of) (NP (NNS cores))))) (S (VP (TO to) (VP (VB use) (NP (JJ computational) (NN power)) (PP (IN as) (NP (NP (DT a) (NN way)) (PP (IN of) (S (VP (VBG solving) (NP (NP (NNS problems)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (RB otherwise) (JJ intractable)))))))))))))))) (. .))
(S (ADVP (RB Unfortunately)) (, ,) (S (VP (VBG getting) (NP (JJ serial) (NNS algorithms)) (S (VP (TO to) (VP (VB run) (PP (IN in) (ADJP (JJ parallel))) (S (VP (TO to) (VP (VB take) (NP (NP (NN advantage)) (PP (IN of) (NP (DT these) (JJ computational) (NNS resources)))))))))))) (VP (VBZ remains) (NP (NP (DT a) (NN challenge)) (PP (IN for) (NP (JJ several) (NN application) (NNS domains))))) (. .))
(S (NP (JJ Many) (JJ parallel) (NNS algorithms)) (VP (MD can) (VP (VB scale) (PP (IN to) (NP (NP (RB only) (NNS hundreds)) (PP (IN of) (NP (NNS cores))))))) (. .))
(S (NP (NP (DT The) (VBG limiting) (NNS factors)) (PP (IN of) (NP (JJ such) (NNS algorithms)))) (VP (VBP are) (ADVP (RB usually)) (NP (NP (NN communication) (NN overhead)) (CC and) (NP (JJ poor) (NN load) (NN balancing)))) (. .))
(S (S (VP (VBG Solving) (NP (ADJP (NP (NNP NP)) (HYPH -) (JJ hard)) (NN graph) (NNS problems)) (PP (IN to) (NP (NP (NN optimality)) (VP (VBG using) (NP (JJ exact) (NNS algorithms))))))) (VP (VBZ is) (NP (NP (DT an) (NN example)) (PP (IN of) (NP (NP (DT an) (NN area)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (EX there)) (VP (VBZ has) (ADVP (RB so) (RB far)) (VP (VBN been) (NP (NP (JJ limited) (NN success)) (PP (IN in) (S (VP (VBG obtaining) (NP (NML (JJ large) (NN scale)) (NN parallelism)))))))))))))) (. .))
(S (NP (NP (JJ Many)) (PP (IN of) (NP (DT these) (NNS algorithms)))) (VP (VBP use) (NP (JJ recursive) (NN backtracking)) (PP (IN as) (NP (PRP$ their) (NN core) (NN solution) (NN paradigm)))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (NP (DT a) (JJ lightweight) (, ,) (ADJP (JJ easy) (HYPH -) (S (VP (TO to) (HYPH -) (VP (VB use))))) (, ,) (ADJP (JJ scalable)) (NN framework)) (PP (IN for) (S (VP (VBG transforming) (NP (RB almost) (DT any) (JJ recursive) (NN backtracking) (NN algorithm)) (PP (IN into) (NP (DT a) (JJ parallel) (NN one)))))))) (. .))
(S (NP (PRP$ Our) (NN framework)) (VP (VP (VBZ incurs) (NP (JJ minimal) (NN communication) (NN overhead))) (CC and) (VP (VBZ guarantees) (NP (NP (DT a) (ADJP (NP (NN load)) (HYPH -) (VBG balancing)) (NN strategy)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (JJ implicit))))))) (, ,) (ADVP (FW i.e.)) (, ,) (VP (VBZ does) (RB not) (VP (VB require) (NP (DT any) (ADJP (NN problem) (HYPH -) (JJ specific)) (NN knowledge))))) (. .))
(S (NP (NP (DT The) (JJ key) (NN idea)) (PP (IN behind) (NP (DT this) (NN framework)))) (VP (VBZ is) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NP (DT an) (VBN indexed) (NML (NN search) (NN tree)) (NN approach)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (JJ oblivious) (PP (IN to) (NP (NP (DT the) (NN problem)) (VP (VBG being) (VP (VBN solved))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP test) (NP (PRP$ our) (NN framework)) (PP (IN with) (NP (NP (JJ parallel) (NNS implementations)) (PP (IN of) (NP (NP (NNS algorithms)) (PP (IN for) (NP (DT the) (ADJP (NN well) (HYPH -) (VBN known)) (NML (NML (NNP Vertex) (NNP Cover)) (CC and) (NML (NNP Dominating) (NNP Set))) (NNS problems)))))))) (. .))
(S (PP (IN On) (NP (ADJP (RB sufficiently) (JJ hard)) (NNS instances))) (, ,) (NP (JJ experimental) (NNS results)) (VP (VBP show) (NP (JJ linear) (NNS speedups)) (PP (IN for) (NP (NP (NP (NNS thousands)) (PP (IN of) (NP (NNS cores)))) (, ,) (VP (VBG reducing) (S (VP (VBG running) (NP (NP (NP (QP (NNS times) (IN from) (NNS days))) (TO to) (NP (QP (RB just) (DT a) (JJ few)))) (NP (NNS minutes))))))))) (. .))
