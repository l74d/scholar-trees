(S (NP (PRP We)) (VP (VBP present) (NP (NP (JJ space-efficient) (NN parallel) (NNS strategies)) (PP (IN for) (NP (NP (CD two) (JJ fundamental) (JJ combinatorial) (NN search) (NNS problems)) (, ,) (ADVP (RB namely)) (, ,) (NP (NP (NP (NN backtrack) (NN search)) (CC and) (NP (NN branch-and-bound))) (, ,) (NP (NP (DT both)) (VP (VBG involving) (NP (NP (DT the) (NN visit)) (PP (IN of) (NP (NP (DT an) (ADJP ($ $) (JJ n) ($ $)) (JJ -node) (NN tree)) (PP (IN of) (NP (JJ height) ($ $) (JJ h) ($ $)))))) (PP (IN under) (NP (DT the) (NN assumption) (SBAR (IN that) (S (NP (DT a) (NN node)) (VP (MD can) (VP (VB be) (VP (VBN accessed) (PP (RB only) (IN through) (NP (NP (PRP$ its) (NN father)) (CC or) (NP (PRP$ its) (NNS children)))))))))))))))))) (. .))
(S (PP (IN For) (NP (DT both) (NNS problems))) (NP (PRP we)) (VP (VBP propose) (NP (NP (JJ efficient) (NN algorithms)) (SBAR (WHNP (WDT that)) (S (VP (VBP run) (PP (IN on) (NP (DT a) (ADJP ($ $) (JJ p) ($ $) (JJ -processor)) (JJ distributed-memory) (NN machine)))))))) (. .))
(S (NP (NP (DT A) (JJ remarkable) (NN feature)) (PP (IN of) (NP (PRP$ our) (NN algorithms)))) (VP (VBZ is) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NP (ADJP (RB only) (JJ constant)) (NN space)) (PP (IN per) (NP (NN processor))))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ constitutes) (NP (NP (DT a) (JJ significant) (NN improvement)) (PP (IN upon) (NP (NP (JJ previous) (NNS algorithms)) (SBAR (WHNP (WHNP (WP$ whose) (NN space) (NNS requirements)) (PP (IN per) (NP (NN processor)))) (S (VP (NN depend) (PP (IN on) (NP (NP (DT the) (PRN (-LRB- -LRB-) (ADJP (RB possibly) (JJ huge)) (-RRB- -RRB-)) (NN tree)) (SBAR (S (VP (TO to) (VP (VB be) (VP (VBN explored))))))))))))))))))) (. .))
