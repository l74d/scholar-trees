(S (NP (PRP We)) (VP (VBP present) (NP (NP (ADJP (NN space) (HYPH -) (JJ efficient)) (JJ parallel) (NNS strategies)) (PP (IN for) (NP (CD two) (JJ fundamental) (JJ combinatorial) (NN search) (NNS problems)))) (, ,) (ADVP (RB namely)) (, ,) (VP (VB backtrack) (NP (ADJP (NP (NN search) (CC and) (NN branch)) (HYPH -) (CC and) (HYPH -) (VBN bound))) (, ,) (NP (NP (DT both)) (PP (VBG involving) (NP (NP (DT the) (NN visit)) (PP (IN of) (NP (NP (NP (DT an) (NML (NML ($ $)) (NN n)) (NML (NML ($ $)) (HYPH -) (NN node)) (NN tree)) (PP (IN of) (NP (NN height)))) (NP ($ $)) (NP (LST (LS h)) (NP ($ $)) (PP (IN under) (NP (DT the) (NN assumption))))))))) (SBAR (IN that) (S (NP (DT a) (NN node)) (VP (MD can) (VP (VB be) (VP (VBN accessed) (ADVP (RB only))))))) (PP (IN through) (NP (NP (PRP$ its) (NN father)) (CC or) (NP (PRP$ its) (NNS children)))))) (. .))
(S (PP (IN For) (NP (DT both) (NNS problems))) (NP (PRP we)) (VP (VBP propose) (NP (NP (JJ efficient) (NNS algorithms)) (SBAR (WHNP (WDT that)) (S (VP (VBP run) (PP (IN on) (NP (NP (DT a) (NML (NML (NML ($ $)) (NN p)) (NML ($ $))) (HYPH -) (NN processor)) (VP (VBN distributed) (HYPH -) (NP (NN memory) (NN machine)))))))))) (. .))
(S (NP (NP (DT A) (JJ remarkable) (NN feature)) (PP (IN of) (NP (PRP$ our) (NNS algorithms)))) (VP (VBZ is) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NP (NP (RB only) (JJ constant) (NN space)) (PP (IN per) (NP (NN processor)))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ constitutes) (NP (DT a) (JJ significant) (NN improvement)) (PP (IN upon) (NP (NP (JJ previous) (NNS algorithms)) (SBAR (WHNP (WP$ whose) (NN space)) (S (NP (NP (NNS requirements)) (PP (IN per) (NP (NN processor)))) (VP (VBP depend) (PP (IN on) (NP (DT the) (-LRB- -LRB-) (ADJP (RB possibly) (JJ huge)) (-RRB- -RRB-) (NN tree))) (S (VP (TO to) (VP (VB be) (VP (VBN explored))))))))))))))))) (. .))
