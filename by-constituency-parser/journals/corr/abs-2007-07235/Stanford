(S (S (VP (TO To) (VP (VB model) (NP (NN check) (JJ concurrent) (NNS systems))))) (, ,) (NP (PRP it)) (VP (VBZ is) (ADJP (JJ convenient) (S (VP (TO to) (VP (VB distinguish) (PP (IN between) (NP (NP (DT the) (NN data) (NN flow)) (CC and) (NP (DT the) (NN control))))))))) (. .))
(S (NP (NN Correctness)) (VP (VBZ is) (VP (VBN specified) (PP (IN on) (NP (NP (DT the) (NN level)) (PP (IN of) (NP (NN data) (NN flow))))) (SBAR (IN whereas) (S (NP (DT the) (NN system)) (VP (VBZ is) (VP (VBN configured) (PP (IN on) (NP (NP (DT the) (NN level)) (PP (IN of) (NP (NN control))))))))))) (. .))
(S (NP (NP (NNP Petri) (NNS nets)) (PP (IN with) (NP (NP (NNS transits)) (CC and) (NP (NNP Flow) (HYPH -) (NNP LTL))))) (VP (VBP are) (NP (DT a) (VBG corresponding) (NN formalism))) (. .))
(S (PP (IN In) (NP (NNP Flow) (HYPH -) (NNP LTL))) (, ,) (NP (CC both) (NP (NP (DT the) (NN correctness)) (PP (IN of) (NP (DT the) (NN data) (NN flow)))) (CC and) (NP (NP (NNS assumptions)) (PP (IN on) (NP (NP (NN fairness) (CC and) (NN maximality)) (PP (IN for) (NP (DT the) (NN control))))))) (VP (VBP are) (VP (VBN expressed) (PP (IN in) (NP (JJ linear) (NN time))))) (. .))
(S (ADVP (RB So) (RB far)) (, ,) (NP (VBG branching) (NN behavior)) (VP (MD can) (RB not) (VP (VB be) (VP (VBN specified) (PP (IN for) (NP (NNP Petri) (NNS nets))) (PP (IN with) (NP (NNS transits)))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (S (NP (PRP we)) (VP (VBP introduce) (NP (NNP Flow) (HYPH -) (NNP CTL)))) (NFP *) (S (VP (TO to) (VP (VB express) (NP (NP (DT the) (VBN intended) (NN branching) (NN behavior)) (PP (IN of) (NP (DT the) (NN data) (NN flow)))) (PP (IN while) (S (VP (VBG maintaining) (NP (NP (NNP LTL)) (PP (IN for) (NP (NN fairness) (CC and) (NN maximality) (NNS assumptions)))) (PP (IN on) (NP (DT the) (NN control))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP encode) (NP (JJ physical) (NN access) (NN control)) (PP (IN with) (NP (NP (NN policy) (NNS updates)) (PP (IN as) (NP (NNP Petri) (NNS nets))))) (PP (IN with) (NP (NNS transits)))) (CC and) (VP (VB give) (NP (JJ standard) (NNS requirements)) (PP (IN in) (NP (NNP Flow) (HYPH -) (NNP CTL))))) (NFP *) (. .))
(S (PP (IN For) (NP (NN model) (NN checking))) (, ,) (NP (PRP we)) (VP (VBP reduce) (NP (DT the) (NN model)) (S (VP (VBG checking) (NP (NP (NN problem)) (PP (IN of) (NP (NNP Petri) (NNS nets)))) (PP (IN with) (NP (NP (NNS transits)) (PP (IN against) (NP (NP (NNP Flow) (HYPH -) (NNP CTL)) (NFP *) (PP (IN via) (NP (NP (NN automata) (NNS constructions)) (PP (IN to) (NP (NP (DT the) (NN model) (VBG checking) (NN problem)) (PP (IN of) (NP (NP (NNP Petri) (NNS nets)) (PP (IN against) (NP (NNP LTL)))))))))))))))) (. .))
(S (ADVP (RB Thereby)) (, ,) (NP (NP (JJ physical) (NN access) (NN control)) (PP (IN with) (NP (NP (NN policy) (NNS updates)) (PP (IN under) (NP (NP (NN fairness) (NNS assumptions)) (PP (IN for) (NP (NP (DT an) (JJ unbounded) (NN number)) (PP (IN of) (NP (NNS people)))))))))) (VP (MD can) (VP (VB be) (VP (VBN verified)))) (. .))
