(S (S (NP (NP (CD One) (NN form)) (PP (IN of) (NP (NN type) (NN checking))) (VP (VBN used) (PP (IN in) (NP (ADJP (RB gradually) (JJ typed)) (NN language))))) (VP (VBZ is) (NP (JJ transient) (NN type) (NN checking)))) (: :) (S (SBAR (WHADVP (WRB whenever)) (S (NP (DT an) (NN object)) (VP (VBZ 'flows) (POS â€º) (PP (IN through) (NP (NN code))) (PP (IN with) (NP (DT a) (NN type) (NN annotation)))))) (, ,) (NP (DT the) (NN object)) (VP (VBZ is) (VP (ADVP (RB dynamically)) (VBN checked) (S (VP (TO to) (VP (VB ensure) (SBAR (S (NP (PRP it)) (VP (VBZ has) (NP (NP (DT the) (NNS methods)) (VP (VBN required) (PP (IN by) (NP (DT the) (NN annotation)))))))))))))) (. .))
(S (NP (NP (JJ Just-in-time) (NN compilation) (CC and) (NN optimisation)) (PP (IN in) (NP (JJ virtual) (NNS machines)))) (VP (MD can) (VP (VB eliminate) (NP (NP (RB much)) (PP (IN of) (NP (NP (DT the) (NN overhead)) (PP (IN of) (NP (JJ run-time) (NN transient) (NN type) (NNS checks)))))))) (. .))
(S (S (ADVP (RB Unfortunately)) (NP (DT this) (NN optimisation)) (VP (VBZ is) (RB not) (ADJP (JJ uniform)))) (: :) (S (NP (DT some) (NN type) (NNS checks)) (VP (MD will) (VP (VP (ADVP (RB significantly)) (VB decrease)) (, ,) (CC or) (VP (ADVP (RB even)) (VB increase)) (, ,) (NP (NP (DT a) (NN program) (POS 's)) (NN performance))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VP (VBP refine) (NP (DT the) (ADJP (RB so) (VBN called)) (`` ``) (NNP Takikawa) ('' '') (NN protocol))) (, ,) (CC and) (VP (VB use) (NP (PRP it)) (S (VP (TO to) (VP (VB identify) (SBAR (WHNP (WDT which) (NN type) (NNS annotations)) (S (VP (VBP have) (NP (NP (DT the) (JJS greatest) (NNS effects)) (PP (IN on) (NP (NN performance)))))))))))) (. .))
(S (PP (IN In) (NP (JJ particular))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (S (VP (VBG graphing) (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (JJ such) (NNS benchmarks)))) (SBAR (WHADVP (WRB when)) (S (VP (VBG varying) (SBAR (WHNP (WDT which) (NN type) (NNS annotations)) (S (VP (VBP are) (ADJP (JJ present) (PP (IN in) (NP (DT the) (NN source) (NN code)))))))))))) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB discern) (NP (NP (JJ potential) (NNS patterns)) (PP (IN in) (NP (NN performance))))))))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP demonstrate) (NP (PRP$ our) (NN approach)) (PP (IN by) (S (VP (VBG testing) (NP (DT the) (NNP Moth) (JJ virtual) (NN machine))))))) (: :) (S (PP (IN for) (NP (NP (JJ many)) (PP (IN of) (NP (NP (DT the) (NNS benchmarks)) (SBAR (WHADVP (WRB where)) (S (NP (NP (NNP Moth) (POS 's)) (NN transient) (NN type) (VBG checking)) (VP (NNS impacts) (NP (NN performance))))))))) (, ,) (NP (PRP we)) (VP (VBP have) (VP (VBN been) (ADJP (JJ able) (S (VP (TO to) (VP (VB identify) (NP (NP (QP (CD one) (CC or) (CD two)) (JJ specific) (NN type) (NNS annotations)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (NP (DT the) (JJ likely) (NN cause))))))))))))) (. .))
(S (PP (IN Without) (NP (DT these) (NN type) (NNS annotations))) (, ,) (NP (NP (DT the) (NN performance) (NN impact)) (PP (IN of) (NP (NN transient) (NN type) (VBG checking)))) (VP (NNS becomes) (ADJP (JJ negligible))) (. .))
(S (S (S (VP (VBG Using) (NP (PRP$ our) (NN technique)))) (NP (NNS programmers)) (VP (MD can) (VP (VB optimise) (NP (NNS programs)) (PP (IN by) (S (VP (VBG removing) (NP (JJ expensive) (NN type) (NNS checks)))))))) (, ,) (CC and) (S (NP (NNP VM) (NNS engineers)) (VP (MD can) (VP (VB identify) (NP (NP (JJ new) (NNS opportunities)) (PP (IN for) (NP (NN compiler) (NN optimisation))))))) (. .))
