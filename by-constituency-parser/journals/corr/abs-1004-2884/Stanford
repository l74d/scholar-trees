(S (NP (PRP We)) (VP (VBP present) (NP (NP (NNP Hindley) (HYPH -) (NNP Milner) (HYPH -) (NNP Cousots) (-LRB- -LRB-) (NNP HMC) (-RRB- -RRB-)) (, ,) (NP (NP (NP (DT an) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ allows) (NP (NP (DT any) (JJ interprocedural) (NN analysis)) (PP (IN for) (NP (ADJP (NP (JJ first) (HYPH -) (NN order)) (JJ imperative)) (NNS programs)))) (S (VP (TO to) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB verify) (NP (NP (NN safety) (NNS properties)) (PP (IN of) (S (VP (VBN typed) (ADVP (RBR higher))))))))))))))))) (HYPH -) (NP (ADJP (NN order) (JJ functional)) (NNS programs))))) (. .))
(S (NP (NN HMC)) (VP (VBZ works) (SBAR (IN as) (S (VP (VBZ follows))))) (. .))
(S (ADVP (RB First)) (, ,) (NP (PRP it)) (VP (VBZ uses) (NP (NP (DT the) (NN type) (NN structure)) (PP (IN of) (NP (DT the) (JJ functional) (NN program)))) (S (VP (TO to) (VP (VB generate) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (JJ logical) (NN refinement) (NNS constraints)) (SBAR (WHNP (WP$ whose) (NN satisfaction)) (S (VP (VBZ implies) (NP (NP (DT the) (NN safety)) (PP (IN of) (NP (DT the) (NN source) (NN program)))))))))))))) (. .))
(S (ADVP (RB Next)) (, ,) (NP (PRP it)) (VP (VBZ transforms) (NP (DT the) (JJ logical) (NN refinement) (NNS constraints)) (PP (IN into) (NP (NP (DT a) (JJ simple) (ADJP (NP (JJ first) (HYPH -) (NN order)) (JJ imperative)) (NN program)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (JJ safe)) (SBAR (IN iff) (S (NP (DT the) (NNS constraints)) (VP (VBP are) (ADJP (JJ satisfiable))))))))))) (. .))
(S (ADVP (RB Thus)) (, ,) (PP (IN in) (NP (CD one) (NN swoop))) (, ,) (NP (NNP HMC)) (VP (VBZ makes) (NP (NNS tools)) (PP (IN for) (NP (NP (ADJP (JJ invariant)) (NN generation)) (, ,) (ADVP (FW e.g.)))) (, ,) (PP (VBN based) (PP (IN on) (NP (NP (JJ abstract) (NNS domains)) (, ,) (NP (ADJP (NP (NP (JJ predicate) (NN abstraction)) (, ,) (NP (NN counterexample))) (HYPH -) (VBN guided)) (NN refinement)) (, ,) (CC and) (NP (NNP Craig) (NN interpolation) (S (VP (VB be) (ADJP (RB directly) (JJ applicable) (S (VP (TO to) (VP (VB verify) (NP (NP (NN safety) (NNS properties)) (PP (IN of) (NP (NP (JJ modern) (JJ functional) (NNS languages)) (PP (IN in) (NP (DT a) (ADJP (RB fully) (JJ automatic)) (NN manner))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP have) (VP (VBN implemented) (NP (NNP HMC)))) (CC and) (VP (VB describe) (NP (JJ preliminary) (JJ experimental) (NNS results)) (S (VP (VBG using) (NP (NP (CD two) (ADJP (JJ imperative)) (NNS checkers)) (: --) (NP (NNP ARMC) (CC and) (NNP InterProc)) (: --) (SBAR (S (VP (TO to) (VP (VB verify) (NP (NN OCaml) (NNS programs))))))))))) (. .))
(S (ADVP (RB Thus)) (, ,) (PP (IN by) (S (VP (VBG composing) (NP (NP (NP (ADJP (NN type) (HYPH -) (VBN based)) (NN reasoning)) (VP (VBN grounded) (PP (IN in) (NP (NN program) (NN syntax))))) (CC and) (NP (NP (ADJP (NN state) (HYPH -) (VBN based)) (NN reasoning)) (VP (VBN grounded) (PP (IN in) (NP (JJ abstract) (NN interpretation))))))))) (, ,) (NP (NN HMC)) (VP (VBZ opens) (NP (DT the) (NN door)) (PP (IN to) (NP (NP (JJ automatic) (NN verification)) (PP (IN of) (NP (NP (NNS programs)) (VP (VBN written) (PP (IN in) (NP (JJ modern) (NN programming) (NNS languages))))))))) (. .))
