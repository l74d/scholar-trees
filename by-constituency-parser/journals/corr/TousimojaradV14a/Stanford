(S (NP (NP (DT The) (NN emergence)) (PP (IN of) (NP (NML (NN multicore) (CC and) (NN manycore)) (NNS processors)))) (VP (VBZ is) (VP (VBN set) (S (VP (TO to) (VP (VB change) (NP (DT the) (NN parallel) (NN computing) (NN world))))))) (. .))
(S (NP (NNS Applications)) (VP (VBP are) (VP (VBG shifting) (PP (IN towards) (NP (NP (VBN increased) (NN parallelism)) (PP (IN in) (NP (NN order) (S (VP (TO to) (VP (VB utilise) (NP (DT these) (NNS architectures)) (ADVP (RB efficiently))))))))))) (. .))
(S (NP (DT This)) (VP (VBZ leads) (PP (IN to) (NP (NP (DT a) (NN situation)) (SBAR (WHADVP (WRB where)) (S (NP (DT every) (NN application)) (VP (VBZ creates) (NP (NP (PRP$ its) (JJ desirable) (NN number)) (PP (IN of) (NP (NNS threads)))) (, ,) (PP (VBN based) (PP (IN on) (NP (NP (PRP$ its) (JJ parallel) (NN nature)) (CC and) (NP (DT the) (NML (NN system) (NNS resources)) (NN allowance))))))))))) (. .))
(S (NP (NP (NNP Task) (NN scheduling)) (PP (IN in) (NP (PDT such) (DT a) (JJ multithreaded) (JJ multiprogramming) (NN environment)))) (VP (VBZ is) (NP (DT a) (JJ significant) (NN challenge))) (. .))
(S (PP (IN In) (NP (NN task) (NN scheduling))) (, ,) (NP (NP (NP (RB not) (RB only) (DT the) (NN order)) (PP (IN of) (NP (DT the) (NN execution)))) (, ,) (CONJP (CC but) (RB also)) (NP (NP (DT the) (NN mapping)) (PP (IN of) (NP (NP (NNS threads)) (PP (IN to) (NP (DT the) (NN execution) (NNS resources))))))) (VP (VBZ is) (PP (IN of) (NP (DT a) (JJ great) (NN importance)))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP state) (CC and) (VBP discuss) (NP (NP (DT some) (JJ fundamental) (NNS rules)) (PP (VBN based) (PP (IN on) (NP (NP (NNS results)) (VP (VBN obtained) (PP (IN from) (NP (NP (VBN selected) (NNS applications)) (PP (IN of) (NP (NP (DT the) (NN BOTS) (NNS benchmarks)) (PP (IN on) (NP (DT the) (NML (CD 64) (HYPH -) (NN core)) (NN TILEPro64) (NN processor))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (SBAR (WHADVP (WRB how)) (S (NP (NP (ADJP (RB previously) (JJ efficient)) (NN mapping) (NNS policies)) (PP (JJ such) (IN as) (NP (NP (DT those)) (PP (IN of) (NP (DT the) (NN SMP) (NNP Linux) (NN scheduler)))))) (VP (VBN become) (S (ADJP (JJ inefficient)) (SBAR (WHADVP (WRB when)) (S (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NNS threads) (CC and) (NNS cores)))) (VP (VBZ grows))))))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT a) (NN novel)) (, ,) (NP (NP (NML (JJ low) (HYPH -) (NN overhead)) (NN technique)) (, ,) (NP (DT a) (NN heuristic)))) (PP (VBN based) (PP (IN on) (NP (NP (DT the) (NN amount)) (PP (IN of) (NP (NP (NN time)) (VP (VBN spent) (PP (IN by) (NP (NP (DT each) (NN CPU)) (VP (VBG doing) (NP (DT some) (JJ useful) (NN work))))))))))) (, ,) (S (VP (TO to) (ADVP (RB fairly)) (VP (VB distribute) (NP (DT the) (NNS workloads)) (PP (IN amongst) (NP (NP (DT the) (NNS cores)) (PP (IN in) (NP (DT a) (JJ multiprogramming) (NN environment))))))))) (. .))
(S (NP (PRP$ Our) (JJ novel) (NN approach)) (VP (VP (MD could) (VP (VB be) (VP (VBN implemented) (PP (IN as) (NP (DT a) (NN pragma))) (S (ADJP (JJ similar) (PP (IN to) (NP (NP (DT those)) (PP (IN in) (NP (DT the) (JJ new) (ADJP (NN task) (HYPH -) (VBN based)) (NN OpenMP) (NNS versions)))))))))) (, ,) (CC or) (VP (MD can) (VP (VB be) (VP (VBN incorporated) (PP (IN as) (NP (NP (DT a) (VBN distributed) (NML (NN thread) (NN mapping)) (NN mechanism)) (PP (IN in) (NP (JJ future) (NN manycore) (NN programming) (NNS frameworks))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NML (NN thread) (VBG mapping)) (NN scheme)) (VP (MD can) (VP (VB outperform) (NP (NP (DT the) (JJ native) (NML (NNP GNU) (HYPH /) (NNP Linux)) (NN thread) (NN scheduler)) (PP (IN in) (NP (DT both) (NML (NML (JJ single) (HYPH -) (NN programming)) (CC and) (NML (NN multiprogramming))) (NNS environments))))))))) (. .))
