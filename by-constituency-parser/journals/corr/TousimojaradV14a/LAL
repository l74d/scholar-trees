(S (NP (NP (DT The) (NN emergence)) (PP (IN of) (NP (NN multicore) (CC and) (NN manycore) (NNS processors)))) (VP (VBZ is) (VP (VBN set) (S (VP (TO to) (VP (VB change) (NP (DT the) (JJ parallel) (NN computing) (NN world))))))) (. .))
(S (NP (NNS Applications)) (VP (VBP are) (VP (VBG shifting) (PP (NNS towards) (NP (VBD increased) (NN parallelism))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB utilise) (NP (DT these) (NNS architectures)) (ADVP (RB efficiently)))))))) (. .))
(S (NP (DT This)) (VP (VBZ leads) (PP (TO to) (NP (NP (DT a) (NN situation)) (SBAR (WHADVP (WRB where)) (S (NP (DT every) (NN application)) (VP (VBZ creates) (NP (NP (PRP$ its) (JJ desirable) (NN number)) (PP (IN of) (NP (NNS threads)))) (, ,) (PP (VBN based) (PP (IN on) (NP (NP (PRP$ its) (JJ parallel) (NN nature)) (CC and) (NP (DT the) (NN system) (NNS resources) (NN allowance))))))))))) (. .))
(S (NP (NP (NN Task) (VBG scheduling)) (PP (IN in) (NP (JJ such) (DT a) (JJ multithreaded) (NN multiprogramming) (NN environment)))) (VP (VBZ is) (NP (DT a) (JJ significant) (NN challenge))) (. .))
(S (PP (IN In) (NP (NN task) (NN scheduling))) (, ,) (NP (CONJP (RB not) (RB only)) (NP (NP (DT the) (NN order)) (PP (IN of) (NP (DT the) (NN execution)))) (, ,) (CONJP (CC but) (RB also)) (NP (NP (DT the) (NN mapping)) (PP (IN of) (NP (NNS threads))) (PP (TO to) (NP (DT the) (NN execution) (NNS resources))))) (VP (VBZ is) (PP (IN of) (NP (DT a) (JJ great) (NN importance)))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (NN state) (CC and) (VB discuss) (NP (NP (DT some) (JJ fundamental) (NNS rules)) (VP (VBN based) (PP (IN on) (NP (NP (NNS results)) (VP (VBN obtained) (PP (IN from) (NP (NP (VBN selected) (NNS applications)) (PP (IN of) (NP (DT the) (NNP BOTS) (NNS benchmarks))) (PP (IN on) (NP (DT the) (JJ 64-core) (NNP TILEPro64) (NN processor))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (SBAR (WHADVP (WRB how)) (S (NP (NP (ADJP (RB previously) (JJ efficient)) (VBG mapping) (NNS policies)) (PP (JJ such) (IN as) (NP (NP (DT those)) (PP (IN of) (NP (DT the) (NNP SMP) (NNP Linux) (VBZ scheduler)))))) (VP (VBN become) (ADJP (JJ inefficient)) (SBAR (WHADVP (WRB when)) (S (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NNS threads) (CC and) (NNS cores)))) (VP (NNS grows)))))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT a) (NN novel) (, ,) (JJ low-overhead) (NN technique)) (, ,) (NP (NP (DT a) (JJ heuristic)) (VP (VBN based) (PP (IN on) (NP (NP (DT the) (NN amount)) (PP (IN of) (NP (NP (NN time)) (VP (VBN spent) (PP (IN by) (NP (DT each) (NNP CPU))) (S (VP (VBG doing) (NP (DT some) (JJ useful) (NN work))))))))))) (, ,)) (S (VP (TO to) (VP (ADVP (RB fairly)) (VB distribute) (NP (DT the) (NNS workloads)) (PP (VBP amongst) (NP (NP (DT the) (NNS cores)) (PP (IN in) (NP (DT a) (NN multiprogramming) (NN environment))))))))) (. .))
(S (NP (PRP$ Our) (JJ novel) (NN approach)) (VP (VP (MD could) (VP (VB be) (VP (VBN implemented) (PP (IN as) (NP (NP (DT a) (NN pragma)) (ADJP (JJ similar) (PP (TO to) (NP (NP (DT those)) (PP (IN in) (NP (DT the) (JJ new) (JJ task-based) (NNP OpenMP) (NNS versions))))))))))) (, ,) (CC or) (VP (MD can) (VP (VB be) (VP (VBN incorporated) (PP (IN as) (NP (DT a) (JJ distributed) (NN thread) (VBG mapping) (NN mechanism))) (PP (IN in) (NP (JJ future) (NN manycore) (NN programming) (NNS frameworks))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NN thread) (VBG mapping) (NN scheme)) (VP (MD can) (VP (VB outperform) (NP (DT the) (JJ native) (NNP GNU/Linux) (NN thread) (NN scheduler)) (PP (IN in) (NP (UCP (DT both) (JJ single-programming) (CC and) (JJ multiprogramming)) (NNS environments)))))))) (. .))
