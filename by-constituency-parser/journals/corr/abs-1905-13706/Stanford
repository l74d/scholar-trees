(S (NP (JJ Modern) (NNP Haskell)) (VP (VBZ supports) (NP (NP (NML (CD zero) (HYPH -) (NN cost)) (NNS coercions)) (, ,) (NP (NP (DT a) (NN mechanism)) (SBAR (WHADVP (WRB where)) (S (NP (NP (NNS types)) (SBAR (WHNP (WDT that)) (S (VP (VBP share) (NP (DT the) (JJ same) (NML (NN run) (HYPH -) (NN time)) (NN representation)))))) (VP (MD may) (VP (VB be) (ADVP (RB freely)) (VP (VBN converted) (PP (IN between)))))))))) (. .))
(S (S (VP (TO To) (VP (VB make) (ADJP (JJ sure) (SBAR (S (NP (JJ such) (NNS conversions)) (VP (VBP are) (ADJP (JJ safe) (CC and) (JJ desirable))))))))) (, ,) (NP (DT this) (NN feature)) (VP (VBZ relies) (PP (IN on) (NP (NP (DT a) (NN mechanism)) (PP (IN of) (NP (NNS roles))))) (S (VP (TO to) (VP (VB prohibit) (NP (JJ invalid) (NNS coercions)))))) (. .))
(S (PP (IN In) (NP (DT this) (NN work))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VP (VB integrate) (NP (NNS roles)) (PP (IN with) (NP (NML (JJ dependent) (NN type)) (NNS systems)))) (CC and) (VP (VB prove)))))) (, ,) (S (VP (VBG using) (NP (DT the) (NNP Coq) (NN proof) (NN assistant)))) (, ,) (SBAR (IN that) (S (NP (DT the) (VBG resulting) (NN system)) (VP (VBZ is) (ADJP (JJ sound)))))) (. .))
(S (S (NP (PRP We)) (VP (VBP have) (VP (VBN designed) (NP (NP (DT this) (NN work)) (PP (IN as) (NP (NP (DT a) (NN foundation)) (PP (IN for) (NP (NP (DT the) (NN addition)) (PP (IN of) (NP (JJ dependent) (NNS types)))))))) (PP (IN to) (NP (DT the) (NNP Glasgow) (NNP Haskell) (NNP Compiler)))))) (, ,) (CC but) (S (NP (PRP we)) (ADVP (RB also)) (VP (VBP expect) (SBAR (IN that) (S (NP (PRP it)) (VP (MD will) (VP (VB be) (PP (IN of) (NP (NP (NN use)) (PP (TO to) (NP (NP (NNS designers)) (PP (IN of) (NP (NP (JJ other) (ADJP (RB dependently) (HYPH -) (VBN typed)) (NNS languages)) (SBAR (WHNP (WP who)) (S (VP (MD might) (VP (VB want) (S (VP (TO to) (VP (VB adopt) (SBAR (S (NP (NP (NNP Haskell) (POS 's)) (JJ safe) (NNS coercions)) (VP (VBP feature))))))))))))))))))))))) (. .))
