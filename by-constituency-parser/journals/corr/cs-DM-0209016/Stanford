(S (NP (DT A) (NN fork) (NN stack)) (VP (VBZ is) (NP (NP (DT a) (VBN generalised) (NN stack)) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (SBAR (S (VP (VBZ pushes) (CC and) (VBZ pops) (PP (IN of) (NP (NP (JJ several) (NNS items)) (PP (IN at) (NP (DT a) (NN time))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP consider) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG determining) (SBAR (SBAR (WHNP (WDT which)) (S (NP (NN input) (NNS streams)) (VP (MD can) (VP (VB be) (VP (VBN sorted) (S (VP (VBG using) (NP (DT a) (JJ single) (NN forkstack))))))))) (, ,) (CC or) (ADVP (RB dually)) (, ,) (SBAR (WHNP (WDT which)) (S (NP (NP (NNS permutations)) (PP (IN of) (NP (DT a) (NML (VBN fixed) (NN input)) (NN stream)))) (VP (MD can) (VP (VB be) (VP (VBN produced) (S (VP (VBG using) (NP (DT a) (JJ single) (NN forkstack))))))))))))))) (. .))
(S (S (NP (DT An) (NN algorithm)) (VP (VBZ is) (VP (VBN given) (S (VP (TO to) (VP (VB solve) (NP (DT the) (NN sorting) (NN problem)))))))) (CC and) (S (NP (DT the) (JJ minimal) (JJ unsortable) (NNS sequences)) (VP (VBP are) (VP (VBN found)))) (. .))
(S (NP (DT The) (NNS results)) (VP (VBP are) (VP (VBN extended) (PP (IN to) (NP (NN fork) (NNS stacks))) (SBAR (WHADVP (WRB where)) (S (NP (EX there)) (VP (VBP are) (NP (NP (NNS bounds)) (PP (IN on) (SBAR (WHADJP (WRB how) (JJ many)) (S (NP (NNS items)) (VP (MD can) (VP (VB be) (VP (VBN pushed) (CC and) (VBN popped) (PP (IN at) (NP (CD one) (NN time))))))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN context))) (NP (PRP we)) (ADVP (RB also)) (VP (VB establish) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB enumerate) (NP (NP (DT the) (NN collection)) (PP (IN of) (NP (JJ sortable) (NNS sequences))))))))) (. .))
