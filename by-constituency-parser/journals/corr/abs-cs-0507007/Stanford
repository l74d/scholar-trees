(S (NP (PRP We)) (VP (VBP consider) (NP (DT the) (JJ untyped) (NN lambda) (NN calculus)) (PP (IN with) (NP (NP (NNS constructors)) (CC and) (NP (ADJP (RB recursively) (VBN defined)) (NNS constants))))) (. .))
(S (NP (PRP We)) (VP (VBP construct) (NP (DT a) (ADJP (NN domain) (HYPH -) (JJ theoretic)) (NN model)) (SBAR (JJ such) (IN that) (S (NP (NP (DT any) (NN term)) (VP (RB not) (VBG denoting) (NP (NN bottom)))) (VP (VBZ is) (ADVP (RB strongly)) (VP (VBG normalising) (PP (VBN provided) (SBAR (S (NP (NP (DT all)) (NP (PRP$ its) (`` `) (JJ stratified) (NNS approximations) ('' '))) (VP (VBP are)))))))))) (. .))
(S (S (PP (IN From) (NP (DT this))) (NP (PRP we)) (VP (VBP derive) (NP (DT a) (JJ general) (NN normalisation) (NN theorem)) (PP (IN for) (S (VP (VBN applied) (S (VP (VBN typed) (NP (NN lambda) (HYPH -) (NN calculi))))))))) (: :) (S (SBAR (IN If) (S (NP (DT all) (NNS constants)) (VP (VBP have) (NP (DT a) (JJ total) (NN value))))) (, ,) (ADVP (RB then)) (NP (DT all) (JJ typeable) (NNS terms)) (VP (VBP are) (ADVP (RB strongly)) (VP (VBG normalising)))) (. .))
