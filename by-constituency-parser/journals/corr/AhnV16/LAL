(S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (NP (DT the) (NN design)) (PP (IN of) (NP (NP (DT a) (JJ supervisory) (NN algorithm)) (SBAR (WHNP (IN that)) (S (VP (VP (NNS monitors) (NP (NN safety)) (PP (IN at) (NP (NN road) (NNS intersections)))) (CC and) (VP (VBZ overrides) (NP (NNS drivers)) (PP (IN with) (NP (DT a) (JJ safe) (NN input))) (SBAR (WHADVP (WRB when)) (FRAG (ADJP (JJ necessary)))))))))))) (. .))
(S (NP (NP (DT The) (NN design)) (PP (IN of) (NP (DT the) (NN supervisor)))) (VP (VBZ consists) (PP (IN of) (NP (NP (CD two) (NNS parts)) (: :) (NP (NP (NN safety) (NN verification)) (CC and) (NP (NN control) (NN design)))))) (. .))
(S (NP (NNP Safety) (NN verification)) (VP (VBZ is) (NP (NP (DT the) (NN problem)) (SBAR (S (VP (TO to) (VP (VB determine) (SBAR (IN if) (S (NP (NNS vehicles)) (VP (MD will) (VP (VB be) (ADJP (JJ able) (S (VP (TO to) (VP (VB cross) (NP (DT the) (NN intersection)) (PP (IN without) (S (VP (VBG colliding) (PP (IN with) (NP (NP (JJ current) (NNS drivers) (POS â€º)) (NNS inputs)))))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP translate) (NP (DT this) (NN safety) (NN verification) (NN problem)) (PP (IN into) (NP (NP (DT a) (NN jobshop) (NN scheduling) (NN problem)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VP (VBZ minimizes) (NP (DT the) (JJ maximum) (NN lateness))) (CC and) (VP (VBZ evaluates) (SBAR (IN if) (S (NP (DT the) (JJ optimal) (NN cost)) (VP (VBZ is) (NP (CD zero)))))))))))) (. .))
(S (NP (DT The) (CD zero) (JJ optimal) (NN cost)) (VP (NNS corresponds) (PP (TO to) (NP (NP (DT the) (NN case)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (DT all) (NNS vehicles)) (VP (MD can) (VP (VB cross) (NP (DT each) (NN conflict) (NN area)) (PP (IN without) (NP (NNS collisions)))))))))) (. .))
(S (S (VP (VBG Computing) (NP (DT the) (JJ optimal) (NN cost)))) (VP (VBZ requires) (S (VP (VBG solving) (NP (DT a) (NNP Mixed) (NNP Integer) (NNP Nonlinear) (NNP Programming) (PRN (-LRB- -LRB-) (NNP MINLP) (-RRB- -RRB-)) (NN problem)) (PP (JJ due) (TO to) (NP (NP (DT the) (JJ nonlinear) (JJ second-order) (NNS dynamics)) (PP (IN of) (NP (DT the) (NNS vehicles)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB therefore)) (VP (VBP estimate) (NP (DT this) (JJ optimal) (NN cost)) (PP (IN by) (S (VP (VBG formulating) (NP (NP (CD two) (JJ related) (NNP Mixed) (NNP Integer) (NNP Linear) (NNP Programming) (PRN (-LRB- -LRB-) (NNP MILP) (-RRB- -RRB-)) (NNS problems)) (SBAR (WHNP (WDT that)) (S (VP (VBP assume) (NP (JJR simpler) (NN vehicle) (NNS dynamics)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT these) (CD two) (NNP MILP) (NNS problems)) (VP (VBP yield) (NP (NP (ADJP (JJR lower) (CC and) (JJ upper)) (NNS bounds)) (PP (IN of) (NP (DT the) (JJ optimal) (NN cost)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP quantify) (NP (NP (DT the) (JJS worst) (NN case) (NN approximation) (NNS errors)) (PP (IN of) (NP (DT these) (NNP MILP) (NNS problems))))) (. .))
(S (NP (PRP We)) (VP (VBP design) (S (NP (DT the) (NN supervisor)) (VP (TO to) (VP (VB override) (NP (DT the) (NNS vehicles)) (PP (IN with) (NP (DT a) (JJ safe) (NN control) (NN input))) (SBAR (IN if) (S (NP (NP (DT the) (NNP MILP) (NN problem)) (SBAR (WHNP (WDT that)) (S (VP (VBZ computes) (NP (DT the) (JJ upper) (NN bound)))))) (VP (VBZ yields) (NP (DT a) (JJ positive) (JJ optimal) (NN cost))))))))) (. .))
(S (NP (PRP We)) (VP (ADVP (RB theoretically)) (VBP demonstrate) (SBAR (IN that) (S (NP (DT the) (NN supervisor)) (VP (VP (VBZ keeps) (S (NP (DT the) (NN intersection)) (ADJP (JJ safe)))) (CC and) (VP (VBZ is) (ADJP (JJ non-blocking))))))) (. .))
(S (NP (NNP Computer) (NNS simulations)) (VP (ADVP (RBR further)) (NN validate) (SBAR (IN that) (S (NP (DT the) (NN algorithms)) (VP (MD can) (VP (VB run) (PP (IN in) (NP (JJ real) (NN time))) (PP (IN for) (NP (NP (NNS problems)) (PP (IN of) (NP (JJ realistic) (NN size)))))))))) (. .))
