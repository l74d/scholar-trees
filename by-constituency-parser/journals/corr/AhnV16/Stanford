(S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (NP (NP (DT the) (NN design)) (PP (IN of) (NP (NP (DT a) (JJ supervisory) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBZ monitors) (NP (NN safety)) (PP (IN at) (NP (NN road) (NNS intersections)))) (CC and) (VP (VBZ overrides) (NP (NNS drivers)) (PP (IN with) (NP (DT a) (JJ safe) (NN input)))))))))) (SBAR (WHADVP (WRB when)) (FRAG (ADJP (JJ necessary)))))) (. .))
(S (NP (NP (DT The) (NN design)) (PP (IN of) (NP (DT the) (NN supervisor)))) (VP (VBZ consists) (PP (IN of) (NP (NP (CD two) (NNS parts)) (: :) (NP (NML (NN safety) (NN verification) (CC and) (NN control)) (NN design))))) (. .))
(S (NP (NN Safety) (NN verification)) (VP (VBZ is) (NP (DT the) (NN problem) (S (VP (TO to) (VP (VB determine) (SBAR (IN if) (S (NP (NNS vehicles)) (VP (MD will) (VP (VB be) (ADJP (JJ able) (S (VP (TO to) (VP (VB cross) (NP (DT the) (NN intersection)) (PP (IN without) (S (VP (VBG colliding) (PP (IN with) (NP (NP (JJ current) (NNS drivers) (POS ')) (NNS inputs))))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VB translate) (NP (DT this) (NML (NN safety) (NN verification)) (NN problem)) (PP (IN into) (NP (NP (DT a) (NML (NN jobshop) (NN scheduling)) (NN problem)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VP (VBZ minimizes) (NP (DT the) (JJ maximum) (NN lateness))) (CC and) (VP (VBZ evaluates) (SBAR (IN if) (S (NP (DT the) (JJ optimal) (NN cost)) (VP (VBZ is) (NP (CD zero)))))))))))) (. .))
(S (NP (DT The) (CD zero) (JJ optimal) (NN cost)) (VP (VBZ corresponds) (PP (IN to) (NP (NP (DT the) (NN case)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (DT all) (NNS vehicles)) (VP (MD can) (VP (VB cross) (NP (DT each) (NN conflict) (NN area)) (PP (IN without) (NP (NNS collisions)))))))))) (. .))
(S (NP (NP (NNP Computing)) (NP (DT the) (JJ optimal) (NN cost))) (VP (VBZ requires) (S (VP (VBG solving) (NP (DT a) (JJ Mixed) (NN Integer)) (PP (NP (JJ Nonlinear) (NML (NN Programming) (-LRB- -LRB-) (NN MINLP) (-RRB- -RRB-)) (NN problem)) (IN due)) (PP (IN to) (NP (NP (DT the) (JJ nonlinear) (NML (JJ second) (HYPH -) (NN order)) (NNS dynamics)) (PP (IN of) (NP (DT the) (NNS vehicles)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB therefore)) (VP (VBP estimate) (NP (DT this) (JJ optimal) (NN cost)) (PP (IN by) (S (VP (VBG formulating) (NP (NP (NP (CD two) (JJ related) (JJ Mixed) (NN Integer)) (NP (NNP Linear) (NNP Programming) (-LRB- -LRB-) (NNP MILP) (-RRB- -RRB-)) (NP (NNS problems))) (SBAR (WHNP (WDT that)) (S (VP (VBP assume) (NP (JJR simpler) (NN vehicle) (NNS dynamics)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT these) (NML (CD two) (NN MILP)) (NNS problems)) (VP (VBP yield) (NP (NP (ADJP (ADJP (JJR lower)) (CC and) (ADJP (JJ upper))) (NNS bounds)) (PP (IN of) (NP (DT the) (JJ optimal) (NN cost)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP quantify) (NP (DT the) (JJS worst) (NN case) (NN approximation) (NNS errors)) (PP (IN of) (NP (DT these) (NN MILP) (NNS problems)))) (. .))
(S (NP (PRP We)) (VP (VBP design) (NP (DT the) (NN supervisor)) (S (VP (TO to) (VP (VB override) (NP (DT the) (NNS vehicles)) (PP (IN with) (NP (DT a) (JJ safe) (NN control) (NN input))) (SBAR (IN if) (NP (NP (NP (DT the) (NN MILP) (NN problem)) (SBAR (WHNP (WDT that)) (S (VP (VBZ computes) (NP (DT the) (ADJP (JJ upper) (JJ bound)) (NNS yields)))))) (NP (DT a) (JJ positive) (JJ optimal) (NN cost)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB theoretically)) (VP (VBP demonstrate) (SBAR (IN that) (S (NP (DT the) (NN supervisor)) (VP (VP (VBZ keeps) (NP (DT the) (NN intersection)) (S (ADJP (JJ safe)))) (CC and) (VP (VBZ is) (ADJP (JJ non-blocking))))))) (. .))
(S (NP (NN Computer) (NNS simulations)) (ADVP (RB further)) (VP (VBP validate) (SBAR (IN that) (S (NP (DT the) (NNS algorithms)) (VP (MD can) (VP (VB run) (PP (IN in) (NP (NP (JJ real) (NN time)) (PP (IN for) (NP (NP (NNS problems)) (PP (IN of) (NP (JJ realistic) (NN size)))))))))))) (. .))
