(S (NP (NP (JJ Several) (JJ classic) (NNS problems)) (PP (IN in) (NP (NP (NN graph) (NN processing)) (CC and) (NP (JJ computational) (NN geometry))))) (VP (VBP are) (VP (VBN solved) (PP (IN via) (NP (NP (JJ incremental) (NN algorithms)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ split) (NP (NN computation)) (PP (IN into) (NP (NP (DT a) (NN series)) (PP (IN of) (NP (JJ small) (NNS tasks))) (VP (VBG acting) (PP (IN on) (NP (NP (VBN shared) (NN state)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ gets) (VP (VBN updated) (ADVP (RB progressively)))))))))))))))))) (. .))
(S (SBAR (IN While) (S (NP (NP (DT the) (JJ sequential) (NN variant)) (PP (IN of) (NP (JJ such) (NNS algorithms)))) (ADVP (RB usually)) (VP (VBZ specifies) (NP (NP (DT a) (JJ fixed) (PRN (-LRB- -LRB-) (CC but) (ADJP (RB sometimes) (RB random)) (-RRB- -RRB-)) (NN order)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (DT the) (NNS tasks)) (VP (MD should) (VP (VB be) (VP (VBN performed)))))))))) (, ,) (NP (NP (DT a) (JJ standard) (NN approach)) (PP (TO to) (S (VP (VBG parallelizing) (NP (JJ such) (NN algorithms)))))) (VP (VBZ is) (S (VP (TO to) (VP (VB relax) (NP (DT this) (NN constraint)) (S (VP (TO to) (VP (VB allow) (PP (IN for) (NP (JJ out-of-order) (JJ parallel) (NN execution)))))))))) (. .))
(S (NP (DT This)) (VP (VBZ is) (NP (NP (DT the) (NN case)) (PP (PP (IN for) (NP (NP (JJ parallel) (NNS implementations)) (PP (IN of) (NP (NP (NP (NNP Dijkstra) (POS 's)) (JJ single-source) (JJ shortest-paths) (NN algorithm)) (PRN (-LRB- -LRB-) (NP (NNP SSSP)) (-RRB- -RRB-)))))) (, ,) (CC and) (PP (IN for) (NP (JJ parallel) (NNP Delaunay) (JJ mesh) (NN triangulation)))))) (. .))
(S (SBAR (IN While) (S (NP (JJ many) (NN software) (NNS frameworks)) (VP (VBP parallelize) (NP (JJ incremental) (NN computation)) (PP (IN in) (NP (DT this) (NN way)))))) (, ,) (NP (NP (PRP it))) (VP (VBZ is) (ADVP (RB still)) (RB not) (ADVP (RB well)) (RB understood) (SBAR (IN whether) (S (NP (DT this) (JJ relaxed) (VBG ordering) (NN approach)) (VP (MD can) (ADVP (RB still)) (VP (VB provide) (NP (DT any) (NN complexity) (NNS guarantees))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VP (VBP address) (NP (DT this) (NN problem))) (, ,) (CC and) (VP (VBZ analyze) (NP (NP (DT the) (NN efficiency) (NNS guarantees)) (VP (VBN provided) (PP (IN by) (NP (NP (DT a) (NN range)) (PP (IN of) (NP (JJ incremental) (NN algorithms))))) (SBAR (WHADVP (WRB when)) (S (VP (VBN parallelized) (PP (IN via) (NP (JJ relaxed) (NNS schedulers)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (, ,) (S (PP (IN for) (NP (NP (NN algorithms)) (PP (JJ such) (IN as) (NP (NP (NNP Delaunay) (JJ mesh) (NN triangulation)) (CC and) (NP (NP (NN sorting)) (PP (IN by) (NP (NN insertion)))))))) (, ,) (NP (NP (NNS schedulers)) (PP (IN with) (NP (NP (DT a) (JJ maximum) (NN relaxation) (NN factor)) (PP (IN of) (NP ($ $) (JJ k) ($ $))) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NP (DT the) (JJ maximum) (NN priority) (NN inversion)) (VP (VBN allowed))))))))) (VP (MD will) (VP (VB introduce) (NP (NP (DT a) (JJ maximum) (NN amount)) (PP (IN of) (NP (NP (JJ wasted) (NN work)) (PP (IN of) (NP (NP (NP ($ $) (NNP O)) (PRN (-LRB- -LRB-) (NP (NN log) (PRN (-LRB- -LRB-) (JJ n) (-RRB- -RRB-)) (NN poly) (PRN (-LRB- -LRB-) (NN k) (-RRB- -RRB-))) (-RRB- -RRB-))) (, ,) (NP (NP ($ $)) (SBAR (WHADVP (WRB where)) (S (NP ($ $) (JJ n) ($ $)) (VP (VBZ is) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NP (NNS tasks)) (SBAR (S (VP (TO to) (VP (VB be) (VP (VBN executed))))))))))))))))))))))) (. .))
(S (PP (IN On) (NP (DT the) (JJ negative) (NN side))) (, ,) (NP (PRP we)) (VP (VBP provide) (NP (NP (JJR lower) (NNS bounds)) (VP (VBG showing) (SBAR (IN that) (S (NP (JJ certain) (NN algorithms)) (VP (MD will) (ADVP (RB inherently)) (VP (VB incur) (NP (NP (DT a) (JJ non-trivial) (NN amount)) (PP (IN of) (NP (JJ wasted) (NN work))) (ADJP (JJ due) (PP (TO to) (NP (VB scheduler) (NN relaxation))))) (, ,) (PP (ADVP (RB even)) (IN for) (NP (ADJP (RB relatively) (JJ benign)) (JJ relaxed) (NNS schedulers)))))))))) (. .))
