(S (NP (JJ Reactive) (NNS systems)) (VP (VBP are) (VP (VBN composed) (PP (IN of) (NP (NP (DT a) (ADJP (RB well) (VBN defined)) (NN set)) (PP (IN of) (NP (NP (NN input) (NNS events)) (SBAR (WHNP (WDT that)) (S (NP (DT the) (NN system)) (VP (VBZ reacts) (PP (IN with) (PP (IN by) (S (VP (VBG executing) (NP (DT an) (JJ associated) (NN handler)) (PP (IN to) (NP (DT each) (NN event)))))))))))))))) (. .))
(S (PP (IN In) (NP (JJ concurrent) (NNS environments))) (, ,) (NP (NN event) (NNS handlers)) (VP (MD can) (VP (VB interact) (PP (IN with) (NP (NP (DT the) (NN execution)) (PP (IN of) (NP (NP (JJ other) (NNS programs)) (PP (JJ such) (IN as) (NP (NP (NP (NN hardware) (NNS interruptions)) (PP (IN in) (NP (JJ preemptive) (NNS systems)))) (, ,) (CC or) (NP (NP (JJ other) (NNS instances)) (PP (IN of) (NP (NP (DT the) (JJ reactive) (NN system)) (PP (IN in) (NP (NN multicore) (NNS architectures)))))))))))))) (. .))
(S (NP (NP (NN State)) (PP (IN of) (NP (DT the) (NN art)))) (VP (VB rely) (HYPH -) (VP (VB guarantee) (PP (VBN based) (SBAR (S (NP (NN verification) (NNS frameworks)) (ADVP (RB only)) (VP (VBP focus) (PP (IN on) (NP (ADJP (JJ imperative)) (NNS programs))) (, ,) (S (VP (VBG being) (ADJP (JJ difficult) (S (VP (TO to) (VP (VB capture) (PP (IN in) (NP (DT the) (NML (S (VP (VB rely) (CC and) (VB guarantee)))) (NNS relations) (NNS interactions))) (PP (IN with) (NP (NP (NP (JJ possible) (JJ infinite) (NNS sequences)) (PP (IN of) (NP (NN event) (NNS handlers)))) (, ,) (CC and) (NP (NP (DT the) (NN input) (NNS arguments)) (PP (IN to) (NP (NN event) (NNS handlers)))))))))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (DT the) (ADJP (NP (NP (NN formalisation)) (PP (IN in) (NP (NP (NNP Isabelle) (HYPH /) (NNP HOL)) (PP (IN of) (NP (DT an) (NN event)))))) (HYPH -) (VBN based)) (NML (S (VP (VB rely) (HYPH -) (VB guarantee)))) (NN approach)) (PP (IN for) (NP (JJ concurrent) (JJ reactive) (NNS systems)))) (. .))
(S (S (NP (PRP We)) (VP (VBP develop) (NP (NP (DT a) (NML (NN Pi) (HYPH -) (NN Core)) (NN language)) (SBAR (WHNP (WDT which)) (S (VP (VBZ incorporates) (NP (NP (DT a) (JJ concurrent) (NN imperative)) (CC and) (NP (NN system) (NN specification) (NN language))) (PP (IN by) (NP (`` `) (NNS events) ('' '))))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VP (VBP build) (NP (NP (DT a) (NML (S (VP (VB rely) (HYPH -) (VB guarantee)))) (NN proof) (NN system)) (PP (IN for) (NP (NN Pi) (HYPH -) (NN Core))))) (CC and) (VP (VB prove) (NP (PRP$ its) (NN soundness))))) (. .))
(S (NP (PRP$ Our) (NN approach)) (VP (MD can) (VP (VB deal) (PP (IN with) (NP (NP (NN multicore)) (CC and) (NP (JJ interruptible) (NN concurrency)))))) (. .))
(S (NP (PRP We)) (VP (VBP use) (NP (CD two) (NN case) (NNS studies)) (S (VP (TO to) (VP (VP (VB show) (NP (DT this))) (: :) (VP (NP (DT an) (JJ interruptible) (NN controller)) (PP (IN for) (NP (NP (NN stepper) (NNS motors)) (CC and) (NP (DT an) (NN ARINC) (NML (CD 653) (NN multicore)) (NN kernel))))) (, ,) (CC and) (VP (VB prove) (NP (NP (DT the) (JJ functional) (NN correctness) (CC and) (NN preservation)) (PP (IN of) (NP (NP (NNS invariants)) (PP (IN of) (NP (PRP them)))))) (PP (IN in) (NP (NNP Isabelle) (HYPH /) (NNP HOL)))))))) (. .))
