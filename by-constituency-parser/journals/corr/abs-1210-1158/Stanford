(S (NP (JJ Sequential) (NN computation)) (VP (VP (VBZ is) (ADVP (RB well)) (VP (VBN understood))) (CC but) (VP (VBZ does) (RB not) (VP (VB scale) (ADVP (RB well)) (PP (IN with) (NP (JJ current) (NN technology)))))) (. .))
(S (PP (IN Within) (NP (DT the) (JJ next) (NN decade))) (, ,) (NP (NNS systems)) (VP (MD will) (VP (VB contain) (NP (NP (JJ large) (NNS numbers)) (PP (IN of) (NP (NNS processors)))) (PP (IN with) (NP (NP (ADVP (RB potentially)) (NNS thousands)) (PP (IN of) (NP (NP (NNS processors)) (PP (IN per) (NP (NN chip))))))))) (. .))
(S (PP (IN Despite) (NP (DT this))) (, ,) (NP (JJ many) (JJ computational) (NNS problems)) (VP (VBP exhibit) (SBAR (S (NP (NP (QP (JJ little) (CC or) (DT no)) (NN parallelism)) (CC and) (NP (JJ many) (VBG existing) (NNS formulations))) (VP (VBP are) (ADJP (JJ sequential)))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (ADVP (RB therefore)) (ADJP (JJ essential)) (SBAR (IN that) (S (NP (ADJP (RB highly) (HYPH -) (JJ parallel)) (NNS architectures)) (VP (MD can) (VP (VB support) (NP (JJ sequential) (NN computation)) (PP (IN by) (S (VP (VBG emulating) (NP (JJ large) (NNS memories)) (PP (IN with) (NP (NP (NNS collections)) (PP (IN of) (NP (JJR smaller) (NNS ones))))) (, ,) (S (ADVP (RB thus)) (VP (VBG supporting) (NP (NP (NP (JJ efficient) (NN execution)) (PP (IN of) (NP (JJ sequential) (NNS programs)))) (CC or) (NP (NP (JJ sequential) (NNS components)) (PP (IN of) (NP (JJ parallel) (NNS programs))))))))))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ demonstrates) (SBAR (IN that) (S (NP (NP (DT a) (JJ realistic) (JJ parallel) (NN architecture)) (PP (IN with) (NP (ADJP (JJ scalable) (NP (JJ low) (HYPH -) (NN latency))) (NNS communications)))) (VP (MD can) (VP (VB execute) (NP (NML (JJ large) (HYPH -) (NN memory)) (JJ sequential) (NNS programs)) (PP (IN with) (NP (NP (DT a) (NN factor)) (PP (IN of) (NP (QP (RB only) (CD 2) (IN to) (CD 3)) (NN slowdown))))) (, ,) (SBAR (WHADVP (WRB when)) (S (VP (VBN compared) (PP (IN to) (NP (DT a) (JJ conventional) (JJ sequential) (NN architecture))))))))))) (. .))
(S (NP (DT This) (NN overhead)) (VP (VBZ seems) (NP (DT an) (JJ acceptable) (NN price)) (S (VP (TO to) (VP (VB pay) (S (VP (TO to) (VP (VB be) (ADJP (JJ able) (S (VP (TO to) (VP (VB switch) (PP (IN between) (S (VP (VBG executing) (NP (NP (ADJP (RB highly) (HYPH -) (JJ parallel)) (NNS programs)) (CC and) (NP (NP (JJ sequential) (NNS programs)) (PP (IN with) (NP (JJ large) (NN memory) (NNS requirements))))))))))))))))))) (. .))
(S (NP (NP (JJ Efficient) (NN emulation)) (PP (IN of) (NP (JJ large) (NNS memories)))) (VP (MD could) (ADVP (RB therefore)) (VP (VB facilitate) (NP (NP (DT a) (NN transition)) (PP (IN from) (NP (JJ sequential) (NNS machines)))) (PP (PP (IN by) (S (VP (VBG allowing) (NP (VBG existing) (NNS programs)) (S (VP (TO to) (VP (VB be) (VP (VBN compiled) (ADVP (RB directly)) (PP (IN to) (NP (DT a) (ADJP (RB highly) (HYPH -) (JJ parallel)) (NN architecture)))))))))) (CC and) (PP (ADVP (RB then)) (IN for) (NP (PRP$ their) (NN performance) (S (VP (TO to) (VP (VB be) (VP (VBN improved) (PP (IN by) (S (VP (VBG exploiting) (NP (NN parallelism)) (PP (IN in) (NP (NP (NP (NN memory)) (SBAR (S (VP (VBZ accesses))))) (CC and) (NP (NN computation)))))))))))))))) (. .))
