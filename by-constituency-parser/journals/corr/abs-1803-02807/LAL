(S (NP (DT The) (JJ abelian) (NN pattern) (VBG matching) (NN problem)) (VP (VBZ consists) (PP (IN in) (S (VP (VBG finding) (NP (NP (DT all) (NNS substrings)) (PP (IN of) (NP (DT a) (NN text))) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (NP (NP (NNS permutations)) (PP (IN of) (NP (DT a) (VBN given) (NN pattern)))))))))))) (. .))
(S (NP (DT This) (NN problem)) (VP (VP (VBZ finds) (NP (NN application)) (PP (IN in) (NP (JJ many) (NNS areas)))) (CC and) (VP (MD can) (VP (VB be) (VP (VBN solved) (PP (IN in) (NP (JJ linear) (NN time))) (PP (IN by) (NP (DT a) (JJ naive) (NN sliding) (NN window) (NN approach))))))) (. .))
(S (PP (IN In) (NP (DT this) (JJ short) (NN communication))) (NP (PRP we)) (VP (VBP present) (NP (NP (DT a) (JJ new) (NN class)) (PP (IN of) (NP (NNS algorithms))) (VP (VBN based) (PP (IN on) (NP (NP (DT a) (JJ new) (JJ efficient) (NN fingerprint) (NN computation) (NN approach)) (, ,) (VP (VBD called) (S (NP (NNP Heap-Counting)))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ turns) (PRT (RP out)) (S (VP (TO to) (VP (VB be) (ADJP (RB fast) (, ,) (JJ flexible) (CC and) (ADJP (JJ easy) (SBAR (S (VP (TO to) (VP (VB be) (VP (VBN implemented))))))))))))))))))) (. .))
(S (S (NP (PRP It)) (VP (MD can) (VP (VB be) (VP (VBN proved) (SBAR (IN that) (S (NP (PRP$ our) (NNS solutions)) (VP (VBP have) (NP (DT a) (JJ linear) (JJ worst) (NN case) (NN time) (NN complexity))))))))) (CC and) (, ,) (S (PP (IN in) (NP (NN addition))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT an) (JJ extensive) (NN experimental) (NN evaluation)) (SBAR (WHNP (WDT which)) (S (VP (VBZ shows) (SBAR (IN that) (S (NP (PRP$ our) (ADJP (RB newly) (VBN presented)) (NNS algorithms)) (VP (VBP are) (PP (IN among) (NP (NP (DT the) (ADJP (RBS most) (JJ efficient) (CC and) (JJ flexible)) (NNS solutions)) (PP (IN in) (NP (NN practice))) (PP (IN for) (NP (NP (DT the) (JJ abelian) (NN matching) (NN problem)) (PP (IN in) (NP (NNS strings)))))))))))))))) (. .))
