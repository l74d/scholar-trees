(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (JJ new) (JJ abstract) (NN machine)) (, ,) (VP (VBN called) (S (NP (NNP DCESH)))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ describes) (NP (NP (DT the) (NN execution)) (PP (IN of) (NP (NP (JJ higher-order) (NNS programs)) (VP (VBG running) (PP (IN in) (NP (JJ distributed) (NNS architectures)))))))))))) (. .))
(S (NP (NNP DCESH)) (VP (VBZ implements) (NP (NP (DT a) (JJ generalised) (NN form)) (PP (IN of) (NP (NNP Remote) (NNP Procedure) (NNP Call))) (SBAR (WHNP (WDT that)) (S (VP (VBZ supports) (S (VP (VBG calling) (NP (JJ higher-order) (NNS functions)) (PP (IN across) (NP (JJ node) (NNS boundaries))) (, ,) (PP (IN without) (S (VP (VBG sending) (NP (JJ actual) (NN code)))))))))))) (. .))
(S (NP (PRP$ Our) (VBG starting) (NN point)) (VP (VBZ is) (NP (NP (DT a) (NN variant)) (PP (IN of) (NP (DT the) (NNP SECD) (NN machine))) (SBAR (WHNP (IN that)) (S (NP (PRP we)) (VP (VBP call) (S (NP (NP (DT the) (NNP CES) (NN machine)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ implements) (NP (NN reduction)) (PP (IN for) (NP (JJ untyped) (JJ call-by-value) (NNP PCF))))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (ADVP (RB successively)) (VBP add) (NP (NP (DT the) (NNS features)) (SBAR (WHNP (IN that)) (S (NP (PRP we)) (VP (VBP need) (PP (IN for) (NP (JJ distributed) (NN execution)))))))) (CC and) (VP (VB show) (NP (NP (DT the) (NN correctness)) (PP (IN of) (NP (DT each) (NN addition)))))) (. .))
(S (ADVP (RB First)) (NP (PRP we)) (VP (VP (VBP add) (NP (NNS heaps)) (, ,) (S (VP (VBG forming) (NP (NP (DT the) (NNP CESH) (NN machine)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ provides) (NP (NP (NNS features)) (ADJP (JJ necessary) (PP (IN for) (NP (ADJP (RBR more) (JJ efficient)) (NN execution)))))))))))) (, ,) (CC and) (VP (VBP show) (SBAR (IN that) (S (NP (EX there)) (VP (VBZ is) (NP (NP (DT a) (NN bisimulation)) (PP (IN between) (NP (NP (DT the) (NNP CES)) (CC and) (NP (DT the) (NNP CESH) (NN machine)))))))))) (. .))
(S (ADVP (RB Then)) (NP (PRP we)) (VP (VBP construct) (NP (NP (DT a) (JJ two-level) (JJ operational) (NNS semantics)) (, ,) (SBAR (WHADVP (WRB where)) (S (S (NP (DT the) (JJ high) (NN level)) (VP (VBZ is) (NP (NP (DT a) (NN network)) (PP (IN of) (NP (VBG communicating) (NNS machines)))))) (, ,) (CC and) (S (NP (DT the) (JJ low) (NN level)) (VP (VBZ is) (VP (VBN given) (PP (IN by) (NP (JJ local) (NN machine) (NNS transitions)))))))))) (. .))
(S (S (VP (VBG Using) (NP (DT these) (NNS networks)))) (, ,) (NP (PRP we)) (VP (VBP arrive) (PP (IN at) (NP (NP (PRP$ our) (JJ final) (NN system)) (, ,) (NP (NP (DT the) (JJ distributed) (NNP CESH) (NN machine)) (PRN (-LRB- -LRB-) (NP (NNP DCESH)) (-RRB- -RRB-)))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (EX there)) (VP (VBZ is) (NP (DT a) (NN bisimulation) (NN relation)) (ADVP (RB also)) (PP (IN between) (NP (NP (DT the) (NNP CESH) (NN machine)) (CC and) (NP (DT the) (NNP DCESH) (NN machine)))))))) (. .))
(S (S (NP (PDT All) (DT the) (JJ technical) (NNS results)) (VP (VBP have) (VP (VBN been) (VP (VP (VBN formalised)) (CC and) (VP (VBN proved) (S (ADJP (VBP correct)))) (PP (IN in) (NP (NNP Agda))))))) (, ,) (CC and) (S (NP (DT a) (NN prototype) (NN compiler)) (VP (VBZ has) (VP (VBN been) (VP (VBN developed))))) (. .))
