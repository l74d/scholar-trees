(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (JJ new) (ADJP (JJ CSP-) (CC and) (JJ SAT-based)) (NN approach)) (PP (IN for) (S (VP (VBG coordinating) (NP (NP (NNS interfaces)) (PP (IN of) (NP (NP (JJ distributed) (JJ stream-connected) (NNS components)) (VP (VBD provided) (PP (IN as) (NP (NN closed-source) (NNS services)))))))))))) (. .))
(S (S (NP (NP (DT The) (NNP Kahn) (NNP Process) (NNP Network)) (PRN (-LRB- -LRB-) (NP (NNP KPN)) (-RRB- -RRB-))) (VP (VBZ is) (VP (VBN taken) (PP (IN as) (NP (NP (DT a) (JJ formal) (NN model)) (PP (IN of) (NP (NN computation)))))))) (CC and) (S (NP (NP (DT a) (NNP Message) (NNP Definition) (NNP Language)) (PRN (-LRB- -LRB-) (NP (NNP MDL)) (-RRB- -RRB-))) (VP (VBZ is) (VP (VBN introduced) (S (VP (TO to) (VP (VB describe) (NP (NP (DT the) (NN format)) (PP (IN of) (NP (NP (NNS messages)) (VP (VBN communicated) (PP (IN between) (NP (DT the) (NNS processes))))))))))))) (. .))
(S (NP (NNP MDL)) (VP (VBZ links) (NP (NP (NN input) (CC and) (NN output) (NNS interfaces)) (PP (IN of) (NP (DT a) (NN node)))) (S (VP (TO to) (VP (VB support) (NP (JJ flow) (NN inheritance) (CC and) (NN contextualisation)))))) (. .))
(S (SBAR (IN Since) (S (NP (NNS interfaces)) (VP (MD can) (ADVP (RB also)) (VP (VB be) (VP (VBN linked) (PP (IN by) (NP (NP (DT the) (NN existence)) (PP (IN of) (NP (NP (DT a) (NN data) (NN channel)) (PP (IN between) (NP (PRP them)))))))))))) (, ,) (NP (DT the) (NN match)) (VP (VBZ is) (ADVP (RB generally)) (ADJP (CONJP (RB not) (RB only)) (JJ partial) (CONJP (CC but) (RB also)) (ADJP (RB substantially) (JJ nonlocal)))) (. .))
(S (NP (DT The) (NNP KPN) (NN communication) (NN graph)) (ADVP (RB thus)) (VP (VBZ becomes) (NP (NP (DT a) (NN graph)) (PP (IN of) (NP (NP (JJ interlocked) (NNS constraints)) (SBAR (S (VP (TO to) (VP (VB be) (VP (VBN satisfied) (PP (IN by) (NP (NP (JJ specific) (NNS instances)) (PP (IN of) (NP (DT the) (NNS variables)))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT an) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ solves) (NP (DT the) (NNP CSP)) (PP (IN by) (NP (JJ iterative) (NN approximation))) (SBAR (IN while) (S (VP (VBG generating) (NP (DT an) (JJ adjunct) (NNP Boolean) (NNP SAT) (NN problem)) (PP (IN on) (NP (DT the) (NN way))))))))))) (. .))
(S (NP (PRP We)) (VP (VBD developed) (NP (NP (NP (DT a) (NN solver)) (PP (IN in) (NP (NNP OCaml)))) (CONJP (RB as) (RB well) (IN as)) (NP (NP (NNS tools)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBP analyse) (NP (NP (DT the) (NN source) (NN code)) (PP (IN of) (NP (NNP KPN) (NNS vertices)))) (S (VP (TO to) (VP (VB derive) (NP (NNP MDL) (NNS terms)))))) (CC and) (VP (ADVP (RB automatically)) (VB modify) (NP (DT the) (NN code)) (PP (IN by) (S (VP (VBG propagating) (NP (NN type) (NNS definitions)) (ADVP (RB back) (PP (TO to) (NP (DT the) (NNS vertices)))) (SBAR (IN after) (S (NP (DT the) (NNP CSP)) (VP (VBZ has) (VP (VBN been) (VP (VBN solved)))))))))))))))) (. .))
(S (NP (NNS Techniques) (CC and) (NNS approaches)) (VP (VBP are) (VP (VBN illustrated) (PP (IN on) (NP (NP (DT a) (NNP KPN)) (VP (VBG implementing) (NP (DT an) (NN image) (NN processing) (NN algorithm)) (PP (IN as) (NP (DT a) (JJ running) (NN example)))))))) (. .))
