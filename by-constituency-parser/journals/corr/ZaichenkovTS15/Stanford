(S (NP (PRP We)) (VP (VBP present) (SBAR (S (NP (NP (DT a) (JJ new) (ADJP (NP (NP (NNP CSP)) (HYPH -) (CC and) (NP (NN SAT))) (HYPH -) (VBN based)) (NN approach)) (PP (IN for) (S (VP (VBG coordinating))))) (VP (VBZ interfaces) (PP (IN of) (NP (NP (ADJP (VBN distributed)) (ADJP (NP (NN stream)) (HYPH -) (VBN connected)) (NNS components)) (VP (VBN provided) (PP (IN as) (NP (NML (JJ closed) (HYPH -) (NN source)) (NNS services)))))))))) (. .))
(S (NP (NP (DT The) (NNP Kahn) (NN Process) (NN Network)) (-LRB- -LRB-) (NP (NN KPN)) (-RRB- -RRB-)) (VP (VBZ is) (VP (VBN taken) (SBAR (IN as) (S (NP (NP (DT a) (JJ formal) (NN model)) (PP (IN of) (NP (NP (NN computation)) (CC and) (NP (DT a) (NN Message)) (NML (NNP Definition) (NNP Language)) (PRN (-LRB- -LRB-) (NP (NN MDL)) (-RRB- -RRB-))))) (VP (VBZ is) (VP (VBN introduced) (S (VP (TO to) (VP (VB describe) (NP (NP (DT the) (NN format)) (PP (IN of) (NP (NP (NNS messages)) (VP (VBN communicated) (PP (IN between) (NP (DT the) (NNS processes)))))))))))))))) (. .))
(S (NP (NP (NN MDL) (NNS links)) (NP (NN input) (CC and) (NN output))) (VP (VBZ interfaces) (PP (IN of) (NP (DT a) (NN node) (S (VP (TO to) (VP (VB support) (NP (NN flow) (NN inheritance) (CC and) (NN contextualisation)))))))) (. .))
(S (SBAR (IN Since) (S (VP (VBZ interfaces) (SBAR (S (VP (MD can) (ADVP (RB also)) (VP (VB be) (VP (VBN linked) (PP (IN by) (NP (NP (DT the) (NN existence)) (PP (IN of) (NP (NP (DT a) (NN data) (NN channel)) (PP (IN between) (NP (PRP them))))))))))))))) (, ,) (NP (DT the) (NN match)) (VP (VBZ is) (ADVP (RB generally)) (RB not) (ADJP (ADJP (RB only) (JJ partial)) (CONJP (CC but) (RB also)) (ADJP (RB substantially) (JJ nonlocal)))) (. .))
(S (NP (DT The) (NNP KPN) (NN communication) (NN graph)) (ADVP (RB thus)) (VP (VBZ becomes) (NP (NP (DT a) (NN graph)) (PP (IN of) (NP (JJ interlocked) (NNS constraints)))) (S (VP (TO to) (VP (VB be) (VP (VBN satisfied) (PP (IN by) (NP (NP (JJ specific) (NNS instances)) (PP (IN of) (NP (DT the) (NNS variables)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT an) (NN algorithm)) (SBAR (WHNP (WDT that)) (S (VP (VBZ solves) (NP (DT the) (NNP CSP)) (PP (IN by) (NP (JJ iterative) (NN approximation))) (PP (IN while) (S (VP (VBG generating) (NP (DT an) (JJ adjunct) (NML (NNP Boolean) (NNP SAT)) (NN problem)) (PP (IN on) (NP (DT the) (NN way))))))))))) (. .))
(S (NP (PRP We)) (VP (VBD developed) (NP (NP (NP (DT a) (NN solver)) (PP (IN in) (NP (NNP OCaml)))) (CONJP (RB as) (RB well) (IN as)) (NP (NP (NNS tools)) (SBAR (WHNP (WDT that)) (S (VP (VBP analyse) (NP (NP (DT the) (NN source) (NN code)) (PP (IN of) (NP (NNP KPN) (NNS vertices)))) (S (VP (TO to) (VP (VP (VB derive) (NP (NN MDL) (NNS terms))) (CC and) (ADVP (RB automatically)) (VP (VB modify) (NP (DT the) (NN code)) (PP (IN by) (S (VP (VBG propagating) (NP (NN type) (NNS definitions)) (ADVP (RB back)) (PP (IN to) (NP (DT the) (NNS vertices)))))))))) (SBAR (IN after) (S (NP (DT the) (NNP CSP)) (VP (VBZ has) (VP (VBN been) (VP (VBN solved)))))))))))) (. .))
(S (NP (NNS Techniques) (CC and) (NNS approaches)) (VP (VBP are) (VP (VBN illustrated) (PP (IN on) (NP (DT a) (NNP KPN))) (S (VP (VBG implementing) (NP (DT an) (NML (NN image) (NN processing)) (NN algorithm)) (PP (IN as) (NP (DT a) (VBG running) (NN example))))))) (. .))
