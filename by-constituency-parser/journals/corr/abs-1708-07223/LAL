(S (NP (NN Loop) (NNS invariants)) (VP (VBP play) (NP (DT a) (JJ central) (NN role)) (PP (IN in) (NP (NP (DT the) (NN verification)) (PP (IN of) (NP (JJ imperative) (NNS programs)))))) (. .))
(S (ADVP (RB However)) (, ,) (S (VP (VBG finding) (NP (DT these) (NNS invariants)))) (VP (VBZ is) (ADVP (RB often)) (NP (DT a) (ADJP (JJ difficult) (CC and) (JJ time-consuming)) (NN task)) (PP (IN for) (NP (DT the) (NN programmer)))) (. .))
(S (S (NP (PRP We)) (VP (VBP have) (ADVP (RB previously)) (VP (VBN shown) (SBAR (WHADVP (WRB how)) (S (NP (NN program) (NN transformation)) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB facilitate) (NP (NP (DT the) (NN verification)) (PP (IN of) (NP (JJ functional) (NNS programs))))))))))))))) (, ,) (CC but) (S (NP (NP (DT the) (NN verification)) (PP (IN of) (NP (JJ imperative) (NNS programs)))) (VP (VBZ is) (ADJP (RBR more) (JJ challenging)) (PP (JJ due) (TO to) (NP (DT the) (NN need) (S (VP (TO to) (VP (VB discover) (NP (DT these) (JJ loop) (NNS invariants))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP describe) (NP (NP (DT a) (NN technique)) (PP (IN for) (S (VP (ADVP (RB automatically)) (VBG discovering) (NP (JJ loop) (NNS invariants))))))) (. .))
(S (NP (PRP$ Our) (NN approach)) (VP (VP (VBZ is) (ADJP (JJ similar) (PP (TO to) (NP (DT the) (NN induction-iteration) (NN method))))) (, ,) (CC but) (VP (VBZ avoids) (NP (NP (DT the) (ADJP (RB potentially) (JJ exponential)) (NN blow-up)) (PP (IN in) (NP (NNS clauses))) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB result) (SBAR (WHADVP (WRB when)) (S (VP (VBG using) (NP (DT this) (CC and) (JJ other) (NNS methods)))))))))))) (. .))
(S (NP (PRP$ Our) (NN approach)) (VP (VBZ makes) (NP (NP (NN use)) (PP (IN of) (NP (DT the) (JJ distil-) (NN lation) (NN program) (NN transformation) (NN algorithm)))) (S (VP (TO to) (VP (VP (VB transform) (NP (NNS clauses)) (PP (IN into) (NP (NP (DT a) (JJ simplified) (NN form)) (SBAR (WHNP (WDT that)) (VP (VBZ facilitates) (NP (NP (DT the) (NN identification)) (PP (IN of) (NP (NP (NNS similarities) (CC and) (NNS differences)) (PP (IN between) (NP (PRP them))))))))))) (CC and) (ADVP (RB thus)) (VP (VB help) (S (VP (NN discover) (NP (NNS invariants))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP prove) (SBAR (IN that) (S (NP (PRP$ our) (NN technique)) (VP (NNS terminates))))) (, ,) (CC and) (VP (VB demonstrate) (NP (NP (PRP$ its) (JJ successful) (NN application)) (PP (TO to) (NP (NP (NN example) (NNS programs)) (SBAR (WHNP (WDT that)) (S (VP (VBP have) (VP (VBN proven) (S (VP (TO to) (VP (VB be) (ADJP (JJ problematic)) (S (VP (VBG using) (NP (JJ other) (NNS approaches)))))))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VP (VBP characterise) (NP (NP (DT the) (NNS situations)) (SBAR (WHADVP (WRB where)) (S (NP (PRP$ our) (NN technique)) (VP (VBZ fails) (S (VP (TO to) (VP (VB find) (NP (DT an) (NN invariant)))))))))) (, ,) (CC and) (VP (VB show) (SBAR (WHADVP (WRB how)) (S (NP (DT this)) (VP (MD can) (VP (VB be) (VP (VBN ameliorated) (PP (TO to) (NP (DT a) (JJ certain) (NN extent)))))))))) (. .))
