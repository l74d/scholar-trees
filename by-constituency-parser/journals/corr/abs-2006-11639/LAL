(S (NP (NP (DT The) (NN effectiveness)) (PP (IN of) (NP (JJ concolic) (VBG testing)))) (VP (NNS deteriorates) (SBAR (IN as) (S (NP (NP (DT the) (NN size)) (PP (IN of) (NP (NNS programs)))) (VP (NNS increases))))) (. .))
(S (NP (DT A) (JJ promising) (NN way) (RP out)) (VP (VBZ is) (S (VP (TO to) (VP (VB test) (NP (NNS programs)) (ADVP (RB modularly)) (, ,) (X (NN e.g.)) (, ,) (PP (IN on) (NP (DT a) (UCP (JJ per) (NN function) (CC or) (NN class)) (NN basis))))))) (. .))
(S (INTJ (NNP Alas)) (, ,) (NP (DT this) (NN idea)) (VP (VP (VBZ hits) (NP (DT a) (NN roadblock)) (PP (IN in) (NP (JJ modern) (NN programming) (NNS languages))) (PP (IN In) (NP (JJ modern) (NNS languages)))) (, ,) (VP (S (VP (NP (NNS components)) (VP (VBP expect) (NP (NP (NNS functions)) (, ,) (NP (NNS objects)) (, ,) (CC and) (ADVP (RB even)) (NP (NNS classes))) (PP (IN as) (NP (NNS inputs)))))))) (. .))
(S (NP (NP (DT The) (NN crux)) (PP (IN of) (NP (DT the) (NN problem)))) (VP (VBZ is) (SBAR (IN that) (S (NP (VBG existing) (JJ concolic) (VBG testing) (NNS techniques)) (VP (MD can) (RB not) (VP (ADVP (RB faithfully)) (VB capture) (NP (NP (DT the) (JJ complex) (NNS interactions)) (PP (IN between) (NP (NP (DT a) (JJ higher-order) (NN program)) (CC and) (NP (PRP$ its) (NNS inputs))))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB distill) (NP (PRP it)) (PP (IN in) (NP (NP (DT a) (JJ first-order) (NN formula)) (SBAR (WHNP (IN that)) (S (NP (DT an) (NNP SMT) (NN solver)) (VP (MD can) (VP (VB work) (PP (IN with))))))))))))))))) (. .))
(S (S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP take) (NP (NP (DT the) (JJ first) (NN step)) (PP (NNS towards) (S (VP (VBG solving) (NP (DT the) (NN problem)))))))) (: ;) (S (NP (PRP we)) (VP (VBP offer) (NP (NP (DT a) (NX (NX (NN design)) (, ,) (NX (NNS semantics)) (, ,) (CC and) (NX (NN prototype)))) (PP (IN for) (NP (NP (JJ concolic) (NN testing)) (PP (IN of) (NP (JJ higher-order) (NNS functions)))))))) (. .))
(S (S (VP (VBN Inspired) (PP (IN by) (NP (NP (NN work)) (PP (IN on) (NP (JJ higher-order) (JJ symbolic) (NN execution))))))) (, ,) (NP (PRP$ our) (NN model)) (VP (VBZ constructs) (NP (NP (NNS inputs)) (PP (IN for) (NP (JJ higher-order) (NNS functions)))) (PP (IN with) (NP (DT a) (JJ canonical) (NN shape)))) (. .))
(S (NP (DT This)) (VP (VBZ enables) (S (NP (DT the) (JJ concolic) (NN tester)) (VP (TO to) (VP (VB keep) (NP (NN track)) (PP (IN of) (SBAR (SBAR (WHNP (WHNP (WDT which) (NNS pieces)) (PP (IN of) (NP (NP (DT the) (JJ control-flow) (NN path)) (PP (IN of) (NP (DT the) (NN higher-order) (NN function)))))) (S (VP (NN depend) (PP (IN on) (NP (NP (DT the) (NN shape)) (PP (IN of) (NP (PRP$ its) (NN input)))))))) (CC and) (SBAR (WHNP (WDT which)) (S (VP (VBP do) (RB not)))))))))) (. .))
(S (NP (DT The) (JJ concolic) (NN tester)) (VP (VBZ encodes) (NP (NP (DT the) (NNS pieces)) (SBAR (WHNP (WDT that)) (S (VP (VBP do) (RB not) (VP (VB depend) (PP (IN on) (NP (NP (DT the) (NN shape)) (PP (IN of) (NP (DT the) (NN input)))))))))) (PP (IN as) (NP (DT a) (JJ first-order) (NN formula)))) (. .))
(S (ADVP (RB Subsequently)) (, ,) (S (ADJP (JJ similar) (PP (TO to) (NP (DT a) (JJ first-order) (NN concolic) (NN tester))))) (, ,) (NP (PRP it)) (VP (VBZ leverages) (NP (DT an) (NNP SMT) (NN solver)) (S (VP (TO to) (VP (VB produce) (NP (NP (DT another) (NN input)) (UCP (PP (IN with) (NP (DT the) (JJ same) (NN shape))) (CC but) (SBAR (WHNP (IN that)) (S (VP (VBZ explores) (NP (NP (DT a) (JJ different) (JJ control-flow) (NN path)) (PP (IN of) (NP (DT the) (JJ higher-order) (NN function))))))))))))) (. .))
(S (PP (IN As) (NP (DT a) (JJ separate) (NN dimension))) (, ,) (NP (DT the) (JJ concolic) (NN tester)) (VP (VP (ADVP (RB iteratively)) (VBZ explores) (NP (NP (DT the) (JJ canonical) (NNS shapes)) (PP (IN for) (NP (DT the) (NN input))))) (CC and) (, ,) (VP (S (VP (VBG investigating) (NP (NP (PDT all) (DT the) (NNS ways)) (SBAR (S (NP (DT a) (JJ higher-order) (NN function)) (VP (MD can) (VP (VB interact) (PP (IN with) (NP (PRP$ its) (NN input)))))))))) (, ,) (VBG searching) (PP (IN for) (NP (NNS bugs))))) (. .))
(S (S (VP (TO To) (VP (VB validate) (NP (PRP$ our) (NN design))))) (, ,) (NP (PRP we)) (VP (VBP prove) (SBAR (IN that) (S (SBAR (IN if) (S (NP (DT a) (NN higher-order) (NN function)) (VP (VBZ has) (NP (DT a) (NN bug))))) (, ,) (NP (PRP$ our) (JJ concolic) (NN tester)) (VP (MD will) (ADVP (RB eventually)) (VP (VB construct) (NP (NP (DT an) (NN input)) (SBAR (WHNP (WDT that)) (S (VP (VBZ triggers) (NP (DT the) (NN bug))))))))))) (. .))
(S (S (VP (VBG Using) (NP (PRP$ our) (NN design)) (PP (IN as) (NP (DT a) (NN blueprint))))) (, ,) (NP (PRP we)) (VP (VP (VBP implement) (NP (DT a) (NN prototype) (NN concolic) (NN tester))) (CC and) (VP (NN confirm) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ discovers) (NP (NP (NNS bugs)) (PP (IN in) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (JJ higher-order) (NNS programs))) (PP (IN from) (NP (DT the) (NN literature))))))))))) (. .))
