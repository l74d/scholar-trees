(S (NP (NP (DT The) (NN effectiveness)) (PP (IN of) (NP (JJ concolic) (NN testing)))) (VP (VBZ deteriorates) (PP (IN as) (NP (NP (DT the) (NN size)) (PP (IN of) (NP (NNS programs) (NNS increases)))))) (. .))
(S (NP (DT A) (JJ promising) (NN way)) (ADVP (RB out)) (VP (VBZ is) (S (VP (TO to) (VP (VB test) (NP (NNS programs)) (UCP (ADVP (RB modularly)) (, ,) (ADVP (FW e.g.)) (, ,) (PP (IN on) (NP (DT a) (NN per) (NML (NN function) (CC or) (NN class)) (NN basis)))))))) (. .))
(S (INTJ (UH Alas)) (, ,) (NP (DT this) (NN idea)) (VP (VBZ hits) (S (NP (NP (DT a) (NN roadblock)) (PP (IN in) (NP (JJ modern) (NN programming) (NNS languages)))) (PP (IN In) (NP (JJ modern) (NNS languages))) (, ,) (S (NP (NNS components)) (VP (VBP expect) (NP (NP (NP (NNS functions)) (, ,) (NP (NNS objects))) (, ,) (CC and) (RB even) (NP (NP (NNS classes)) (PP (IN as) (NP (NNS inputs))))))))) (. .))
(S (NP (NP (DT The) (NN crux)) (PP (IN of) (NP (DT the) (NN problem)))) (VP (VBZ is) (SBAR (IN that) (S (NP (VBG existing) (JJ concolic) (NN testing) (NNS techniques)) (VP (MD can) (RB not) (ADVP (RB faithfully)) (VP (VB capture) (NP (NP (NP (DT the) (JJ complex) (NNS interactions)) (PP (IN between) (NP (DT a) (NML (JJR higher) (HYPH -) (NN order)) (NN program)))) (CC and) (NP (NP (PRP$ its) (NNS inputs)) (PP (IN in) (NP (NN order))))) (S (VP (TO to) (VP (VB distill) (NP (PRP it)) (PP (IN in) (NP (NP (DT a) (NML (JJ first) (HYPH -) (NN order)) (NN formula)) (SBAR (WHNP (WDT that)) (S (NP (DT an) (NN SMT) (NN solver)) (VP (MD can) (VP (VB work) (PP (IN with)))))))))))))))) (. .))
(S (S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP take) (NP (DT the) (JJ first) (NN step)) (PP (IN towards) (S (VP (VBG solving) (NP (DT the) (NN problem))))))) (: ;) (S (NP (PRP we)) (VP (VBP offer) (NP (NP (DT a) (NN design)) (, ,) (NP (NNS semantics)) (, ,) (CC and) (NP (NP (NN prototype)) (PP (IN for) (NP (NP (JJ concolic) (NN testing)) (PP (IN of) (NP (NML (JJR higher) (HYPH -) (NN order)) (NNS functions))))))))) (. .))
(S (VP (VBN Inspired) (PP (IN by) (NP (NP (NP (NN work)) (PP (IN on) (NP (NML (JJR higher) (HYPH -) (NN order)) (JJ symbolic) (NN execution)))) (, ,) (NP (NP (PRP$ our) (NN model) (NNS constructs)) (NP (NNS inputs))))) (PP (IN for) (NP (NML (JJR higher) (HYPH -) (NN order)) (NNS functions))) (PP (IN with) (NP (DT a) (JJ canonical) (NN shape)))) (. .))
(S (NP (DT This)) (VP (VBZ enables) (NP (DT the) (JJ concolic) (NN tester)) (S (VP (TO to) (VP (VB keep) (NP (NN track)) (SBAR (SBAR (WHPP (IN of) (WHNP (WDT which))) (S (NP (NP (NNS pieces)) (PP (IN of) (NP (NP (DT the) (NML (NN control) (HYPH -) (NN flow)) (NN path)) (PP (IN of) (NP (DT the) (NML (JJR higher) (HYPH -) (NN order)) (NN function)))))) (VP (VBP depend) (PP (IN on) (NP (NP (DT the) (NN shape)) (PP (IN of) (NP (PRP$ its) (NN input)))))))) (CC and) (SBAR (WHNP (WDT which)) (S (VP (VBP do) (RB not))))))))) (. .))
(S (NP (DT The) (JJ concolic) (NN tester)) (VP (VBZ encodes) (NP (NP (DT the) (NNS pieces)) (SBAR (WHNP (WDT that)) (S (VP (VBP do) (RB not) (VP (VB depend) (PP (IN on) (NP (NP (DT the) (NN shape)) (PP (IN of) (NP (NP (DT the) (NN input)) (PP (IN as) (NP (DT a) (NML (JJ first) (HYPH -) (NN order)) (NN formula))))))))))))) (. .))
(S (ADVP (RB Subsequently)) (, ,) (S (ADJP (JJ similar) (PP (IN to) (NP (DT a) (NML (JJ first) (HYPH -) (NN order)) (JJ concolic) (NN tester))))) (, ,) (NP (PRP it)) (VP (VBZ leverages) (SBAR (SBAR (S (NP (DT an) (NN SMT)) (VP (VBZ solver) (S (VP (TO to) (VP (VB produce) (NP (DT another) (NN input)) (PP (IN with) (NP (DT the) (JJ same) (NN shape))))))))) (CC but) (SBAR (IN that) (S (VP (VBZ explores) (NP (NP (DT a) (JJ different) (NML (NN control) (HYPH -) (NN flow)) (NN path)) (PP (IN of) (NP (DT the) (NML (JJR higher) (HYPH -) (NN order)) (NN function))))))))) (. .))
(S (PP (IN As) (NP (DT a) (JJ separate) (NN dimension))) (, ,) (S (NP (DT the) (JJ concolic) (NN tester)) (ADVP (RB iteratively)) (VP (VBZ explores) (NP (NP (DT the) (JJ canonical) (NNS shapes)) (PP (IN for) (NP (DT the) (NN input)))))) (CC and) (, ,) (S (S (VP (VBG investigating) (NP (NP (PDT all) (DT the) (NNS ways)) (SBAR (S (NP (DT a) (NML (JJR higher) (HYPH -) (NN order)) (NN function)) (VP (MD can) (VP (VB interact) (PP (IN with) (NP (PRP$ its) (NN input)))))))))) (, ,) (S (VP (VBG searching) (PP (IN for) (NP (NNS bugs)))))) (. .))
(S (S (VP (TO To) (VP (VB validate) (NP (PRP$ our) (NN design))))) (, ,) (NP (PRP we)) (VP (VBP prove) (SBAR (IN that) (S (SBAR (IN if) (S (NP (DT a) (NML (JJR higher) (HYPH -) (NN order)) (NN function)) (VP (VBZ has) (NP (DT a) (NN bug))))) (, ,) (NP (PRP$ our) (JJ concolic) (NN tester)) (VP (MD will) (ADVP (RB eventually)) (VP (VB construct) (NP (NP (DT an) (NN input)) (SBAR (WHNP (WDT that)) (S (VP (VBZ triggers) (NP (DT the) (NN bug))))))))))) (. .))
(S (S (VP (VBG Using) (NP (PRP$ our) (NN design)) (PP (IN as) (NP (DT a) (NN blueprint))))) (, ,) (NP (PRP we)) (VP (VP (VBP implement) (NP (DT a) (NN prototype) (JJ concolic) (NN tester))) (CC and) (VP (VB confirm) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ discovers) (NP (NP (NNS bugs)) (PP (IN in) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (NML (JJR higher) (HYPH -) (NN order)) (NNS programs)))))) (PP (IN from) (NP (DT the) (NN literature)))))))) (. .))
