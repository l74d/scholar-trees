(S (NP (PRP We)) (VP (VBP report) (PP (IN on) (NP (NP (CD four) (JJ different) (NNS approaches)) (PP (TO to) (S (VP (VBG implementing) (NP (NN hash-consing)) (PP (IN in) (NP (NNP Coq) (NNS programs))))))))) (. .))
(S (NP (DT The) (NN use) (NNS cases)) (VP (VBP include) (NP (NP (NP (NN execution)) (PP (IN inside) (NP (NNP Coq)))) (, ,) (CC or) (NP (NP (NN execution)) (PP (IN of) (NP (DT the) (JJ extracted) (NNP OCaml) (NN code)))))) (. .))
(S (NP (PRP We)) (VP (VBP explore) (NP (NP (DT the) (JJ different) (NNS trade-offs)) (PP (IN between) (NP (NP (NP (JJ faithful) (NN use)) (PP (IN of) (NP (NN pristine) (VBN extracted) (NN code)))) (, ,) (CC and) (NP (NP (NN code)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (VP (JJ fine-tuned) (S (VP (TO to) (VP (VB make) (NP (NP (NN use)) (PP (IN of) (NP (NP (NNP OCaml) (VBG programming) (NNS constructs)) (ADJP (RB not) (JJ available) (PP (IN in) (NP (NNP Coq))))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP discuss) (NP (DT the) (JJ possible) (NNS consequences)) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NNS performances) (CC and) (NNS guarantees)))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP use) (NP (NP (DT the) (VBG running) (NN example)) (PP (IN of) (NP (JJ binary) (NN decision) (NNS diagrams))))) (CC and) (ADVP (RB then)) (VP (VB demonstrate) (NP (NP (DT the) (NN generality)) (PP (IN of) (NP (PRP$ our) (NNS solutions)))) (PP (IN by) (S (VP (VBG applying) (NP (PRP them)) (PP (TO to) (NP (NP (JJ other) (NNS examples)) (PP (IN of) (NP (JJ hash-consed) (NNS data) (NNS structures)))))))))) (. .))
