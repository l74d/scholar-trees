(S (NP (NP (NP (NN Prolog) (POS 's)) (NN support)) (PP (IN for) (NP (NP (JJ dynamic) (NN programming)) (, ,) (NP (NN meta) (NN programming)) (CC and) (NP (NP (NN text) (NN processing)) (VP (VBG using) (NP (ADJP (JJ context) (JJ free)) (NNS grammars))))))) (VP (VBP make) (S (NP (DT the) (NN language)) (ADJP (RB highly) (JJ suitable) (PP (IN for) (S (VP (VP (VBG defining) (NP (NP (NN domain) (JJ specific) (NNS languages)) (PRN (-LRB- -LRB-) (NP (NNP DSL)) (-RRB- -RRB-)))) (CONJP (RB as) (RB well) (IN as)) (VP (NN analysing) (, ,) (VBG refactoring) (CC or) (VBG generating) (NP (NN expression) (NNS states)) (PP (IN in) (NP (JJ other) (PRN (-LRB- -LRB-) (VBG programming) (-RRB- -RRB-)) (NNS languages)))))))))) (. .))
(S (NP (ADJP (RB Well) (VBN known)) (NNP DSLs)) (VP (VBP are) (NP (NP (DT the) (NNP DCG) (PRN (-LRB- -LRB-) (NNP Definite) (NNP Clause) (NNP Grammar) (-RRB- -RRB-)) (NN notation)) (CC and) (NP (NP (NN constraint) (NNS languages)) (PP (JJ such) (IN as) (NP (NNP CHR)))))) (. .))
(S (NP (DT These) (NNS extensions)) (VP (VBP use) (NP (NP (NNP Prolog) (NN operator) (NNS declarations)) (CC and) (NP (DT the) (-LRB- -LCB-) (: ...) (-RRB- -RCB-) (NN notation))) (S (VP (TO to) (VP (VB realise) (NP (DT a) (JJ good) (NN syntax)))))) (. .))
(S (SBAR (WHADVP (WRB When)) (S (NP (NP (JJ external) (NNS languages)) (, ,) (PP (JJ such) (IN as) (NP (NNP HTML) (, ,) (NNP SQL) (CC or) (NNP JavaScript)))) (VP (VBP enter) (NP (DT the) (NN picture))))) (, ,) (NP (VBZ operators)) (ADVP (RB no) (RBR longer)) (VP (VB satisfy) (PP (IN for) (S (VP (VBG embedding) (NP (NP (NNS snippets)) (PP (IN of) (NP (DT these) (NNS languages)))) (PP (IN into) (NP (DT a) (NNP Prolog) (NN source) (NN file))))))) (. .))
(S (PP (IN In) (NP (NN addition))) (, ,) (NP (NNP Prolog)) (VP (VBZ has) (NP (NP (JJ poor) (NN support)) (PP (IN for) (S (VP (VBG quoting) (NP (JJ long) (NN text) (NNS fragments))))))) (. .))
(S (NP (NNP Haskell)) (VP (VBD introduced) (NP (JJ quasi)) (S (VP (NN quotationsto) (VP (VBP resolve) (NP (DT this) (NN problem)))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (`` `) (VBN ported) ('' â€º) (NP (NP (DT the) (NNP Haskell) (NN mechanism)) (PP (IN for) (NP (NN quasi) (VBG quoting)))) (PP (TO to) (NP (NNP Prolog)))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (SBAR (IN that) (S (NP (DT this)) (VP (MD can) (VP (VB be) (VP (VBN done) (ADVP (RB cleanly))))))) (CC and) (SBAR (IN that) (S (NP (JJ quasi) (VBG quoting)) (VP (MD can) (VP (VB solve) (NP (DT the) (ADJP (NN above) (VBD mentioned)) (NNS problems)))))))) (. .))
