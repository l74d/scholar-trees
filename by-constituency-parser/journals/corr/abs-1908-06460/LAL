(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (JJ new) (NN approach)) (VP (VBN called) (S (NP (NNP GR) (PRN (-LRB- -LRB-) (NP (NNP Graph) (NNP Reduction)) (-RRB- -RRB-)) (NN algorithm)))) (PP (IN for) (S (VP (VBG searching) (NP (NP (JJ loop-less) (JJ k-shortest) (NNS paths)) (PRN (-LRB- -LRB-) (NP (QP (CD 1st) (TO to) (JJ k-th)) (JJ shortest) (NNS paths)) (-RRB- -RRB-)) (PP (IN in) (NP (DT a) (NN graph))))))) (PP (VBN based) (PP (IN on) (NP (NN graph) (NN reduction)))))) (. .))
(S (VP (VB Let) (S (NP (NP (NP (DT a) (NN source) (NN vertex)) (CC and) (NP (DT a) (NN target) (NN vertex))) (PP (IN of) (NP (JJ k-shortest) (NNS paths)))) (VP (VB be) (NP (NP (VBN v_s) (CC and) (JJ v_t)) (ADVP (RB respectively)))))) (. .))
(S (ADVP (RB First)) (NP (PRP$ our) (NN approach)) (VP (VP (VBZ computes) (NP (NP (JJ shortest) (NNS paths)) (PP (TO to) (NP (DT every) (NN vertex))) (PP (IN from) (NP (NP (NN v_s) (CC and) (NN v_t)) (ADVP (RB respectively)))))) (, ,) (CC and) (VP (VB reduce) (NP (DT a) (NN graph)) (PP (TO to) (NP (NP (DT a) (NN subgraph)) (SBAR (WHNP (WDT that)) (VBZ contains) (NP (NP (DT all) (NNS vertices) (CC and) (NNS edges)) (PP (IN of) (NP (JJ loop-less) (JJ k-shortest) (NNS paths))))))) (S (VP (VBG using) (NP (DT the) (ADJP (RB already) (VBN computed)) (JJS shortest) (NNS paths))))) (, ,) (CC and) (VP (VB apply) (NP (DT an) (VBG existing) (JJ k-shortest) (NN path) (NN search) (NN algorithm)) (PP (TO to) (NP (DT the) (VBN reduced) (NN graph))))) (. .))
(S (S (NP (DT A) (NN graph)) (VP (MD can) (VP (VB be) (VP (VBN reduced) (ADVP (RB quickly)) (PP (IN after) (S (VP (VBG computing) (NP (NP (DT the) (JJS shortest) (NNS paths)) (S (VP (VBG using) (NP (PRP them)))))))))))) (, ,) (S (ADVP (RB therefore)) (NP (DT a) (ADJP (RB very) (JJ efficient)) (NN search)) (VP (MD can) (VP (VB be) (VP (VBN achieved))))) (. .))
(S (PP (IN In) (NP (NP (DT an) (NN experiment)) (VP (VBG using) (NP (NP (DT a) (NN hypercube) (NN graph)) (SBAR (WHNP (WDT which)) (S (VP (S (VP (VBZ has) (NP (CD 16384) (NNS vertices)))) (SBAR (WHADVP (WRB where)) (S (VP (NN k=128))))))))))) (, ,) (S (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NNS vertices)))) (VP (VBZ is) (VP (VBN reduced) (PP (TO to) (NP (QP (IN about) (CD 1/22))))))) (, ,) (CC and) (S (NP (NP (DT a) (NN variant)) (PP (IN of) (NP (NP (NNP Dijkstra) (NN algorithm)) (PP (IN for) (NP (JJ k-shortest) (NN path) (NN search)))))) (VP (VBD were) (VP (VBN speeded) (PRT (RP up)) (PP (IN by) (NP (QP (RB about) (CD 365)) (NNS times)))))) (. .))
(S (S (NP (PRP We)) (VP (VBD implemented) (NP (NP (DT a) (JJ fast) (JJ k-shortest) (NN path) (NN variant)) (PP (IN of) (NP (NP (JJ bidirectional) (NNP Dijkstra) (NN algorithm)) (PRN (-LRB- -LRB-) (NP (NN k-biDij)) (-RRB- -RRB-)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (NP (NP (DT the) (JJ state-of-the-art) (NN algorithm)) (CC and) (NP (DT the) (JJS fastest))) (ADVP (ADVP (RB as) (RB long)) (SBAR (IN as) (S (NP (PRP we)) (VP (VBP know))))))))))))) (, ,) (NP (NNP GR)) (VP (VBZ outperforms) (NP (NN k-biDij)) (PP (IN in) (NP (JJ dense) (JJ scale-free) (NN graphs)))) (. .))
(S (S (ADVP (RB However)) (, ,) (S (NP (JJ k-biDij)) (VP (NNS outperforms) (NP (NNP GR)) (PP (IN in) (NP (ADJP (ADJP (JJ hypercube-shaped)) (CC and) (ADJP (JJ sparse) (JJ scale-free))) (NN graphs)))))) (, ,) (CC but) (S (ADVP (RB even) (RB then)) (NP (NNP GR)) (VP (MD can) (ADVP (RB also)) (VP (VB speed) (PRT (RP up)) (NP (PRP it)) (PP (IN by) (NP (NP (QP (CD 12.3) (CC and) (CD 2.0)) (NNS times)) (ADVP (RB respectively)))) (PP (IN by) (S (VP (VBG precomputing) (NP (JJ all-pairs) (JJ shortest) (NNS paths)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP show) (SBAR (S (NP (DT the) (NN graph) (NN reduction)) (VP (MD can) (VP (VB be) (VP (VBN done) (PP (IN in) (NP (NP (NN time) (NN complexity) (NNP O)) (PRN (-LRB- -LRB-) (NP (JJ m) (NNP +) (MD n) (VB log) (RB n)) (-RRB- -RRB-)))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP introduce) (NP (PRP$ our) (NNS improvements)) (PP (TO to) (NP (VB k-biDij))) (ADVP (RB simply))) (. .))
