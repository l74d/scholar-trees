(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (JJ new) (JJ lock-free) (NAC (UCP (NN multiple-producer) (CC and) (NN multiple-consumer)) (PRN (-LRB- -LRB-) (NNP MPMC) (-RRB- -RRB-))) (NNP FIFO) (NN queue) (NN design)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADJP (ADJP (JJ scalable)) (CC and) (PRN (, ,) (PP (IN unlike) (NP (VBG existing) (JJ high-performant) (NNS queues))) (, ,)) (ADJP (RB very) (JJ memory) (NN efficient)))))))) (. .))
(S (ADVP (RB Moreover)) (, ,) (NP (DT the) (NN design)) (VP (VP (VBZ is) (ADJP (NNP ABA) (JJ safe))) (CC and) (VP (VBZ does) (RB not) (VP (VB require) (NP (NP (NP (DT any) (JJ external) (NN memory) (NNS allocators)) (CC or) (NP (JJ safe) (NN memory) (NN reclamation) (NNS techniques))) (, ,) (VP (ADVP (RB typically)) (VBN needed) (PP (IN by) (NP (JJ other) (JJ scalable) (NNS designs)))))))) (. .))
(S (PP (IN In) (NP (NN fact))) (, ,) (NP (NP (DT this) (VBZ queue)) (NP (PRP itself))) (VP (MD can) (VP (VB be) (VP (VBN leveraged) (PP (IN for) (NP (JJ object) (NN allocation) (CC and) (NN reclamation))) (, ,) (PP (IN as) (PP (IN in) (NP (NN data) (NNS pools))))))) (. .))
(S (NP (PRP We)) (VP (VBP use) (NP (NP (NNP FAA)) (PRN (-LRB- -LRB-) (NP (JJ fetch-and-add)) (-RRB- -RRB-)) (, ,) (NP (DT a) (ADJP (ADJP (JJ specialized)) (CC and) (ADJP (ADJP (RBR more) (JJ scalable)) (PP (IN than) (NP (NP (NNP CAS)) (PRN (-LRB- -LRB-) (NN compare-and-set) (-RRB- -RRB-)))))) (NN instruction)) (, ,)) (PP (IN on) (NP (NP (DT the) (ADJP (RBS most) (JJ contended)) (JJ hot) (NNS spots)) (PP (IN of) (NP (DT the) (NN algorithm)))))) (. .))
(S (ADVP (RB However)) (, ,) (PP (IN unlike) (NP (NP (JJ prior) (NNS attempts)) (PP (IN with) (NP (NNP FAA))))) (, ,) (NP (PRP$ our) (NN queue)) (VP (VBZ is) (ADJP (DT both) (JJ lock-free) (CC and) (JJ linearizable))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT a) (JJ general) (NN approach)) (, ,) (NP (NNP SCQ)) (, ,) (PP (IN for) (NP (VBN bounded) (NNS queues))))) (. .))
(S (NP (DT This) (NN approach)) (VP (MD can) (ADVP (RB easily)) (VP (VB be) (VP (VBN extended) (S (VP (TO to) (VP (VB support) (NP (NP (JJ unbounded) (NNP FIFO) (NNS queues)) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB store) (NP (NP (DT an) (JJ arbitrary) (NN number)) (PP (IN of) (NP (NNS elements))))))))))))))) (. .))
(S (NP (NNP SCQ)) (VP (VBZ is) (ADJP (ADJP (JJ portable) (PP (IN across) (NP (ADJP (RB virtually) (DT all)) (VBG existing) (NNS architectures)))) (CC and) (ADJP (JJ flexible) (RB enough) (PP (IN for) (NP (NP (DT a) (JJ wide) (NN variety)) (PP (IN of) (NP (NNS uses)))))))) (. .))
(S (NP (PRP We)) (VP (VBP measure) (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (PRP$ our) (NN algorithm))) (PP (IN on) (NP (DT the) (JJ x86-64) (CC and) (NNP PowerPC) (NNS architectures))))) (. .))
(S (NP (PRP$ Our) (NN evaluation)) (VP (VBZ validates) (SBAR (IN that) (S (S (NP (PRP$ our) (NN queue)) (VP (VBZ has) (NP (JJ exceptional) (NN memory) (NN efficiency)) (PP (VBN compared) (PP (TO to) (NP (JJ other) (NN algorithms)))))) (CC and) (S (NP (PRP$ its) (NN performance)) (VP (VBZ is) (ADVP (RB often)) (ADJP (ADJP (JJ comparable) (PP (TO to))) (, ,) (CC or) (VP (VBG exceeding) (NP (NP (IN that)) (PP (IN of)))) (NP (JJ state-of-the-art) (JJ scalable) (NN algorithms)))))))) (. .))
