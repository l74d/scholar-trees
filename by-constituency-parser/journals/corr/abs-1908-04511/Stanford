(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT a) (ADJP (NP (JJ new) (NN lock)) (HYPH -) (JJ free)) (NN multiple) (HYPH -) (NN producer)) (CC and) (NP (NP (NP (NML (NML (JJ multiple) (HYPH -) (NN consumer) (PRN (-LRB- -LRB-) (NP (NNP MPMC)) (-RRB- -RRB-))) (NNP FIFO)) (NN queue) (NN design)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADJP (ADJP (JJ scalable)) (CC and)) (, ,) (PP (IN unlike) (NP (VBG existing) (ADJP (JJ high) (HYPH -) (JJ performant)) (NNS queues))))))) (, ,) (ADJP (RB very) (ADJP (NN memory) (JJ efficient)))))) (. .))
(S (ADVP (RB Moreover)) (, ,) (NP (DT the) (NN design)) (VP (VP (VBZ is) (ADJP (NP (NN ABA)) (JJ safe))) (CC and) (VP (VBZ does) (RB not) (VP (VB require) (NP (NP (NP (DT any) (JJ external) (NN memory) (NNS allocators)) (CC or) (NP (JJ safe) (NN memory) (NN reclamation) (NNS techniques))) (, ,) (VP (ADVP (RB typically)) (VBN needed) (PP (IN by) (NP (JJ other) (JJ scalable) (NNS designs)))))))) (. .))
(S (PP (IN In) (NP (NP (NN fact)) (, ,) (NP (DT this) (NN queue)))) (NP (PRP itself)) (VP (MD can) (VP (VB be) (ADJP (VBN leveraged) (PP (PP (IN for) (NP (NN object) (NN allocation) (CC and) (NN reclamation))) (, ,) (CONJP (IN as)) (PP (IN in) (NP (NNS data) (NNS pools))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP use) (NP (NP (NP (NNP FAA)) (PRN (-LRB- -LRB-) (S (VP (VB fetch) (HYPH -) (CC and) (HYPH -) (VB add))) (-RRB- -RRB-))) (, ,) (ADJP (DT a) (ADJP (JJ specialized)) (CC and) (ADJP (RBR more) (JJ scalable)))) (PP (IN than) (NP (NN CAS))) (PRN (-LRB- -LRB-) (VP (VB compare) (HYPH -) (CC and) (HYPH -) (NP-TMP (NN set))) (-RRB- -RRB-))) (NP (NP (NN instruction)) (, ,) (PP (IN on) (NP (NP (DT the) (RBS most)) (VP (VBN contended) (NP (NP (JJ hot) (NNS spots)) (PP (IN of) (NP (DT the) (NN algorithm))))))))) (. .))
(S (ADVP (RB However)) (, ,) (PP (IN unlike) (NP (NP (JJ prior) (NNS attempts)) (PP (IN with) (NP (NNP FAA))))) (, ,) (NP (PRP$ our) (NN queue)) (VP (VBZ is) (ADJP (ADJP (NP (DT both) (NN lock)) (HYPH -) (JJ free)) (CC and) (ADJP (JJ linearizable)))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (NP (DT a) (JJ general) (NN approach)) (, ,) (NP (NNP SCQ)) (, ,)) (PP (IN for) (NP (VBN bounded) (NNS queues))))) (. .))
(S (NP (DT This) (NN approach)) (VP (MD can) (ADVP (RB easily)) (VP (VB be) (VP (VBN extended) (S (VP (TO to) (VP (VB support) (NP (NP (JJ unbounded) (NN FIFO) (NNS queues)) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB store) (NP (NP (DT an) (JJ arbitrary) (NN number)) (PP (IN of) (NP (NNS elements))))))))))))))) (. .))
(S (NP (NNP SCQ)) (VP (VBZ is) (ADJP (ADJP (JJ portable) (PP (IN across) (NP (QP (RB virtually) (DT all)) (VBG existing) (NNS architectures)))) (CC and) (ADJP (ADJP (JJ flexible) (JJ enough)) (PP (IN for) (NP (NP (DT a) (JJ wide) (NN variety)) (PP (IN of) (NP (NNS uses)))))))) (. .))
(S (NP (PRP We)) (VP (VBP measure) (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (PRP$ our) (NN algorithm)))) (PP (IN on) (NP (DT the) (NP (CD x86) (HYPH -) (CD 64)) (CC and) (NP (NN PowerPC) (NNS architectures))))) (. .))
(S (S (NP (PRP$ Our) (NN evaluation)) (VP (VBZ validates) (SBAR (IN that) (S (NP (PRP$ our) (NN queue)) (VP (VBZ has) (NP (NP (JJ exceptional) (NN memory) (NN efficiency)) (PP (VBN compared) (PP (IN to) (NP (JJ other) (NNS algorithms)))))))))) (CC and) (S (NP (PRP$ its) (NN performance)) (VP (VBZ is) (UCP (ADJP (RB often) (JJ comparable) (PP (IN to))) (, ,) (CC or) (VP (VBG exceeding) (NP (NP (DT that)) (PP (IN of) (NP (ADJP (NN state) (HYPH -) (IN of) (HYPH -) (DT the) (HYPH -) (NN art)) (ADJP (JJ scalable)) (NNS algorithms)))))))) (. .))
