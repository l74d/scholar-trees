(S (NP (PRP We)) (VP (VBP design) (NP (NP (DT a) (JJ randomised) (JJ parallel) (NN version)) (PP (IN of) (NP (NNP Adaboost)))) (PP (VBN based) (PP (IN on) (NP (NP (JJ previous) (NNS studies)) (PP (IN on) (NP (JJ parallel) (NN coordinate) (NN descent))))))) (. .))
(S (NP (DT The) (NN algorithm)) (VP (VBZ uses) (NP (DT the) (NN fact) (SBAR (IN that) (S (NP (NP (DT the) (NN logarithm)) (PP (IN of) (NP (DT the) (JJ exponential) (NN loss)))) (VP (VBZ is) (NP (NP (DT a) (NN function)) (PP (IN with) (NP (JJ coordinate-wise) (NNP Lipschitz) (JJ continuous) (NN gradient)))))))) (, ,) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB define) (NP (DT the) (NN step) (NNS lengths))))))) (. .))
(S (NP (PRP We)) (VP (VBP provide) (NP (NP (NP (DT the) (NN proof)) (PP (IN of) (NP (NN convergence))) (PP (IN for) (NP (DT this) (JJ randomised) (NNP Adaboost) (NN algorithm)))) (CC and) (NP (DT a) (JJ theoretical) (NN parallelisation) (NN speedup) (NN factor)))) (. .))
(S (NP (PRP We)) (ADVP (RB finally)) (VP (VB provide) (NP (NP (JJ numerical) (NNS examples)) (PP (IN on) (NP (NP (VBG learning) (NNS problems)) (PP (IN of) (NP (JJ various) (NNS sizes))))) (SBAR (WHNP (WDT that)) (S (VP (VBP show) (SBAR (IN that) (S (NP (DT the) (NN algorithm)) (VP (VBZ is) (ADJP (JJ competitive) (PP (IN with) (NP (JJ concurrent) (NNS approaches)))) (, ,) (PP (ADVP (RB especially)) (IN for) (NP (JJ large) (NN scale) (NNS problems))))))))))) (. .))
