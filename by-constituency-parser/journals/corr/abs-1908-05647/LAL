(S (NP (JJS Most) (JJ functional) (NNS languages)) (VP (VBP rely) (PP (IN on) (NP (DT some) (NN garbage) (NN collection))) (PP (IN for) (NP (JJ automatic) (NN memory) (NN management)))) (. .))
(S (NP (PRP They)) (ADVP (RB usually)) (VP (VBP eschew) (NP (NN reference) (NN counting)) (PP (IN in) (NP (NP (NN favor)) (PP (IN of) (NP (NP (DT a) (JJ tracing) (NN garbage) (NN collector)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (NP (JJR less) (VBG bookkeeping) (NN overhead)) (PP (IN at) (NP (NN runtime))))))))))) (. .))
(S (PP (IN On) (NP (DT the) (JJ other) (NN hand))) (, ,) (S (VP (VBG having) (NP (NP (DT an) (JJ exact) (NN reference) (NN count)) (PP (IN of) (NP (DT each) (NN value)))))) (VP (MD can) (VP (VB enable) (NP (NP (NNS optimizations)) (, ,) (PP (JJ such) (IN as) (NP (JJ destructive) (NNS updates)))))) (. .))
(S (NP (PRP We)) (VP (VBP explore) (NP (DT these) (NN optimization) (NNS opportunities)) (PP (IN in) (NP (NP (DT the) (NN context)) (PP (IN of) (NP (DT an) (NN eager) (, ,) (ADJP (RB purely) (JJ functional)) (NN programming) (NN language)))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT a) (JJ new) (NN mechanism)) (PP (IN for) (S (VP (ADVP (RB efficiently)) (VBG reclaiming) (NP (NP (NN memory)) (VP (VBN used) (PP (IN by) (NP (JJ nonshared) (NNS values))))) (, ,) (S (VP (VBG reducing) (NP (NP (NN stress)) (PP (IN on) (NP (DT the) (JJ global) (NN memory) (NN allocator))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP describe) (NP (NP (NP (DT an) (NN approach)) (PP (IN for) (S (VP (VBG minimizing) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NN reference) (NNS counts) (VBZ updates)))) (S (VP (VBG using) (NP (VBN borrowed) (NNS references)))))))) (CC and) (NP (NP (DT a) (JJ heuristic)) (PP (IN for) (S (ADVP (RB automatically)) (VP (VBG inferring) (NP (JJ borrow) (NNS annotations)))))))) (. .))
(S (NP (PRP We)) (VP (VBD implemented) (NP (PDT all) (DT these) (NNS techniques)) (PP (IN in) (NP (NP (DT a) (JJ new) (NN compiler)) (PP (IN for) (NP (NP (DT an) (ADJP (ADJP (NN eager)) (CC and) (ADJP (RB purely) (JJ functional))) (NN programming) (NN language)) (PP (IN with) (NP (NP (NN support)) (PP (IN for) (NP (NN multi-threading)))))))))) (. .))
(S (NP (PRP$ Our) (JJ preliminary) (JJ experimental) (NNS results)) (VP (VB demonstrate) (SBAR (S (NP (PRP$ our) (NN approach)) (VP (VP (VBZ is) (ADJP (JJ competitive))) (CC and) (VP (ADVP (RB often)) (VBZ outperforms) (NP (JJ state-of-the-art) (NNS compilers))))))) (. .))
