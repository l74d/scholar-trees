(SBARQ (WHADVP (WRB How)) (SQ (VBZ does) (NP (CD one)) (VP (NN verify) (SBAR (IN that) (S (NP (NP (DT the) (NN output)) (PP (IN of) (NP (DT a) (JJ complicated) (NN program)))) (VP (VBZ is) (ADJP (JJ correct))))))) (. ?))
(S (S (NP (CD One)) (VP (MD can) (VP (ADVP (RB formally)) (VB prove) (SBAR (IN that) (S (NP (DT the) (NN program)) (VP (VBZ is) (ADJP (JJ correct)))))))) (, ,) (CC but) (S (NP (DT this)) (VP (MD may) (VP (VB be) (PP (IN beyond) (NP (NP (DT the) (NN power)) (PP (IN of) (NP (VBG existing) (NNS methods)))))))) (. .))
(S (ADVP (RB Alternatively)) (NP (CD one)) (VP (MD can) (VP (VB check) (SBAR (IN that) (S (NP (NP (DT the) (NN output)) (VP (VBD produced) (PP (IN for) (NP (DT a) (JJ particular) (NN input))))) (VP (VBZ satisfies) (NP (DT the) (JJ desired) (JJ input-output) (NN relation))))) (, ,) (PP (IN by) (S (VP (VBG running) (NP (DT a) (NN checker)) (PP (IN on) (NP (DT the) (JJ input-output) (NN pair)))))))) (. .))
(S (ADVP (RB Then)) (NP (CD one)) (ADVP (RB only)) (VP (VBZ needs) (S (VP (TO to) (VP (VB prove) (NP (NP (DT the) (NN correctness)) (PP (IN of) (NP (DT the) (NN checker)))))))) (. .))
(S (CC But) (PP (IN for) (NP (DT some) (NNS problems))) (NP (RB even) (PDT such) (DT a) (NN checker)) (VP (MD may) (VP (VB be) (ADJP (RB too) (VBN complicated) (SBAR (S (VP (TO to) (VP (ADVP (RB formally)) (VB verify)))))))) (. .))
(S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (JJ third) (NN alternative)) (: :) (S (VP (NN augment) (NP (DT the) (JJ original) (NN program)) (S (VP (TO to) (VP (VB produce) (NP (CONJP (RB not) (RB only)) (NP (DT an) (NN output)) (CONJP (CC but) (RB also)) (NP (NP (DT a) (NN correctness) (NN certificate)) (, ,) (PP (IN with) (NP (DT the) (NN property) (SBAR (IN that) (S (NP (NP (DT a) (ADJP (RB very) (JJ simple)) (NN program)) (PRN (-LRB- -LRB-) (SBAR (WHNP (WP$ whose) (NN correctness)) (S (VP (VBZ is) (ADJP (JJ easy) (S (VP (TO to) (VP (VB prove)))))))) (-RRB- -RRB-))) (VP (MD can) (VP (VB use) (NP (DT the) (NN certificate)) (S (VP (TO to) (VP (VB verify) (SBAR (IN that) (S (NP (DT the) (JJ input-output) (NN pair)) (VP (VBZ satisfies) (NP (DT the) (JJ desired) (JJ input-output) (NN relation))))))))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP consider) (NP (NP (DT the) (VBG following) (JJ important) (NN instance)) (PP (IN of) (NP (NP (DT this) (JJ general) (NN question)) (: :) (SBARQ (WHADVP (NN How)) (SQ (VBZ does) (NP (CD one)) (VP (NN verify) (SBAR (IN that) (S (NP (NP (DT the) (NN dominator) (NN tree)) (PP (IN of) (NP (DT a) (JJ flow) (NN graph)))) (VP (VBZ is) (ADJP (JJ correct))))))) (. ?)))))))
(S (S (NP (NP (VBG Existing) (RB fast) (NN algorithms)) (PP (IN for) (S (VP (VBG finding) (NP (NNS dominators)))))) (VP (VBP are) (ADJP (VBN complicated)))) (, ,) (CC and) (S (S (ADVP (RB even)) (VBG verifying) (NP (NP (DT the) (NN correctness)) (PP (IN of) (NP (DT a) (NN dominator) (NN tree)))) (PP (IN in) (NP (NP (DT the) (NN absence)) (PP (IN of) (NP (JJ additional) (NN information)))))) (VP (VBZ seems) (ADJP (VBN complicated)))) (. .))
(S (NP (PRP We)) (VP (VP (VBP define) (NP (NP (DT a) (NN correctness) (NN certificate)) (PP (IN for) (NP (DT a) (NN dominator) (NN tree))))) (, ,) (VP (VB show) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB use) (NP (PRP it)) (S (VP (TO to) (VP (ADVP (RB easily)) (VB verify) (NP (NP (DT the) (NN correctness)) (PP (IN of) (NP (DT the) (NN tree)))))))))))) (, ,) (CC and) (VP (VB show) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB augment) (NP (RB fast) (JJ dominator-finding) (NNS algorithms)) (SBAR (IN so) (IN that) (S (NP (PRP they)) (VP (VBP produce) (NP (DT a) (NN correctness) (NN certificate))))))))))) (. .))
(S (S (NP (PRP We)) (ADVP (RB also)) (VP (VBP relate) (NP (DT the) (NN dominator) (NN certificate) (NN problem)) (PP (TO to) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG finding) (NP (JJ independent) (VBG spanning) (NNS trees)) (PP (IN in) (NP (DT a) (NN flow) (NN graph)))))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP develop) (NP (NP (JJ algorithms)) (SBAR (S (VP (TO to) (VP (VB find) (NP (JJ such) (NNS trees))))))))) (. .))
(S (NP (DT All) (PRP$ our) (NNS algorithms)) (VP (VBN run) (PP (IN in) (NP (JJ linear) (NN time)))) (. .))
(S (S (NP (JJ Previous) (NNS algorithms)) (VP (RB apply) (PP (ADVP (RB just)) (TO to) (NP (NP (DT the) (JJ special) (NN case)) (PP (IN of) (NP (RB only) (JJ trivial) (NNS dominators))))))) (, ,) (CC and) (S (NP (PRP they)) (VP (VBP take) (NP (ADVP (IN at) (JJS least)) (JJ quadratic) (NN time)))) (. .))
