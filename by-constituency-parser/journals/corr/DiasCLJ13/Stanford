(S (NP (PRP We)) (VP (VBP propose) (NP (CD two) (NNS algorithms)) (PP (IN to) (VP (VB enumerate) (NP (NP (DT all) (JJ chordless) (NNS cycles)) (PP (IN of) (NP (PDT such) (DT a) (NN graph))))))) (. .))
(S (PP (VBN Compared) (PP (IN to) (NP (JJ other) (JJ similar) (NNS algorithms)))) (, ,) (NP (DT the) (VBN proposed) (NNS algorithms)) (VP (VBP have) (NP (NP (DT the) (NN advantage)) (PP (IN of) (S (VP (VBG finding) (NP (DT each) (JJ chordless) (NN cycle)) (ADVP (RB only) (RB once))))))) (. .))
(S (S (VP (TO To) (VP (VB ensure) (NP (DT this))))) (, ,) (NP (PRP we)) (VP (VBD introduced) (NP (NP (DT the) (NNS concepts)) (PP (IN of) (NP (NP (NN vertex) (NN labeling)) (CC and) (NP (JJ initial) (JJ valid) (NN vertex) (NN triplet)))))) (. .))
(S (S (VP (TO To) (VP (VB guarantee) (SBAR (IN that) (S (NP (NP (DT the) (NN expansion)) (PP (IN of) (NP (DT a) (VBN given) (JJ chordless) (NN path)))) (VP (MD will) (ADVP (RB always)) (VP (VB lead) (PP (IN to) (NP (DT a) (JJ chordless) (NN cycle)))))))))) (, ,) (NP (PRP we)) (VP (VBP use) (NP (DT a) (NN breadth) (HYPH -) (JJ first) (NN search)) (PP (IN in) (NP (NP (DT a) (NN subgraph)) (VP (VBN obtained) (PP (IN by) (NP (NP (DT the) (NN elimination)) (PP (IN of) (NP (NP (JJ many)) (PP (IN of) (NP (DT the) (NNS vertices))))))) (PP (IN from) (NP (DT the) (JJ original) (NN graph))))))) (. .))
