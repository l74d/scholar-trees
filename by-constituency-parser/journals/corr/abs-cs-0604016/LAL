(S (NP (NP (NNP Algorithms)) (PP (IN for) (S (VP (ADVP (RB efficiently)) (VBG finding) (NP (JJ optimal) (JJ alphabetic) (NN decision) (NNS trees))))) (PRN (: —) (PP (JJ such) (IN as) (NP (DT the) (NNP Hu-Tucker) (NN algorithm))) (: —))) (VP (VBP are) (UCP (ADJP (RB well) (VBN established)) (CC and) (VP (ADVP (RB commonly)) (VBD used)))) (. .))
(S (ADVP (RB However)) (, ,) (NP (JJ such) (NNS algorithms)) (ADVP (RB generally)) (VP (VBP assume) (SBAR (IN that) (S (NP (NP (DT the) (NN cost)) (PP (IN per) (NP (NN decision)))) (VP (VBZ is) (ADJP (ADJP (JJ uniform)) (CC and) (RB thus) (ADJP (JJ independent) (PP (IN of) (NP (NP (DT the) (NN outcome)) (PP (IN of) (NP (DT the) (NN decision))))))))))) (. .))
(S (NP (NP (DT The) (JJ few) (NN algorithms)) (PP (IN without) (NP (DT this) (NN assumption)))) (ADVP (RB instead)) (VP (VP (VB use) (NP (CD one) (NN cost)) (SBAR (IN if) (S (NP (DT the) (NN decision) (NN outcome)) (VP (VBZ is) (`` ``) (JJR less) (PP (PP (IN than)) ('' '')))))) (CC and) (VP (NP (DT another) (NN cost)) (ADVP (RB otherwise)))) (. .))
(S (PP (IN In) (NP (NN practice))) (, ,) (NP (DT neither) (NN assumption)) (VP (VBZ is) (ADJP (JJ accurate)) (PP (IN for) (NP (NP (NN software)) (VP (VBN optimized) (PP (IN for) (NP (NP (NN today) (POS 's)) (NNS microprocessors))))))) (. .))
(S (NP (JJ Such) (NN software)) (ADVP (RB generally)) (VP (VBZ has) (NP (NP (NP (CD one) (NN cost)) (PP (IN for) (NP (DT the) (ADJP (RBR more) (JJ likely)) (NN decision) (NN outcome)))) (CC and) (NP (NP (DT a) (JJR greater) (NN cost)) (PRN (: —) (ADVP (RB often)) (ADJP (RB far) (JJR greater)) (: —)) (PP (IN for) (NP (DT the) (ADJP (RBR less) (JJ likely)) (NN decision) (NN outcome)))))) (. .))
(S (NP (NP (DT This) (NN problem)) (CC and) (NP (NP (NNS generalizations)) (NNS thereof))) (VP (VBP are) (ADVP (RB thus)) (ADJP (JJ applicable) (PP (TO to) (S (VP (S (VP (ADVP (VB hard)) (VBG coding) (NP (JJ static) (NN decision) (NN tree) (NNS instances)) (PP (IN in) (NP (NN software))))) (, ,) (INTJ (NN e.g.)) (, ,) (PP (IN for) (S (VP (VBG optimizing) (NP (NN program) (NNS bottlenecks))))))) (CC or) (PP (IN for) (S (VP (VBG compiling) (NP (NN switch) (NNS statements)))))))) (. .))
(S (S (NP (DT An) (ADJP (NNP O) (PRN (-LRB- -LRB-) (NN n^3) (-RRB- -RRB-)) (NN -time)) (ADJP (NNP O) (PRN (-LRB- -LRB-) (NN n^2) (-RRB- -RRB-)) (NN -space)) (JJ dynamic) (NN programming) (NN algorithm)) (VP (MD can) (VP (VB solve) (NP (DT this) (JJ optimal) (JJ binary) (NN decision) (NN tree) (NN problem))))) (, ,) (CC and) (S (NP (DT this) (NN approach)) (VP (VBZ has) (NP (NP (JJ many) (NNS generalizations)) (SBAR (WHNP (WDT that)) (S (VP (VBP optimize) (PP (IN for) (NP (NP (DT the) (NN behavior)) (PP (IN of) (NP (NP (NNS processors)) (PP (IN with) (NP (NP (JJ predictive) (NN branch) (NNS capabilities)) (, ,) (ADJP (DT both) (JJ static) (CC and) (JJ dynamic)))))))))))))) (. .))
(S (NP (NP (NNS Solutions)) (PP (TO to) (NP (DT this) (NN formulation)))) (VP (VBP are) (ADVP (RB often)) (ADJP (RBR faster)) (PP (IN in) (NP (NN practice))) (PP (IN than) (NP (NP (`` ``) (JJ optimal) ('' '') (NN decision) (NNS trees)) (SBAR (IN as) (S (VP (VBN formulated) (PP (IN in) (NP (DT the) (NN literature))))))))) (. .))
(S (NP (NNP Different) (NN search) (NN paradigms)) (VP (MD can) (ADVP (RB sometimes)) (VP (VB yield) (NP (ADJP (RB even) (JJR better)) (NN performance)))) (. .))
