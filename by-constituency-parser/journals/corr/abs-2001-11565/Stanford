(S (NP (NP (DT The) (ADJP (RB ever) (VBG increasing)) (NN demand)) (PP (IN for) (NP (VBG computing) (NNS resources)))) (VP (VBZ has) (VP (VBN led) (PP (IN to) (NP (NP (DT the) (NN creation)) (PP (IN of) (NP (NN hyperscale) (NNS datacentres))))) (PP (IN with) (NP (NP (QP (NNS tens) (IN of) (NNS thousands))) (PP (IN of) (NP (NNS servers))))))) (. .))
(S (SBAR (IN As) (S (NP (NN demand)) (VP (VBZ continues) (S (VP (TO to) (VP (VB rise))))))) (, ,) (NP (JJ new) (NNS technologies)) (VP (MD must) (VP (VB be) (VP (VBN incorporated) (S (VP (TO to) (VP (VB ensure) (SBAR (S (NP (NML (JJ high) (NN quality)) (NNS services)) (VP (MD can) (VP (VB be) (VP (VBN provided) (PP (IN without) (NP (NP (DT the) (JJ damaging) (JJ environmental) (NN impact)) (PP (IN of) (NP (NML (JJ high) (NN energy)) (NN consumption)))))))))))))))) (. .))
(S (NP (NP (NNP Virtualisation) (NN technology)) (PP (JJ such) (IN as) (NP (NN network) (NN function) (NN virtualisation) (PRN (-LRB- -LRB-) (NP (NN NFV)) (-RRB- -RRB-))))) (VP (VBZ allows) (PP (IN for) (NP (NP (DT the) (NN creation)) (PP (IN of) (NP (NNS services))))) (PP (IN by) (NP (NP (VBG connecting) (NN component) (NNS parts)) (VP (VBN known) (PP (IN as) (NP (JJ virtual) (NN network) (NNS functions))) (PRN (-LRB- -LRB-) (NP (NNS VNFs)) (-RRB- -RRB-)))))) (. .))
(S (NP (NNS VNFs) (NN cam)) (VP (VB be) (VP (VBN used) (S (VP (TO to) (ADVP (RB maximally)) (VP (VB utilise) (NP (JJ available) (NN datacentre) (NNS resources)) (PP (IN by) (S (VP (VBG optimising) (NP (NP (DT the) (NN placement) (CC and) (NNS routes)) (PP (IN of) (NP (NNS VNFs)))))))))) (, ,) (S (VP (TO to) (VP (VB maintain) (NP (NP (DT a) (JJ high) (NN quality)) (PP (IN of) (NP (NN service)))) (PP (IN whilst) (S (VP (VBG minimising) (NP (NN energy) (NNS costs)))))))))) (. .))
(S (NP (NP (JJ Current) (NN research)) (PP (IN on) (NP (DT this) (NN problem)))) (VP (VBZ has) (VP (VP (VBN focussed) (PP (IN on) (S (VP (VBG placing) (NP (NNS VNFs)))))) (CC and) (VP (VBN considered) (NP (NN routing)) (PP (IN as) (NP (DT a) (JJ secondary) (NN concern)))))) (. .))
(S (PP (IN In) (NP (DT this) (NN work))) (NP (PRP we)) (VP (VBP argue) (SBAR (IN that) (S (NP (DT the) (ADJP (NP (NP (JJ opposite) (NN approach)) (, ,) (NP (DT a) (NN routing))) (HYPH -) (VBN led)) (NN approach)) (VP (VBZ is) (ADJP (JJ preferable)))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT a) (ADJP (NP (JJ novel) (NN routing)) (HYPH -) (VBN led)) (NN algorithm)) (CC and) (NP (NML (S (VP (VP (VB analyse) (NP (NP (DT each)) (PP (IN of) (NP (DT the) (NN component) (NNS parts)))) (PP (IN over) (NP (NP (DT a) (NN range)) (PP (IN of) (NP (JJ different) (NNS topologies))))) (PP (IN on) (NP (NP (NNS problems)) (PP (IN with) (NP (QP (RB up) (IN to) (CD 16000)) (NNS variables)))))) (CC and) (VP (VB compare) (NP (PRP$ its) (NN performance)) (PP (IN against) (NP (NP (DT a) (JJ traditional) (NN placement)) (VP (VBN based)))))))) (NN algorithm)))) (. .))
(S (NP (JJ Empirical) (NNS results)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (ADJP (NN routing) (HYPH -) (VBN led)) (NN algorithm)) (VP (MD can) (VP (VB produce) (UCP (ADJP (RB significantly) (JJR better)) (, ,) (NP (ADVP (RBR faster)) (NP (NNS solutions)) (PP (IN to) (NP (NP (JJ large) (NN problem) (NNS instances)) (PP (IN on) (NP (NP (DT a) (NN range)) (PP (IN of) (NP (NN datacentre) (NNS topologies)))))))))))))) (. .))
