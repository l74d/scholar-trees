(S (NP (DT The) (NNP Maximum) (NNP Common) (NNP Subgraph)) (VP (VBZ is) (NP (NP (DT a) (ADJP (RB computationally) (VBG challenging)) (NN problem)) (PP (IN with) (NP (JJ countless) (JJ practical) (NNS applications))))) (. .))
(S (SBAR (RB Even) (IN if) (S (NP (PRP it)) (VP (VBZ has) (VP (VBN been) (ADVP (RB long)) (VP (JJ proven) (S (ADJP (NNP NP-hard)))))))) (, ,) (NP (PRP$ its) (NN importance)) (ADVP (RB still)) (VP (VBZ motivates) (S (VP (VBG searching) (PP (IN for) (NP (JJ exact) (NNS solutions)))))) (. .))
(S (NP (DT This) (NN work)) (VP (VBZ starts) (PP (IN by) (S (VP (VBG discussing) (NP (DT the) (NN possibility) (S (VP (TO to) (VP (VB extend) (NP (NP (DT an) (VBG existing) (, ,) (ADJP (RB very) (JJ effective)) (JJ branch-and-bound) (NN procedure)) (PP (IN on) (NP (JJ parallel) (UCP (NN multi-core) (CC and) (NN many-core)) (NNS architectures)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP analyze) (NP (NP (DT a) (JJ parallel) (JJ multi-core) (NN implementation)) (SBAR (WHNP (IN that)) (S (VP (VBZ exploits) (NP (NP (DT a) (JJ divide-and-conquer) (NN approach)) (VP (VBN based) (PP (IN on) (NP (DT a) (NN thread-pool)))) (, ,) (SBAR (SBAR (WHNP (WDT which)) (S (VP (VBZ does) (RB not) (VP (VB deteriorate) (NP (DT the) (JJ original) (JJ algorithmic) (NN efficiency)))))) (CC and) (S (NP (PRP it)) (VP (VBZ is) (RB not) (ADJP (JJ memory) (NN bound))))))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP extend) (NP (DT the) (NN algorithm)) (PP (TO to) (NP (NP (VB parallel) (JJ many-core) (NNP GPU) (VBZ architectures)) (VP (VBG adopting) (NP (DT the) (NNP CUDA) (NN programming) (NN framework))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB handle) (NP (NP (DT the) (RB heavily) (NN workload-unbalance)) (CC and) (NP (DT the) (JJ massive) (NN data) (NN dependency))))))))) (. .))
(S (ADVP (RB Then)) (, ,) (NP (PRP we)) (VP (VBP suggest) (NP (NP (JJ new) (NNS heuristics)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBP reorder) (NP (DT the) (NN adjacency) (NN matrix))) (, ,) (VP (NN deal) (PP (IN with) (`` ``) (NP (NNS dead-ends)) ('' ''))) (CC and) (VP (VB randomize) (NP (DT the) (NN search)) (PP (IN with) (NP (JJ automatic) (NNS restarts)))) (, ,) (S (VP (VBG achieving) (NP (NP (JJ significant) (NNS improvements)) (PP (IN on) (NP (JJ specific) (NNS cases))))))))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (NP (DT a) (NN portfolio) (NN approach)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ integrates) (NP (PDT all) (DT the) (JJ different) (JJ local) (NN search) (NN algorithms)) (PP (IN as) (NP (NN component) (NNS tools)))))))) (. .))
(S (NP (JJ Such) (NN portfolio)) (, ,) (PP (RB rather) (IN than) (S (VP (VBG choosing) (NP (NP (DT the) (JJS best) (NN tool)) (PP (IN for) (NP (DT a) (VBN given) (NN instance)))) (ADVP (JJ up-front))))) (, ,) (VP (VBZ takes) (NP (DT the) (NN decision)) (ADVP (NN on-line))) (. .))
(S (NP (DT The) (VBN proposed) (NN approach)) (VP (VP (ADVP (RB drastically)) (VBZ limits) (NP (NN memory) (NN bandwidth) (NNS constraints))) (CC and) (VP (NNS avoids) (NP (JJ other) (JJ typical) (NN portfolio) (NNS fragilities)) (SBAR (IN as) (S (NP (NNP CPU) (CC and) (NNP GPU) (NNS versions)) (ADVP (RB often)) (VP (VP (VBP show) (NP (DT a) (JJ complementary) (NN efficiency))) (CC and) (VP (VB run) (PP (IN on) (NP (JJ separated) (NNS platforms))))))))) (. .))
(S (NP (JJ Experimental) (NNS results)) (VP (VP (VB support) (NP (DT the) (NNS claims))) (CC and) (VP (VB motivate) (NP (NP (JJ further) (NN research)) (SBAR (S (VP (TO to) (VP (ADVP (JJR better)) (VB exploit) (NP (NNP GPUs)) (PP (IN in) (NP (JJ embedded) (ADJP (JJ task-intensive) (, ,) (CC and) (ADJP (JJ multi-engine) (NN parallel))) (NNS applications)))))))))) (. .))
