(S (SBAR (WHADVP (WRB When)) (S (VP (VBG programming) (NP (NN network) (NNS functions))))) (, ,) (NP (NP (NNS changes)) (PP (IN within) (NP (DT a) (NN packet)))) (VP (VBP tend) (S (VP (TO to) (VP (VB have) (NP (NP (NNS consequences)) (NFP ---) (NP (NP (NN side) (NNS effects)) (SBAR (WHNP (WDT which)) (S (VP (MD must) (VP (VB be) (VP (VBN accounted) (PP (IN for) (PP (IN by) (NP (NP (NP (NN network) (NNS programmers) (CC or) (NNS administrators)) (PP (IN via) (NP (JJ arbitrary) (NN logic)))) (CC and) (NP (NP (DT an) (JJ innate) (NN understanding)) (PP (IN of) (NP (NNS dependencies)))))))))))))))))) (. .))
(S (NP (NP (NNS Examples)) (PP (IN of) (NP (DT this)))) (VP (VBP include) (S (VP (VP (VBG updating) (NP (NNS checksums)) (SBAR (WHADVP (WRB when)) (S (NP (NP (DT a) (NN packet) (POS 's)) (NNS contents)) (VP (VBZ has) (VP (VBN been) (VP (VBN modified))))))) (CC or) (VP (VBG adjusting) (NP (NP (DT a) (NN payload) (NN length) (NN field)) (PP (IN of) (NP (DT a) (NN IPv6) (NN header)))) (SBAR (IN if) (S (NP (DT another) (NN header)) (VP (VBZ is) (VP (VBN added) (CC or) (VBN updated) (PP (IN within) (NP (DT a) (NN packet))))))))))) (. .))
(S (SBAR (IN While) (S (NP (NN static) (HYPH -) (VBG typing)) (VP (VBZ captures) (NP (NP (NN interface) (NNS specifications)) (CC and) (SBAR (WHADVP (WRB how)) (S (NP (NN packet) (NNS contents)) (VP (MD should) (VP (VB behave))))))))) (, ,) (NP (PRP it)) (VP (VBZ does) (RB not) (VP (VB enforce) (NP (JJ precise) (NNS invariants)) (PP (IN around) (NP (NP (NN runtime) (NNS dependencies)) (PP (IN like) (NP (DT the) (NNS examples))))) (ADVP (RB above)))) (. .))
(S (ADVP (RB Instead)) (, ,) (PP (IN during) (NP (NP (DT the) (NN design) (NN phase)) (PP (IN of) (NP (NN network) (NNS functions))))) (, ,) (NP (NNS programmers)) (VP (MD should) (VP (VB be) (VP (VBN given) (NP (DT an) (JJR easier) (NN way) (S (VP (TO to) (VP (VB specify) (NP (NNS checks)))))) (PP (IN up) (NP (NN front))) (, ,) (NP (NP (DT all)) (PP (IN without) (S (VP (VBG having) (S (VP (TO to) (VP (VP (VB account) (PP (IN for))) (CC and) (VP (VB keep) (NP (NP (NN track)) (PP (IN of) (NP (DT these) (NNS consequences)))) (PP (IN at) (NP (NP (DT each)) (CC and) (NP (DT every) (NN step)))) (PP (IN during) (NP (DT the) (NN development) (NN cycle)))))))))))))) (. .))
(S (PP (IN In) (S (VP (VBG keeping) (PP (IN with) (NP (DT this) (NN view)))))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (NP (DT a) (JJ unique) (NN approach)) (PP (IN for) (S (VP (VBG adding) (CC and) (VBG generating) (NP (DT both) (NN static) (NNS checks)))))) (CC and) (NP (NP (JJ dynamic) (NNS contracts)) (PP (IN for) (S (VP (VBG specifying) (CC and) (VBG checking) (NP (NN packet) (NN processing) (NNS operations)))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP develop) (NP (PRP$ our) (NN technique)) (PP (IN within) (NP (NP (DT an) (VBG existing) (NN framework)) (VP (VBN called) (NP (NNP NetBricks)))))) (CC and) (VP (VBP demonstrate) (SBAR (WHADVP (WRB how)) (S (NP (PRP$ our) (NN approach)) (VP (VBZ simplifies) (CC and) (VBZ checks) (NP (NP (ADJP (JJ common) (JJ dependent)) (NN packet)) (CC and) (NP (NML (NN header) (NN processing)) (NN logic))) (SBAR (WHNP (WDT that)) (S (NP (JJ other) (NNS systems)) (VP (VBP take) (SBAR (IN for) (S (VP (VBN granted))))))) (, ,) (PP (ADVP (DT all)) (IN without) (S (VP (VBG adding) (NP (JJ much) (NN overhead)) (PP (IN during) (NP (NN development))))))))))) (. .))
