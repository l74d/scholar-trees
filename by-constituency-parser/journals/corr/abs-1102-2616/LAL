(S (PP (IN In) (NP (NP (NN case)) (PP (IN of) (NP (JJ multiple) (JJ node) (NNS failures))))) (NP (NN performance)) (VP (VBZ becomes) (ADJP (RB very) (JJ low)) (SBAR (IN as) (S (VP (NN compare) (PP (TO to) (NP (JJ single) (JJ node) (NN failure))))))) (. .))
(S (NP (NP (NNS Failures)) (PP (IN of) (NP (NP (NNS nodes)) (PP (IN in) (NP (NN cluster) (NN computing)))))) (VP (MD can) (VP (VB be) (VP (VBN tolerated) (PP (IN by) (NP (JJ multiple) (NN fault) (NN tolerant) (NN computing)))))) (. .))
(S (NP (VBG Existing) (NN recovery) (NNS schemes)) (VP (VBP are) (ADJP (JJ efficient)) (PP (PP (IN for) (NP (JJ single) (NN fault))) (CC but) (RB not) (PP (IN with) (NP (JJ multiple) (NNS faults))))) (. .))
(NP (NP (NP (NNP Recovery) (NN scheme)) (VP (VBN proposed) (PP (IN in) (NP (DT this) (NN paper))))) (VP (VBG having) (NP (NP (CD two) (NNS phases)) (: ;) (NP (NP (RB sequentially) (NN phase)) (, ,) (NP (JJ concurrent) (NN phase))))) (. .))
(S (PP (IN In) (NP (RB sequentially) (NN phase))) (, ,) (NP (NP (NNS loads)) (PP (IN of) (NP (DT all) (VBG working) (NNS nodes)))) (VP (VBP are) (VP (ADVP (JJ uniformly) (CC and) (RB evenly)) (VBN distributed) (PP (IN by) (NP (JJ proposed) (ADJP (JJ dynamic) (NN rank) (VBN based)) (CC and) (ADJP (JJ load) (NN distribution)) (NN algorithm))))) (. .))
(S (PP (IN In) (NP (JJ concurrent) (NN phase))) (, ,) (NP (NP (NP (NNS loads)) (PP (IN of) (NP (DT all) (NN failure) (VBZ nodes)))) (CONJP (RB as) (RB well) (IN as)) (NP (JJ new) (NN job) (NN arrival))) (VP (VBP are) (VP (VBN assigned) (ADVP (RB equally)) (PP (TO to) (NP (DT all) (JJ available) (NNS nodes))) (PP (IN by) (S (VP (ADVP (RB just)) (VBG finding) (NP (NP (DT the) (ADJP (JJS least) (JJ loaded)) (NN node)) (PP (IN among) (NP (DT the) (JJ several) (NNS nodes)))) (PP (IN by) (NP (NN failure) (NNS nodes) (NN job) (NN allocation) (NN algorithm)))))))) (. .))
(S (NP (NP (ADJP (JJ Sequential) (CC and) (JJ concurrent)) (NNS executions)) (PP (IN of) (NP (JJ algorithms)))) (VP (VB improve) (NP (NP (DT the) (NN performance)) (CONJP (RB as) (RB well)) (NP (RBR better) (NN resource) (NN utilization)))) (. .))
(S (S (NP (NP (ADJP (NNP Dynamic) (NN rank) (VBN based)) (NN algorithm)) (PP (IN for) (NP (NN load) (NN redistribution)))) (VP (VBZ works) (PP (IN as) (NP (DT a) (JJ sequential) (NN restoration) (NN algorithm))))) (CC and) (S (NP (NP (NN reassignment) (NN algorithm)) (PP (IN for) (NP (NP (NN distribution)) (PP (IN of) (NP (NN failure) (NNS nodes))) (PP (TO to) (NP (ADJP (VB least) (JJ loaded)) (VBG computing) (NNS nodes)))))) (VP (NNS works) (PP (IN as) (NP (DT a) (JJ concurrent) (NN recovery) (NN reassignment) (NN algorithm))))) (. .))
(S (SBAR (IN Since) (S (NP (NN load)) (VP (VBZ is) (VP (ADVP (RB evenly) (CC and) (RB uniformly)) (VBN distributed) (PP (IN among) (NP (DT all) (JJ available) (VBG working) (NNS nodes))) (PP (IN with) (NP (NP (JJR less) (NN number)) (PP (IN of) (NP (NNS iterations))))))))) (, ,) (NP (JJ low) (JJ iterative) (NN time) (CC and) (NN communication) (NNS overheads)) (ADVP (NN hence)) (NP (NN performance)) (VP (VBZ is) (VP (VBN improved))) (. .))
(S (NP (NNP Dynamic) (JJ ranking) (NN algorithm)) (VP (VBZ is) (NP (NP (JJ low) (NN overhead) (, ,) (JJ high) (NN convergence) (NN algorithm)) (PP (IN for) (NP (NP (NN reassignment)) (PP (IN of) (NP (NNS tasks))) (ADVP (JJ uniformly)) (PP (IN among) (NP (DT all) (JJ available) (NNS nodes))))))) (. .))
(S (NP (NP (NNS Reassignments)) (PP (IN of) (NP (NN failure) (NNS nodes)))) (VP (VBP are) (VP (VBN done) (PP (IN by) (NP (DT a) (ADJP (JJ low) (JJ overhead) (JJ efficient)) (NN failure) (NN job) (NN allocation) (NN algorithm))))) (. .))
(S (NP (NP (NN Test) (NNS results)) (SBAR (S (VP (TO to) (VP (VB show) (NP (NP (NN effectiveness)) (PP (IN of) (NP (DT the) (VBN proposed) (NN scheme))))))))) (VP (VBP are) (VP (VBN presented))) (. .))
