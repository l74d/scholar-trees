(S (NP (PRP We)) (VP (VBP focus) (PP (IN on) (NP (NP (PRN (-LRB- -LRB-) (JJ partial) (-RRB- -RRB-)) (NNS functions)) (SBAR (WHNP (WDT that)) (S (VP (VBP map) (NP (JJ input) (NNS strings)) (PP (TO to) (NP (NP (DT a) (NN monoid)) (PP (JJ such) (IN as) (NP (NP (NP (DT the) (NN set)) (PP (IN of) (NP (NNS integers))) (PP (IN with) (NP (NN addition)))) (CC and) (NP (NP (DT the) (NN set)) (PP (IN of) (NP (NN output) (NNS strings))) (PP (IN with) (NP (NN concatenation)))))))))))))) (. .))
(S (NP (NP (DT The) (NN notion)) (PP (IN of) (NP (NN regularity))) (PP (IN for) (NP (JJ such) (NNS functions)))) (VP (VBZ has) (VP (VBN been) (VP (VBN defined) (S (VP (VBG using) (NP (NP (JJ two-way) (JJ finite-state) (NNS transducers)) (, ,) (NP (PRN (-LRB- -LRB-) (RB one-way) (-RRB- -RRB-)) (NN cost) (NN register) (NN automata)) (, ,) (CC and) (NP (JJ MSO-definable) (NN graph) (NNS transformations)))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP give) (NP (NP (DT an) (ADJP (NN algebraic) (CC and) (JJ machine-independent)) (NN characterization)) (PP (IN of) (NP (DT this) (NN class))) (ADJP (JJ analogous) (PP (TO to) (NP (NP (DT the) (NN definition)) (PP (IN of) (NP (JJ regular) (NNS languages))) (PP (IN by) (NP (JJ regular) (NNS expressions)))))))) (. .))
(S (SBAR (WHADVP (WRB When)) (S (NP (DT the) (NN monoid)) (VP (VBZ is) (ADJP (JJ commutative))))) (, ,) (NP (PRP we)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT every) (JJ regular) (NN function)) (VP (MD can) (VP (VB be) (VP (VBN constructed) (PP (IN from) (NP (JJ constant) (NNS functions))) (S (VP (VBG using) (NP (NP (NP (DT the) (NNS combinators)) (PP (IN of) (NP (NN choice)))) (, ,) (NP (NN split) (NN sum)) (, ,) (CC and) (NP (VBD iterated) (NN sum)) (, ,) (SBAR (WHNP (WDT that)) (S (VP (VP (VBP are) (NP (NP (NNS analogs)) (PP (IN of) (NP (NP (NN union) (, ,) (NN concatenation) (, ,) (CC and) (NNP Kleene-*)) (, ,) (ADVP (RB respectively)))))) (, ,) (CC but) (VP (NN enforce) (NP (ADJP (NN unique) (-LRB- -LRB-) (CC or) (JJ unambiguous) (-RRB- -RRB-)) (NN parsing))))))))))))))) (. .))
(S (NP (PRP$ Our) (JJ main) (NN result)) (VP (VBZ is) (PP (IN for) (NP (NP (DT the) (JJ general) (NN case)) (PP (IN of) (NP (JJ non-commutative) (NNS monoids))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (PP (IN of) (NP (NP (JJ particular) (NN interest)) (PP (IN for) (S (VP (VBG capturing) (NP (JJ regular) (JJ string-to-string) (NNS transformations)) (PP (IN for) (NP (NN document) (NN processing)))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (NP (DT the) (JJ following) (JJ additional) (NNS combinators))) (VP (NN suffice) (PP (IN for) (S (VP (VBG constructing) (NP (DT all) (JJ regular) (NNS functions))))) (: :) (NP (NP (ADJP (-LRB- -LRB-) (CD 1) (-RRB- -RRB-)) (NP (NP (DT the) (JJ left-additive) (NNS versions)) (PP (IN of) (NP (NP (NN split) (NN sum)) (CC and) (NP (JJ iterated) (NN sum)))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBP allow) (NP (NP (NNS transformations)) (PP (JJ such) (IN as) (NP (NN string) (NN reversal))))))))) (: ;) (NP (NP (PRN (-LRB- -LRB-) (CD 2) (-RRB- -RRB-)) (NN sum)) (PP (IN of) (NP (NNS functions))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (NP (NP (NNS transformations)) (PP (JJ such) (IN as) (NP (NP (NN copying)) (PP (IN of) (NP (NNS strings)))))))))) (: ;) (CC and) (NP (NP (PRN (-LRB- -LRB-) (CD 3) (-RRB- -RRB-)) (NP (NN function) (NN composition))) (, ,) (CC or) (ADVP (RB alternatively)) (, ,) (NP (NP (DT a) (JJ new) (NN concept)) (PP (IN of) (NP (NP (JJ chained) (NN sum)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (S (NP (NP (NN output) (NNS values)) (PP (IN from) (NP (JJ adjacent) (NNS blocks)))) (VP (TO to) (VP (VB mix)))))))))))))))) (. .))
