(S (S (VP (TO To) (VP (VB exploit) (NP (DT both) (NN memory) (NN locality))))) (CC and) (S (NP (NP (DT the) (JJ full) (NN performance) (NN potential)) (PP (IN of) (NP (ADJP (RB highly) (VBN tuned)) (NNS kernels)))) (, ,) (NP (NP (JJ dense) (JJ linear) (NN algebra) (NNS libraries)) (PP (JJ such) (IN as) (NP (NNP LAPACK)))) (ADVP (RB commonly)) (VP (VB implement) (NP (NNS operations)) (PP (IN as) (NP (VBN blocked) (NNS algorithms))))) (. .))
(S (ADVP (RB However)) (, ,) (S (VP (TO to) (VP (VB achieve) (NP (ADJP (ADJP (JJ next) (HYPH -) (PP (TO to))) (HYPH -) (JJ optimal)) (NN performance)) (PP (IN with) (NP (JJ such) (NNS algorithms)))))) (, ,) (NP (JJ significant) (NN tuning)) (VP (VBZ is) (VP (VBN required))) (. .))
(S (PP (IN On) (NP (DT the) (JJ other) (NN hand))) (, ,) (NP (JJ recursive) (NNS algorithms)) (VP (VBP are) (ADVP (RB virtually)) (S (VP (VP (VB tuning) (ADJP (JJ free))) (, ,) (CC and) (ADVP (RB yet)) (VP (VB attain) (NP (JJ similar) (NN performance)))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (ADVP (RB first)) (VP (VP (VB analyze)) (CC and) (VP (VB compare) (S (VP (VP (VBN blocked)) (CC and) (VP (NP (JJ recursive) (NNS algorithms)) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NN performance))))))))) (, ,) (CC and) (ADVP (RB then)) (VP (VB introduce) (NP (NNP ReLAPACK))) (, ,) (ADVP (NP (NP (DT an) (NML (JJ open) (HYPH -) (NN source)) (NN library)) (PP (IN of) (PP (NP (JJ recursive) (NNS algorithms)) (IN to)))) (RB seamlessly)) (VP (VB replace) (NP (NP (JJS most)) (PP (IN of) (NP (NP (NNP LAPACK) (POS 's)) (VBN blocked) (NNS algorithms)))))) (. .))
(S (PP (IN In) (NP (JJ many) (NNS scenarios))) (, ,) (NP (NNP ReLAPACK)) (ADVP (RB clearly)) (VP (VP (VBZ outperforms) (NP (NN reference) (NNP LAPACK))) (, ,) (CC and) (ADVP (RB even)) (VP (VBZ improves) (PP (IN upon) (NP (NP (DT the) (NN performance)) (PP (IN of) (NP (NNS optimizes) (NNS libraries))))))) (. .))
