(S (PP (IN In) (NP (NN order) (S (VP (TO to) (VP (VB find) (NP (JJ Hamiltonian) (NN cycle))))))) (, ,) (NP (NN algorithm)) (VP (MD should) (VP (VB find) (NP (NP (NNS edges)) (SBAR (WHNP (WDT that)) (S (VP (VBZ creates) (NP (DT a) (JJ Hamiltonian) (NN cycle)))))))) (. .))
(S (NP (NP (JJR Higher) (NN number)) (PP (IN of) (NP (NNS edges)))) (VP (VBZ creates) (NP (JJR more) (NNS possibilities) (S (VP (TO to) (VP (VB check) (S (VP (TO to) (VP (VB solve) (NP (DT the) (NN problem)))))))))) (. .))
(S (NP (NN Algorithm)) (VP (VBZ rests) (PP (IN on) (NP (NP (NN analysis)) (PP (IN of) (NP (NP (JJ original) (NN graph)) (CC and) (NP (JJ opposite) (NN graph)))))) (PP (IN to) (NP (PRP it)))) (. .))
(S (NP (NN Algorithm)) (VP (MD can) (VP (VB remove) (NP (JJ unnecessary) (NNS edges)) (PP (IN from) (NP (NN graph) (CC and) (NN test))) (SBAR (WHADVP (WRB when)) (S (NP (JJ Hamiltonian) (NN cycle)) (VP (MD ca) (RB n't) (VP (VB exist) (PP (IN in) (NP (NN graph))))))))) (. .))
(S (NP (NN Algorithm)) (VP (VBZ prefers) (`` ") (S (VP (TO to) (VP (VB think) (PP (IN over) (SBAR (`` ") (WHNP (WDT which)) (S (NP (NNS paths)) (VP (MD should) (VP (VB be) (VP (VBN checked) (PP (IN than) (S (VP (VB check) (NP (JJ many) (JJ wrong) (NNS paths))))))))))))))) (. .))
