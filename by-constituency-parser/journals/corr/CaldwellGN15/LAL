(S (NP (NN Constraint) (NN programming)) (VP (VBZ is) (NP (NP (DT a) (NN family)) (PP (IN of) (NP (NP (NNS techniques)) (PP (IN for) (S (VP (VBG solving) (NP (JJ combinatorial) (NNS problems))))))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN problem)) (VP (VBZ is) (VP (VBN modelled) (PP (IN as) (NP (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NN decision) (NNS variables))) (PRN (-LRB- -LRB-) (PP (ADVP (RB typically)) (IN with) (NP (JJ finite) (NNS domains))) (-RRB- -RRB-))) (CC and) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (NNS constraints)) (SBAR (WHNP (WDT that)) (S (VP (VBP express) (NP (NP (NNS relations)) (PP (IN among) (NP (DT the) (NN decision) (NNS variables)))))))))))))))))) (. .))
(S (NP (NP (CD One) (NN key) (NN concept)) (PP (IN in) (NP (NN constraint) (NN programming)))) (VP (VBZ is) (NP (NP (NN propagation)) (: :) (S (VP (NP (NN reasoning)) (PP (IN on) (NP (DT a) (NX (NX (NN constraint)) (CC or) (NX (NX (NN set)) (PP (IN of) (NP (NNS constraints))))))) (S (VP (VP (TO to) (VP (VB derive) (NP (JJ new) (NNS facts)))) (, ,) (S (ADVP (RB typically)) (VP (TO to) (VP (VB remove) (NP (NNS values)) (PP (IN from) (NP (NP (DT the) (NNS domains)) (PP (IN of) (NP (NN decision) (NNS variables)))))))))))))) (. .))
(S (NP (NP (VBN Specialised) (NN propagation) (NN algorithms)) (PRN (-LRB- -LRB-) (NP (NNS propagators)) (-RRB- -RRB-))) (VP (VBP exist) (PP (IN for) (NP (NP (JJ many) (NNS classes)) (PP (IN of) (NP (NNS constraints)))))) (. .))
(S (NP (NP (DT The) (NN concept)) (PP (IN of) (NP (NN support)))) (VP (VBZ is) (ADJP (JJ pervasive)) (PP (IN in) (NP (NP (DT the) (NN design)) (PP (IN of) (NP (NNS propagators)))))) (. .))
(S (ADVP (RB Traditionally)) (, ,) (SBAR (WHADVP (WRB when)) (S (NP (DT a) (NN domain) (NN value)) (VP (VBZ ceases) (S (VP (TO to) (VP (VB have) (NP (NN support)))))))) (, ,) (NP (PRP it)) (VP (MD may) (VP (VB be) (VP (VBN removed) (SBAR (IN because) (S (NP (PRP it)) (VP (VBZ takes) (NP (NN part)) (PP (IN in) (NP (DT no) (NNS solutions))))))))) (. .))
(S (NP (NP (NNP Arc-consistency) (NN algorithms)) (PP (JJ such) (IN as) (NP (NNP AC2001)))) (VP (VBP make) (NP (NP (NN use)) (PP (IN of) (NP (NP (NN support)) (PP (IN in) (NP (NP (DT the) (NN form)) (PP (IN of) (NP (DT a) (JJ single) (NN domain) (NN value))))))))) (. .))
(S (NP (NP (NNP GAC) (NNS algorithms)) (PP (JJ such) (IN as) (NP (NNP GAC-Schema)))) (VP (NN use) (NP (NP (DT a) (NN tuple)) (PP (IN of) (NP (NNS values)))) (S (VP (TO to) (VP (VB support) (NP (DT each) (NN literal)))))) (. .))
(S (NP (PRP We)) (VP (VBP generalize) (NP (NP (DT these) (NNS notions)) (PP (IN of) (NP (NN support)))) (PP (IN in) (NP (CD two) (NNS ways)))) (. .))
(S (ADVP (RB First)) (, ,) (NP (PRP we)) (VP (VBP allow) (S (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NNS tuples)))) (VP (TO to) (VP (VB act) (PP (IN as) (NP (NN support))))))) (. .))
(S (ADVP (JJ Second)) (, ,) (NP (DT the) (JJ supported) (NN object)) (VP (VBZ is) (VP (VBN generalized) (PP (IN from) (NP (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NNS literals)))) (PRN (-LRB- -LRB-) (NP (NNP GAC-Schema)) (-RRB- -RRB-)))) (PP (TO to) (NP (NP (DT an) (JJ entire) (NN constraint)) (CC or) (NP (NP (DT any) (NN part)) (PP (IN of) (NP (PRP it)))))))) (. .))
(S (NP (PRP We)) (VP (VBP design) (NP (NP (DT a) (NN methodology)) (PP (IN for) (S (VP (VBG developing) (NP (JJ correct) (NNS propagators)) (S (VP (VBG using) (NP (JJ generalized) (NN support))))))))) (. .))
(S (NP (DT A) (NN constraint)) (VP (VBZ is) (VP (VBN expressed) (PP (IN as) (NP (NP (DT a) (NN family)) (PP (IN of) (NP (NP (NN support) (NNS properties)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (MD may) (VP (VB be) (VP (JJ proven) (S (ADJP (NN correct))) (PP (IN against) (NP (NP (DT the) (JJ formal) (NNS semantics)) (PP (IN of) (NP (DT the) (NN constraint)))))))))))))))) (. .))
(S (S (VP (VBG Using) (NP (NNP Curry-Howard) (NN isomorphism)) (S (VP (TO to) (VP (VB interpret) (NP (JJ constructive) (NN proofs)) (PP (IN as) (NP (NNS programs)))))))) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB derive) (NP (JJ correct) (NNS propagators)) (PP (IN from) (NP (NP (DT the) (JJ constructive) (NN proofs)) (PP (IN of) (NP (DT the) (NN support) (NNS properties)))))))))) (. .))
(S (NP (DT The) (NN framework)) (VP (VBZ is) (VP (ADVP (RB carefully)) (VBN designed) (S (VP (TO to) (VP (VB allow) (S (NP (JJ efficient) (NN algorithms)) (VP (TO to) (VP (VB be) (VP (VBN produced)))))))))) (. .))
(S (NP (VBN Derived) (NN algorithms)) (VP (MD may) (VP (VB make) (NP (NP (NN use)) (PP (IN of) (NP (NP (JJ dynamic) (JJ literal) (NNS triggers)) (CC or) (NP (VBN watched) (NNS literals))))) (PP (IN for) (NP (NN efficiency))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (NP (CD two) (NN case) (NNS studies)) (PP (IN of) (S (VP (VBG deriving) (NP (JJ efficient) (NN algorithms)))))) (VP (VBP are) (VP (VBN given))) (. .))
