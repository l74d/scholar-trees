(S (NP (PRP We)) (VP (VBP report) (PP (IN on) (NP (CD three) (JJ different) (NNS approaches))) (S (VP (TO to) (VP (VB use) (NP (NP (NN hash) (HYPH -) (VBG consing)) (PP (IN in) (NP (NP (NNS programs)) (VP (VBN certified) (PP (IN with) (NP (DT the) (NNP Coq) (NN system))) (, ,) (S (VP (VBG using) (NP (JJ binary) (NN decision) (NNS diagrams)))) (PRN (-LRB- -LRB-) (NP (NN BDD)) (-RRB- -RRB-)))))) (PP (IN as) (S (VP (VBG running) (NP (NN example))))))))) (. .))
(S (NP (DT The) (NN use) (NNS cases)) (VP (VBP include) (NP (NP (NP (NN execution)) (PP (IN inside) (NP (NNP Coq)))) (, ,) (CC or) (NP (NP (NN execution)) (PP (IN of) (NP (DT the) (VBN extracted) (NN OCaml) (NN code)))))) (. .))
(S (NP (EX There)) (VP (VBP are) (NP (NP (JJ different) (NN trade) (HYPH -) (NNS offs)) (PP (IN between) (NP (NP (NP (JJ faithful) (NN use)) (PP (IN of) (NP (JJ pristine) (VBN extracted) (NN code)))) (, ,) (CC and) (NP (NP (NN code)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (ADJP (ADJP (JJ fine) (HYPH -) (VBN tuned)) (S (VP (TO to) (VP (VB make) (NP (NP (NN use)) (PP (IN of) (NP (NNP OCaml)))) (S (VP (VBG programming) (NP (NP (NNS constructs)) (ADJP (RB not) (JJ available))) (PP (IN in) (NP (NNP Coq))))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP discuss) (NP (NP (DT the) (JJ possible) (NNS consequences)) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NNS performances) (CC and) (NNS guarantees))))))) (. .))
