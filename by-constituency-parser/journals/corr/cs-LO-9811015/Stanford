(S (NP (DT An) (NN algorithm) (S (VP (TO to) (VP (VB decide) (NP (NP (DT the) (NN emptiness)) (PP (IN of) (NP (DT a) (NML (JJ regular) (NN type)) (NN expression)))) (PP (IN with) (NP (NP (NN set) (NNS operators)) (VP (VBN given) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (VBN parameterised) (NN type) (NNS definitions))))))))))) (VP (VBZ is) (VP (VBN presented))) (. .))
(S (NP (DT The) (NN algorithm)) (VP (MD can) (ADVP (RB also)) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB decide) (NP (NP (NP (DT the) (NN equivalence)) (PP (IN of) (NP (CD two) (NML (JJ regular) (NN type)) (NNS expressions)))) (CC and) (NP (NP (DT the) (NN inclusion)) (PP (IN of) (NP (CD one) (NML (JJ regular) (NN type)) (NN expression))))) (PP (IN in) (NP (DT another))))))))) (. .))
(S (NP (DT The) (NN algorithm)) (ADVP (RB strictly)) (VP (VBZ generalises) (SBAR (S (NP (NP (JJ previous) (NN work)) (PP (IN in) (NP (DT that) (NN tuple) (NN distributivity)))) (VP (VBZ is) (RB not) (VP (VP (VBN assumed)) (CC and) (VP (VBN set) (SBAR (S (NP (NNS operators)) (VP (VBP are) (VP (VBN permitted) (PP (IN in) (NP (NN type) (NNS expressions))))))))))))) (. .))
