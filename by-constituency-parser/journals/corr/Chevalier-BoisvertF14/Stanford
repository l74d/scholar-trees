(S (NP (JJ Dynamic) (NN typing)) (VP (VBZ is) (NP (NP (DT an) (JJ important) (NN feature)) (PP (IN of) (NP (JJ dynamic) (NN programming) (NNS languages))))) (. .))
(S (NP (NP (JJ Primitive) (NNS operators)) (PP (JJ such) (IN as) (NP (NP (DT those)) (PP (IN for) (S (VP (VBG performing) (SBAR (S (NP (NN arithmetic) (CC and) (NNS comparisons)) (ADVP (RB typically)) (VP (VBP operate) (PP (IN on) (NP (NP (DT a) (JJ wide) (NN variety)) (PP (IN of) (UCP (PP (IN in) (NP (VBN put) (NN value) (NNS types))) (, ,) (CC and) (SBAR (IN as) (FRAG (ADJP (JJ such))))))))))))))))) (, ,) (VP (MD must) (ADVP (RB internally)) (VP (VB implement) (NP (NP (DT some) (NN form)) (PP (IN of) (NP (NML (JJ dynamic) (NN type)) (NML (NN dispatch) (CC and) (NN type)) (NN checking)))))) (. .))
(S (S (VP (VBG Removing) (NP (JJ such) (NN type) (NNS tests)))) (VP (VBZ is) (ADJP (JJ important) (PP (IN for) (NP (DT an) (JJ efficient) (NN implementation))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP examine) (NP (NP (DT the) (NN effectiveness)) (PP (IN of) (NP (DT a) (JJ novel) (NN approach)))) (PP (IN to) (S (VP (VBG reducing) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NP (ADJP (RB dynamically) (VBN executed)) (NN type) (NNS tests)) (VP (VBN called) (NP (ADJP (NP (NN context)) (HYPH -) (VBN driven)) (NML (JJ basic) (NN block)) (NN versioning)))))))))) (. .))
(S (NP (DT This) (JJ simple) (NN technique) (NNS clones)) (VP (VP (CC and) (VP (VBZ specializes) (NP (JJ basic) (NNS blocks)) (PP (IN in) (NP (PDT such) (DT a) (NN way))))) (SBAR (IN as) (S (VP (TO to) (VP (VB allow) (NP (DT the) (NN compiler)) (S (VP (TO to) (VP (VB accumulate) (NP (NN type) (NN information)) (SBAR (IN while) (S (NP (NN machine) (NN code)) (VP (VBZ is) (VP (VBN generated) (, ,) (PP (IN without) (NP (DT a) (JJ separate) (NML (NN type) (NN analysis)) (NN pass))))))))))))))) (. .))
(S (NP (DT The) (VBN accumulated) (NN information)) (VP (VBZ allows) (NP (NP (DT the) (NN removal)) (PP (IN of) (NP (DT some) (JJ redundant) (NN type) (NNS tests)))) (, ,) (PP (ADVP (RB particularly)) (IN in) (NP (ADJP (NN performance) (HYPH -) (JJ critical)) (NNS paths)))) (. .))
(S (NP (PRP We)) (VP (VBP have) (VP (VBN implemented) (NP (NP (ADJP (NP (JJ intraprocedural) (NN context)) (HYPH -) (VBN driven)) (JJ basic) (NN block)) (VP (VBG versioning) (PP (IN in) (NP (DT a) (NML (NNP JavaScript) (NNP JIT)) (NN compiler))))))) (. .))
(S (PP (IN For) (NP (NN comparison))) (, ,) (NP (PRP we)) (VP (VBP have) (ADVP (RB also)) (VP (VBN implemented) (NP (NP (DT a) (ADJP (NP (JJ classical) (NN flow)) (HYPH -) (VBN based)) (NN type) (NN analysis)) (VP (VBG operating) (PP (IN on) (NP (DT the) (JJ same) (JJ concrete) (NNS types))))))) (. .))
(S (NP (PRP$ Our) (NNS results)) (VP (VBP show) (SBAR (IN that) (S (NP (JJ basic) (NN block) (NN versioning)) (VP (VP (VBZ performs) (NP (JJR better)) (PP (IN on) (NP (JJS most) (NNS benchmarks)))) (CC and) (VP (VBZ removes) (NP (NP (DT a) (JJ large) (NN fraction)) (PP (IN of) (NP (NN type) (NNS tests)))) (PP (IN at) (NP (NP (DT the) (NN expense)) (PP (IN of) (NP (DT a) (JJ moderate) (NN code) (NN size) (NN increase)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP believe) (SBAR (IN that) (S (NP (DT this) (NN technique)) (VP (VP (VBZ offers) (NP (NP (DT a) (JJ good) (NN tradeoff)) (PP (IN between) (NP (NN implementation) (NN complexity) (CC and) (NN performance))))) (, ,) (CC and) (VP (VBZ is) (ADJP (JJ suitable) (PP (IN for) (NP (NP (NN integration)) (PP (IN in) (NP (NML (NN production) (NN JIT)) (NNS compilers))))))))))) (. .))
