(S (NP (PRP We)) (VP (VP (VBP discuss) (NP (DT a) (NN programming) (NN language)) (PP (IN for) (NP (NP (NML (JJ real) (HYPH -) (NN time)) (JJ audio) (NN signal) (NN processing)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (VP (VBN embedded) (PP (IN in) (NP (DT the) (NML (JJ functional) (NN language)) (NNP Haskell)))))))))) (CC and) (VP (VBZ uses) (NP (DT the) (NML (JJ Low) (HYPH -) (NN Level)) (JJ Virtual) (NN Machine)) (PP (IN as) (NP (NML (RB back) (HYPH -) (NN end)))))) (. .))
(S (PP (IN With) (NP (DT that) (NN framework))) (NP (PRP we)) (VP (MD can) (VP (VB code) (PP (IN with) (NP (NP (DT the) (NML (NN comfort) (CC and) (NN type)) (NN safety)) (PP (IN of) (NP (NNP Haskell))))) (PP (IN while) (S (VP (VBG achieving) (NP (NP (JJ maximum) (NN efficiency)) (PP (IN of) (NP (NP (JJ fast) (JJ inner) (NNS loops)) (CC and) (NP (JJ full) (NN vectorisation)))))))))) (. .))
(S (NP (DT This) (NN way) (NNP Haskell)) (VP (VBZ becomes) (NP (DT a) (JJ valuable) (NN alternative)) (PP (IN to) (NP (JJ special) (NML (NN purpose) (NN signal) (NN processing)) (NNS languages)))) (. .))
