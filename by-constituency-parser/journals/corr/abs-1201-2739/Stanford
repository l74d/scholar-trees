(S (PP (VBN Given) (NP (NP (JJ positive) (NNS integers)) (NP ($ $) (CD a_1))) (, ,)) (: ...) (NP (NP (, ,) (NP (NN a_n)) (, ,) (NP (NP (NN t)) (NP ($ $))) (, ,)) (NP (DT the) (VBN fixed) (NN weight) (NN subset) (NN sum) (NN problem))) (VP (VBZ is) (S (VP (TO to) (VP (VB find) (NP (NP (DT a) (NN subset)) (PP (IN of) (NP (NP (DT the) ($ $) (CD a_i)) (NP ($ $)))) (SBAR (WHNP (WHNP (WDT that) (NN sum)) (PP (IN to) (NP ($ $) (CD t)))) (FRAG (NP ($ $))))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN subset)) (VP (VBZ has) (NP (NP (DT a) (JJ prescribed) (NN number)) (PP (IN of) (NP (NNS elements))))))))))) (. .))
(S (S (NP (PRP It)) (VP (VBZ is) (NP (NP (DT this) (NN problem)) (SBAR (WHNP (WDT that)) (S (VP (VBZ underlies) (NP (NP (DT the) (NN security)) (PP (IN of) (NP (JJ modern) (NN knapsack) (NNS cryptosystems)))))))))) (, ,) (CC and) (S (S (VP (VBG solving) (NP (DT the) (NN problem)))) (VP (VBZ results) (ADVP (RB directly)) (PP (IN in) (NP (DT a) (NN message) (NN attack))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP present) (NP (NP (JJ new) (JJ exponential) (NNS algorithms)) (SBAR (WHNP (WDT that)) (S (VP (VBP do) (RB not) (VP (VB rely) (PP (IN on) (NP (NNS lattices))))))))) (, ,) (CC and) (ADVP (RB hence)) (VP (MD will) (VP (VB be) (ADJP (JJ applicable)) (SBAR (WHADVP (WRB when)) (S (NP (NP (NN lattice) (NN basis)) (NP (NN reduction) (NNS algorithms))) (VP (VBP fail))))))) (. .))
(S (NP (DT These) (NNS algorithms)) (VP (VBP rely) (PP (IN on) (NP (NP (DT a) (NN generalization)) (PP (IN of) (NP (NP (DT the) (NN notion)) (PP (IN of) (NP (JJ splitting) (NN system))))))) (PP (VBN given) (PP (IN by) (NP (NNP Stinson))))) (. .))
(S (PP (IN In) (NP (NP (NN addition)) (PP (IN to) (S (VP (VBG using) (NP (NN space)) (ADVP (RB efficiently))))))) (, ,) (NP (DT the) (NN algorithm)) (VP (VBZ is) (ADJP (RB highly) (JJ parallelizable))) (. .))
