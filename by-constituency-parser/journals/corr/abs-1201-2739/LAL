(S (PP (VBN Given) (NP (JJ positive) (NNS integers) ($ $) (NN a_1) (, ,) (: ...) (, ,) (RB a_n) (, ,) (JJ t) ($ $))) (, ,) (NP (DT the) (JJ fixed) (NN weight) (NN subset) (NN sum) (NN problem)) (VP (VBZ is) (S (VP (TO to) (VP (VB find) (NP (NP (NP (DT a) (NN subset)) (PP (IN of) (NP (DT the) ($ $) (JJ a_i) ($ $))) (SBAR (WHNP (WDT that)) (S (VP (VBD sum) (PP (TO to) (NP ($ $) (JJ t) ($ $))))))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN subset)) (VP (VBZ has) (NP (NP (DT a) (JJ prescribed) (NN number)) (PP (IN of) (NP (NNS elements)))))))))))) (. .))
(S (S (NP (PRP It)) (VP (VBZ is) (NP (DT this) (NN problem)) (SBAR (WHNP (WDT that)) (S (VP (VBZ underlies) (NP (NP (DT the) (NN security)) (PP (IN of) (NP (JJ modern) (NN knapsack) (NN cryptosystems))))))))) (, ,) (CC and) (S (S (VP (VBG solving) (NP (DT the) (NN problem)))) (VP (NNS results) (ADVP (RB directly)) (PP (IN in) (NP (DT a) (NN message) (NN attack))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (JJ new) (JJ exponential) (NN algorithms)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBP do) (RB not) (VP (VB rely) (PP (IN on) (NP (NNS lattices))))) (, ,) (CC and) (VP (ADVP (RB hence)) (MD will) (VP (VB be) (ADJP (JJ applicable)) (SBAR (WHADVP (WRB when)) (S (NP (JJ lattice) (NN basis) (NN reduction) (IN algorithms)) (VP (NN fail))))))))))) (. .))
(S (NP (DT These) (VBP algorithms)) (VP (RB rely) (PP (IN on) (NP (NP (DT a) (NN generalization)) (PP (IN of) (NP (NP (DT the) (NN notion)) (PP (IN of) (NP (VBG splitting) (NN system))))) (VP (VBN given) (PP (IN by) (NP (NNP Stinson))))))) (. .))
(S (PP (IN In) (NP (NP (NN addition)) (PP (TO to) (S (VP (VBG using) (NP (NN space)) (ADVP (RB efficiently))))))) (, ,) (NP (DT the) (NN algorithm)) (VP (VBZ is) (ADJP (RB highly) (JJ parallelizable))) (. .))
