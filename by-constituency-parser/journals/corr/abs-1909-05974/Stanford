(S (NP (PRP We)) (VP (VBP investigate) (NP (NP (DT a) (NN learning) (NN algorithm)) (PP (IN in) (NP (NP (DT the) (NN context)) (PP (IN of) (NP (NP (JJ nominal) (NN automata)) (, ,) (NP (NP (DT an) (NN extension)) (PP (IN of) (NP (JJ classical) (NN automata))))))))) (PP (IN to) (NP (NP (NNS alphabets)) (VP (VBG featuring) (NP (NNS names)))))) (. .))
(S (S (NP (NP (DT This) (NN class)) (PP (IN of) (NP (NN automata)))) (VP (VBZ captures) (NP (JJ nominal) (JJ regular) (NNS languages)))) (: ;) (S (PP (ADVP (RB analogously)) (IN to) (NP (DT the) (JJ classical) (NN language) (NN theory))) (, ,) (NP (JJ nominal) (NN automata)) (VP (VBP have) (VP (VBN been) (VP (VBN shown) (S (VP (TO to) (VP (VB characterise) (NP (JJ nominal) (JJ regular) (NNS expressions)) (PP (IN with) (NP (NNS binders)))))))))) (. .))
(S (NP (DT These) (NNS formalisms)) (VP (VBP are) (ADJP (JJ amenable) (PP (IN to) (NP (JJ abstract) (ADJP (NP (NN modelling) (NN resource)) (HYPH -) (JJ aware)) (NNS computations))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (DT a) (NN learning) (NN algorithm)) (PP (IN on) (NP (NP (JJ nominal) (JJ regular) (NNS languages)) (PP (IN with) (NP (NNS binders)))))) (. .))
(NP (NP (PRP$ Our) (NN algorithm)) (NP (NP (NNS generalises)) (VP (NP (NP (NP (NNP Angluin) (POS 's)) (NN L)) (X (X (NFP *)) (NP (NP (NN algorithm)) (PP (IN with) (NP (NN respect)))))) (PP (IN to) (NP (NP (JJ nominal) (JJ regular) (NNS languages)) (PP (IN with) (NP (NNS binders))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP show) (NP (DT the) (NN correctness))) (CC and) (VP (VB study) (NP (NP (DT the) (JJ theoretical) (NN complexity)) (PP (IN of) (NP (PRP$ our) (NN algorithm)))))) (. .))
