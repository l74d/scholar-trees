(S (NP (PRP We)) (VP (VBP demonstrate) (SBAR (WHADVP (WRB how)) (S (NP (NP (NNS methods)) (PP (IN in) (NP (NNP Functional) (NNP Programming)))) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB implement) (NP (DT a) (NN computer) (NN algebra) (NN system))))))))))) (. .))
(S (PP (IN As) (NP (DT a) (JJ proof-of-concept))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (DT the) (JJ computational-algebra) (NN package))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (NP (NP (DT a) (NN computer) (NN algebra) (NN system)) (VP (VBD implemented) (PP (IN as) (NP (DT an) (JJ embedded) (JJ domain-specific) (NN language))) (PP (IN in) (NP (NP (NNP Haskell)) (, ,) (NP (DT a) (ADJP (RB purely) (JJ functional)) (NN programming) (NN language))))))) (. .))
(S (S (VP (VBG Utilising) (NP (NP (NP (NNS methods)) (PP (IN in) (NP (JJ functional) (NN programming)))) (CC and) (NP (NP (JJ prominent) (NNS features)) (PP (IN of) (NP (NNP Haskell))))))) (, ,) (NP (DT this) (JJ library)) (VP (NNS achieves) (NP (NN safety) (, ,) (NN composability) (, ,) (CC and) (NN correctness)) (PP (IN at) (NP (DT the) (JJ same) (NN time)))) (. .))
