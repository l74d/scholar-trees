(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP give) (NP (NP (DT a) (JJ robust) (ADJP (JJ logical) (CC and) (JJ computational)) (NN characterisation)) (PP (IN of) (NP (JJ peer-to-peer) (NN database) (NNS systems))))) (. .))
(S (NP (PRP We)) (ADVP (RB first)) (VP (VB define) (NP (NP (DT a) (ADJP (JJ pre-) (NN cise)) (JJ model-theoretic) (NNS semantics)) (PP (IN of) (NP (DT a) (NN peer-to-peer) (NN system))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (PP (IN for) (NP (JJ local) (NN inconsistency) (NN handling)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB then)) (VP (VB characterise) (NP (NP (DT the) (JJ general) (JJ computa-) (NN tional) (NNS properties)) (PP (IN for) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG answering) (NP (NNS queries)) (PP (TO to) (NP (VB such) (DT a) (JJ peer-to-) (NN peer) (NN system)))))))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP devise) (NP (NP (NP (JJ tight) (NN complexity) (NNS bounds)) (CC and) (NP (JJ distributed) (NNS procedures))) (PP (IN for) (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG answering) (NP (NNS queries)) (PP (IN in) (NP (JJ few) (JJ relevant) (JJ special) (NNS cases)))))))))) (. .))
