(S (NP (NNP Sharding)) (VP (VBZ is) (NP (DT a) (JJ promising) (NN blockchain) (NN scaling) (NN solution))) (. .))
(S (CC But) (NP (PRP it)) (ADVP (RB currently)) (VP (VBZ suffers) (PP (IN from) (NP (NP (JJ high) (NN latency)) (CC and) (NP (JJ low) (NN throughput)))) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (VBZ comes) (PP (IN to) (NP (NP (NP (JJ cross-shard) (NNS transactions)) (, ,) (ADVP (FW i.e.))) (, ,) (NP (NP (NNS transactions)) (SBAR (WHNP (WDT that)) (S (VP (VBP require) (NP (NN coordination)) (PP (IN from) (NP (JJ multiple) (NNS shards))))))))))))) (. .))
(SINV (S (NP (NP (DT The) (NN root) (NN cause)) (PP (IN of) (NP (DT these) (NNS limitations)))) (VP (VBP arise) (PP (IN from) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (DT the) (JJ classic) (NML (CD two) (HYPH -) (NN phase)))))))) (VP (VBP commit)) (NP (NP (NN protocol)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ involves) (S (VP (VBG locking) (NP (NNS assets)) (PP (IN for) (NP (NP (VBN extended) (NNS periods)) (PP (IN of) (NP (NN time))))))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ presents) (NP (NP (NP (NN Rivet)) (, ,) (NP (NP (DT a) (JJ new) (NN paradigm)) (PP (IN for) (NP (NN blockchain) (NN sharding))))) (SBAR (WHNP (WDT that)) (S (VP (VBZ achieves) (NP (NP (JJR lower) (NN latency)) (CC and) (NP (NP (JJR higher) (NN throughput)) (PP (IN for) (NP (JJ cross-shard) (NNS transactions)))))))))) (. .))
(S (S (NP (NN Rivet)) (VP (VBZ has) (NP (NP (DT a) (JJ single) (NN reference) (NN shard)) (VP (VBG running) (NP (NN consensus)))))) (, ,) (CC and) (S (NP (JJ multiple) (NN worker) (NNS shards)) (VP (VP (VBG maintaining) (NP (NN disjoint) (NNS states))) (CC and) (VP (VBG processing) (NP (NP (DT a) (NN subset)) (PP (IN of) (NP (NP (NNS transactions)) (PP (IN in) (NP (DT the) (NN system))))))))) (. .))
(S (NP (NNP Rivet)) (VP (VP (VBZ obviates) (NP (NP (DT the) (NN need)) (PP (IN for) (NP (NN consensus)))) (PP (IN within) (NP (DT each) (NN worker) (NN shard)))) (, ,) (CC and) (VP (PP (IN as) (NP (DT a) (NN result))) (, ,) (VP (VBZ tolerates) (ADVP (RBR more)) (NP (NP (NNS failures)) (PP (IN within) (NP (DT a) (NN shard))))) (CC and) (VP (VBZ lowers) (NP (NN communication) (NN overhead))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (NP (NP (DT the) (NN correctness) (CC and) (NN security)) (PP (IN of) (NP (NN Rivet))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP propose) (NP (DT a) (ADJP (RBR more) (JJ realistic)) (NN framework)) (PP (IN for) (S (VP (VBG evaluating) (NP (VBN sharded) (NNS blockchains)) (PP (IN by) (S (VP (VBG creating) (NP (DT a) (NN benchmark)) (PP (VBN based) (PP (IN on) (NP (JJ real) (NNP Ethereum) (NNS transactions))))))))))) (. .))
(S (NP (NP (DT An) (NN evaluation)) (PP (IN of) (NP (NP (PRP$ our) (NN prototype) (NN implementation)) (PP (IN of) (NP (NP (NN Rivet)) (CC and) (NP (DT the) (NN baseline)) (NML (CD two) (HYPH -) (NN phase)))) (S (VP (VB commit) (, ,) (PP (IN atop) (NP (NML (CD 50) (SYM +)) (NML (NN AWS) (NN EC2)) (NNS instances))) (, ,) (S (VP (VBG using) (NP (PRP$ our) (NN evaluation) (NN framework))))))))) (VP (VBZ demonstrates) (NP (NP (DT the) (NN latency)) (CC and) (NP (NP (NN throughput) (NNS improvements)) (PP (IN for) (NP (JJ cross-shard) (NNS transactions)))))) (. .))
