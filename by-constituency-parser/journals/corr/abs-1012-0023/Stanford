(S (NP (VBG Pumping) (NNS lemmas)) (VP (VBP are) (VP (VBN created) (S (VP (TO to) (VP (VB prove) (SBAR (IN that) (S (NP (VBN given) (NNS languages)) (VP (VBP are) (RB not) (VP (VB belong) (PP (IN to) (NP (JJ certain) (NN language) (NNS classes)))))))))))) (. .))
(S (NP (EX There)) (VP (VBP are) (NP (NP (NP (JJ several) (VBN known) (NN pumping) (NN lemmas)) (PP (IN for) (NP (DT the) (JJ whole) (NN class)))) (CC and) (NP (NP (DT some) (JJ special) (NNS classes)) (PP (IN of) (NP (ADJP (NP (DT the) (NN context)) (HYPH -) (JJ free)) (NNS languages)))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP prove) (NP (JJ new) (, ,) (JJ interesting) (NN pumping) (NN lemmas)) (PP (IN for) (NP (JJ special) (ADJP (UCP (ADJP (JJ linear)) (CC and) (NP (NN context))) (HYPH -) (JJ free)) (NN language) (NNS classes)))) (. .))
(S (NP (NP (DT Some)) (PP (IN of) (NP (PRP them)))) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB pump) (NP (JJ regular) (NNS languages)) (PP (IN in) (NP (CD two) (NN place))) (ADVP (RB simultaneously)))))))) (. .))
(S (NP (JJ Other) (NNP lemma)) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB pump) (NP (ADJP (NP (NN context)) (HYPH -) (JJ free)) (NNS languages)) (PP (IN in) (NP (JJ arbitrary) (JJ many) (NNS places))))))))) (. .))
