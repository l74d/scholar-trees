(S (NP (NP (NNP Data) (NN movement)) (PP (IN between) (NP (NP (JJ main) (NN memory)) (CC and) (NP (DT the) (NNP CPU))))) (VP (VBZ is) (NP (DT a) (JJ major) (NN bottleneck)) (PP (IN in) (NP (JJ parallel) (JJ data-intensive) (NNS applications)))) (. .))
(S (PP (IN In) (NP (NN response))) (, ,) (NP (NNS researchers)) (VP (VBP have) (VP (VBN proposed) (S (VP (VBG using) (NP (NP (NNS compilers)) (CC and) (NP (NP (JJ intermediate) (NNS representations)) (PRN (-LRB- -LRB-) (NP (NNP IRs)) (-RRB- -RRB-))) (SBAR (WHNP (WDT that)) (S (VP (VBP apply) (NP (NP (NNS optimizations)) (PP (JJ such) (IN as) (NP (JJ loop) (NN fusion)))) (PP (IN under) (NP (NP (VBG existing) (JJ high-level) (NNP APIs)) (PP (JJ such) (IN as) (NP (NP (NNP NumPy)) (CC and) (NP (NNP TensorFlow)))))))))))))) (. .))
(S (S (SBAR (RB Even) (IN though) (S (NP (DT these) (NNS techniques)) (ADVP (RB generally)) (VP (VBP do) (RB not) (VP (VB require) (NP (NP (NNS changes)) (PP (TO to) (NP (VB user) (NNS applications)))))))) (, ,) (NP (PRP they)) (VP (VBP require) (NP (NP (JJ intrusive) (NNS changes)) (PP (TO to) (NP (NP (DT the) (JJ library)) (NP (PRP itself))))))) (: :) (S (ADVP (RB often)) (, ,) (NP (JJ library) (NNS developers)) (VP (MD must) (VP (VB rewrite) (NP (DT each) (NN function)) (S (VP (VBG using) (NP (DT a) (JJ new) (NNP IR))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (NP (DT a) (JJ new) (NN technique)) (VP (VBN called) (S (NP (S (NP (NN split) (NNS annotations))) (PRN (-LRB- -LRB-) (NP (NNP SAs)) (-RRB- -RRB-))))) (SBAR (WHNP (IN that)) (S (VP (VBZ enables) (NP (NP (JJ key) (NNS data) (NN movement) (NNS optimizations)) (PP (IN over) (NP (JJ unmodified) (JJ library) (NNS functions))))))))) (. .))
(S (NP (NNP SAs)) (ADVP (RB only)) (VP (VBZ require) (S (NP (NNS developers)) (VP (TO to) (VP (VP (VB annotate) (NP (NNS functions))) (CC and) (VP (VB implement) (NP (NP (DT an) (NNP API)) (SBAR (WHNP (WDT that)) (S (VP (VBZ specifies) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB partition) (NP (NP (NNS data)) (PP (IN in) (NP (DT the) (NN library))))))))))))))))) (. .))
(S (NP (DT The) (NN annotation) (CC and) (NNP API)) (VP (VB describe) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB enable) (NP (NN cross-function) (NNS data) (NN pipelining) (CC and) (NN parallelization)) (, ,) (SBAR (IN while) (S (VP (VBG respecting) (NP (NP (DT each) (NN function) (POS 's)) (NN correctness) (NNS constraints)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP implement) (NP (NP (DT a) (JJ parallel) (NN runtime)) (PP (IN for) (NP (NNP SAs)))) (PP (IN in) (NP (NP (DT a) (NN system)) (VP (VBN called) (S (NP (NNP Mozart))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (NNP Mozart)) (VP (MD can) (VP (VB accelerate) (NP (NP (NNS workloads)) (PP (IN in) (NP (NP (NNS libraries)) (PP (JJ such) (IN as) (NP (NP (NNP Intel) (NNP MKL)) (CC and) (NP (NNP Pandas))))))) (PP (IN by) (NP (QP (IN up) (TO to) (CD 15x)))) (, ,) (PP (IN with) (NP (DT no) (JJ library) (NNS modifications)))))))) (. .))
(S (NP (NNP Mozart)) (ADVP (RB also)) (VP (VP (VBZ provides) (NP (NP (NN performance) (NNS gains)) (ADJP (JJ competitive) (PP (IN with) (NP (NP (NNS solutions)) (SBAR (WHNP (WDT that)) (S (VP (VBP require) (S (VP (VBG rewriting) (NP (NNS libraries)))))))))))) (, ,) (CC and) (VP (MD can) (ADVP (VB sometimes)) (VP (VB outperform) (NP (DT these) (NNS systems)) (PP (IN by) (NP (QP (IN up) (TO to) (CD 2x)))) (PP (IN by) (S (VP (VBG leveraging) (NP (VBG existing) (JJ hand-optimized) (NN code)))))))) (. .))
