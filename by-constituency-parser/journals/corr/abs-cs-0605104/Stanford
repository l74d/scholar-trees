(S (NP (PRP We)) (VP (VBP consider) (, ,) (PP (IN as) (NP (NP (NP (DT a) (NN means)) (PP (IN of) (S (VP (VBG making) (S (NP (NN programming) (NNS languages)) (ADJP (RBR more) (JJ flexible) (CC and) (JJ powerful))))))) (, ,) (NP (NP (DT a) (VBG parsing) (NN algorithm)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (DT the) (NN parser)) (VP (MD may) (ADVP (RB freely)) (VP (VB modify) (NP (DT the) (NN grammar)) (PP (IN while) (S (VP (VBG parsing)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP are) (ADJP (RB particularly) (JJ interested) (PP (IN in) (NP (NP (NP (DT a) (NN modification)) (PP (IN of) (NP (DT the) (JJ canonical) (NN LR))) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-))) (VP (VBG parsing) (NP (NP (NN algorithm)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (, ,) (PP (IN after) (NP (NP (DT the) (NN reduction)) (PP (IN of) (NP (JJ certain) (NNS productions))))) (, ,) (NP (PRP we)) (VP (VBP examine) (NP (NP (DT the) (NN source) (NN sentence)) (VP (VBN seen) (ADVP (RB so) (RB far)) (S (VP (TO to) (VP (VB determine) (NP (DT the) (NN grammar)) (S (VP (TO to) (VP (VB use) (S (VP (TO to) (VP (VB continue) (S (VP (VBG parsing))))))))))))))))))))))) (. .))
(S (S (NP (NP (NP (DT A) (JJ naive) (NN modification)) (PP (IN of) (NP (DT the) (JJ canonical) (NN LR))) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-))) (VP (VBG parsing) (NP (NP (NN algorithm)) (PP (IN along) (NP (DT these) (NNS lines)))))) (VP (MD can) (RB not) (VP (VB be) (VP (VBN guaranteed) (S (VP (TO to) (VP (VB halt)))))))) (: ;) (S (PP (IN as) (NP (DT a) (NN result))) (, ,) (NP (PRP we)) (VP (VBP develop) (NP (NP (DT a) (NN test)) (SBAR (WHNP (WDT which)) (S (VP (VBZ examines) (NP (DT the) (NN grammar)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ changes) (, ,) (S (VP (VBG stopping) (S (NP (DT the)) (VP (VB parse) (SBAR (IN if) (S (NP (NP (DT the) (NN grammar) (NNS changes)) (PP (IN in) (NP (NP (DT a) (NN way)) (SBAR (WHNP (WDT that)) (S (VP (MD would) (VP (VB invalidate) (NP (JJR earlier) (NNS assumptions))))))))) (VP (VBN made) (PP (IN by) (NP (DT the) (NN parser))))))))))))))))))) (. .))
(S (PP (IN With) (NP (NP (DT this) (NN test)) (PP (IN in) (NP (NN hand))))) (, ,) (NP (PRP we)) (VP (MD can) (VP (VP (VB develop) (NP (PRP$ our) (VBG parsing) (NN algorithm))) (CC and) (VP (VB prove) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ is) (ADJP (JJ correct)))))))) (. .))
(S (NP (NP (DT That) (NN being)) (VP (VBN done) (, ,) (PRN (S (NP (PRP we)) (VP (VBP turn)))) (PP (IN to) (NP (NP (ADVP (RBR earlier)) (, ,) (JJ related) (NN work)) (: ;) (NP (NP (DT the) (NN idea)) (PP (IN of) (NP (NP (NN programming) (NNS languages)) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB be) (VP (VBN extended) (S (VP (TO to) (VP (VB include) (NP (JJ new) (JJ syntactic) (NNS constructs))))))))))))))))) (VP (VBZ has) (VP (VBN existed) (ADVP (RB almost) (RB as) (JJ long)) (PP (IN as) (NP (NP (DT the) (NN idea)) (PP (IN of) (NP (NML (JJ high) (HYPH -) (NN level)) (NN programming) (NNS languages))))))) (. .))
(S (ADVP (RB Early)) (NP (NNS efforts) (S (VP (TO to) (VP (VB construct) (NP (PDT such) (DT a) (NN programming) (NN language)))))) (VP (VBD were) (VP (VBN hampered) (PP (IN by) (NP (NP (DT an) (JJ immature) (NN theory)) (PP (IN of) (NP (JJ formal) (NNS languages))))))) (. .))
(S (S (NP (ADJP (RBR More) (JJ recent)) (NNS efforts) (S (VP (TO to) (VP (VB construct) (NP (JJ transformative) (NNS languages)))))) (VP (VBD relied) (ADVP (RB either)) (PP (IN on) (NP (NP (DT an) (JJ inefficient) (NN chain)) (PP (IN of) (NP (NML (NML (NN source)) (HYPH -) (PP (IN to) (HYPH -) (NP (NN source)))) (NNS translators))))))) (: ;) (CC or) (S (NP (PRP they)) (VP (VBP have) (NP (NP (DT a) (NN defect)) (, ,) (ADJP (JJ present) (PP (IN in) (NP (PRP$ our) (JJ naive)))) (S (VP (VBG parsing) (NP (NN algorithm)) (, ,) (PP (IN in) (SBAR (IN that) (S (NP (PRP they)) (VP (MD can) (RB not) (VP (VB be) (VP (VBN known) (S (VP (TO to) (VP (VB halt))))))))))))))) (. .))
(S (S (NP (DT The) (JJ present) (NN algorithm)) (VP (VBZ does) (RB not) (VP (VB have) (NP (DT these) (JJ undesirable) (NNS properties))))) (, ,) (CC and) (S (PP (IN as) (ADJP (JJ such))) (, ,) (NP (PRP it)) (VP (MD should) (VP (VB prove) (NP (DT a) (JJ useful) (NN foundation)) (PP (IN for) (NP (NP (DT a) (JJ new) (NN kind)) (PP (IN of) (NP (NN programming) (NN language)))))))) (. .))
