(S (NP (NN Self-adaptation)) (VP (MD can) (VP (VB be) (VP (VBN realized) (PP (IN in) (NP (JJ various) (NNS ways)))))) (. .))
(S (NP (JJ Rule-based) (NNS approaches)) (VP (VP (VBP prescribe) (NP (NP (DT the) (NN adaptation)) (SBAR (S (VP (TO to) (VP (VB be) (VP (VBN executed) (SBAR (IN if) (S (NP (DT the) (NN system) (CC or) (NN environment)) (VP (NN satisfy) (NP (JJ certain) (NNS conditions)))))))))))) (CC and) (VP (NN result) (PP (IN in) (NP (JJ scalable) (NNS solutions))) (, ,) (ADVP (RB however)) (, ,) (PP (IN with) (S (ADVP (RB often)) (NP (ADJP (RB only) (VBG satisfying)) (NN adaptation) (NNS decisions)))))) (. .))
(S (PP (IN In) (NP (NN contrast))) (, ,) (NP (JJ utility-driven) (NNS approaches)) (VP (VBP determine) (NP (JJ optimal) (NN adaptation) (NNS decisions)) (PP (IN by) (S (VP (VBG using) (NP (NP (DT an) (ADJP (RB often) (JJ costly)) (JJ optimization) (NN step)) (, ,) (SBAR (WHNP (WDT which)) (S (ADVP (RB typically)) (VP (VBZ does) (RB not) (VP (VB scale) (ADVP (RB well)) (PP (IN for) (NP (JJR larger) (NNS problems)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP propose) (NP (NP (DT a) (ADJP (JJ rule-based) (CC and) (JJ utility-driven)) (NN approach)) (SBAR (WHNP (WDT that)) (S (VP (VBZ achieves) (NP (NP (DT the) (JJ beneficial) (NNS properties)) (PP (IN of) (NP (NP (DT each)) (PP (IN of) (NP (DT these) (NNS directions)))))) (SBAR (JJ such) (IN that) (S (NP (DT the) (NN adaptation) (NNS decisions)) (VP (VBP are) (ADJP (JJ optimal)) (SBAR (IN while) (S (NP (DT the) (NN computation)) (VP (VBZ remains) (ADJP (JJ scalable)) (SBAR (IN since) (S (NP (DT an) (JJ expensive) (NN optimization) (NN step)) (VP (MD can) (VP (VB be) (VP (VBN avoided))))))))))))))))) (. .))
(S (NP (DT The) (NN approach)) (VP (MD can) (VP (VB be) (VP (VBN used) (PP (IN for) (NP (NP (DT the) (JJ architecture-based) (NN self-healing)) (PP (IN of) (NP (JJ large) (NN software) (NNS systems)))))))) (. .))
(S (S (NP (PRP We)) (VP (VBP define) (NP (NP (DT the) (NN utility)) (PP (IN for) (NP (NP (JJ large) (JJ dynamic) (NNS architectures)) (PP (IN of) (NP (JJ such) (NNS systems)))))) (PP (VBN based) (PP (IN on) (NP (NP (NNS patterns)) (VP (VBG capturing) (NP (NP (NNS issues)) (SBAR (S (NP (DT the) (JJ self-healing)) (VP (MD must) (VP (VB address)))))))))))) (CC and) (S (NP (PRP we)) (VP (VBP use) (NP (JJ patternbased) (NN adaptation) (NNS rules)) (S (VP (TO to) (VP (VB resolve) (NP (DT the) (NNS issues))))))) (. .))
(S (S (VP (VBG Defining) (S (NP (NP (DT the) (NN utility)) (CONJP (RB as) (RB well) (IN as)) (NP (DT the) (NN adaptation) (NNS rules))) (ADJP (JJ pattern-based))))) (VP (NNS allows) (S (NP (PRP us)) (VP (VP (TO to) (VP (VB compute) (NP (NP (DT the) (NN impact)) (PP (IN of) (NP (DT each) (NN rule) (NN application))) (PP (IN on) (NP (DT the) (JJ overall) (NN utility)))))) (CC and) (VP (TO to) (VP (VB realize) (NP (DT an) (ADJP (JJ incremental) (CC and) (JJ efficient)) (JJ utility-driven) (NN self-healing))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (NP (NP (DT the) (NN efficiency) (CC and) (NN optimality)) (PP (IN of) (NP (PRP$ our) (NN scheme)))) (PP (IN in) (NP (NP (JJ comparative) (NNS experiments)) (PP (IN with) (NP (NP (NP (DT a) (JJ static) (JJ rule-based) (NN scheme)) (PP (IN as) (NP (DT a) (NN baseline)))) (CC and) (NP (NP (DT a) (JJ utility-driven) (NN approach)) (VP (VBG using) (NP (DT a) (NN constraint) (NN solver))))))))) (. .))
