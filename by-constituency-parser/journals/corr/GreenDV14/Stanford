(S (NP (DT This) (NN paper)) (VP (VBZ quantifies) (NP (NP (DT the) (NN impact)) (PP (IN of) (NP (NP (NNS branches)) (CC and) (NP (NN branch) (NNS mispredictions))))) (PP (IN on) (NP (NP (DT the) (NML (JJ single) (HYPH -) (NN core)) (NN performance)) (PP (IN for) (NP (NP (CD two) (NNS classes)) (PP (IN of) (NP (NN graph) (NNS problems)))))))) (. .))
(S (ADVP (RB Specifically)) (, ,) (NP (PRP we)) (VP (VBP consider) (NP (JJ classical) (NNS algorithms)) (PP (IN for) (NP (NP (VBG computing) (JJ connected) (NNS components)) (CC and) (NP (NN breadth) (HYPH -) (JJ first) (NN search)))) (PRN (-LRB- -LRB-) (NP (NN BFS)) (-RRB- -RRB-))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (NN branch) (NNS mispredictions)) (VP (VP (VBP are) (ADJP (JJ costly))) (CC and) (VP (MD can) (VP (VB reduce) (NP (NN performance)) (PP (IN by) (NP (NP (QP (RB as) (JJ much) (IN as) (CD 30)) (NN %)) (HYPH -) (NP (CD 50) (NN %)))))))))) (. .))
(S (NP (DT This) (NN insight)) (VP (VBZ suggests) (SBAR (IN that) (S (NP (PRP one)) (VP (MD should) (VP (VB seek) (NP (NP (NN graph) (NNS algorithms) (CC and) (NNS implementations)) (SBAR (WHNP (WDT that)) (S (VP (VBP avoid) (NP (NNS branches))))))))))) (. .))
(S (PP (IN As) (NP (DT a) (NN proof) (HYPH -) (IN of) (HYPH -) (NN concept))) (, ,) (NP (PRP we)) (VP (VBP devise) (NP (JJ such) (NNS implementations)) (PP (IN for) (NP (CC both) (NP (NP (DT the) (JJ classic) (NML (JJ top) (HYPH -) (JJ down)) (NN algorithm)) (PP (IN for) (NP (NNP BFS)))) (CC and) (NP (NP (DT the) (NML (NNP Shiloach) (HYPH -) (NNP Vishkin)) (NN algorithm)) (PP (IN for) (NP (JJ connected) (NNS components))))))) (. .))
(S (NP (PRP We)) (VP (VBP evaluate) (NP (DT these) (NNS implementations)) (PP (IN on) (NP (JJ current) (ADJP (NP (NP (CD x86)) (CC and) (NP (NN ARM))) (HYPH -) (VBN based)) (NNS processors))) (S (VP (TO to) (VP (VB show) (NP (NP (DT the) (NN efficacy)) (PP (IN of) (NP (DT the) (NN approach)))))))) (. .))
(S (NP (PRP$ Our) (NNS results)) (VP (VBP suggest) (SBAR (WHADVP (WRB how)) (S (NP (NP (DT both) (NN compiler) (NNS writers)) (CC and) (NP (NNS architects))) (VP (MD might) (VP (VB exploit) (NP (DT this) (NN insight)) (S (VP (TO to) (VP (VP (VB improve) (NP (NN graph) (NN processing) (NNS systems)) (ADVP (RBR more) (RB broadly))) (CC and) (VP (VB create) (NP (JJR better) (NNS systems)) (PP (IN for) (NP (JJ such) (NNS problems)))))))))))) (. .))
