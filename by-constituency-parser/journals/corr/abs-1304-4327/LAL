(S (NP (JJ Dual-tree) (NNS algorithms)) (VP (VBP are) (NP (NP (DT a) (ADJP (RB widely) (JJ used)) (NN class)) (PP (IN of) (NP (JJ branch-and-bound) (NN algorithms))))) (. .))
(S (ADVP (RB Unfortunately)) (, ,) (S (VP (VBG developing) (NP (JJ dual-tree) (NN algorithms)) (PP (IN for) (NP (NP (NN use)) (PP (IN with) (NP (JJ different) (NNS trees) (CC and) (NNS problems))))))) (VP (VBZ is) (ADVP (RB often)) (ADJP (JJ complex) (CC and) (NN burdensome))) (. .))
(S (NP (PRP We)) (VP (VBP introduce) (NP (NP (DT a) (JJ four-part) (JJ logical) (NN split)) (: :) (NP (NP (DT the) (NN tree)) (, ,) (NP (DT the) (NN traversal)) (, ,) (NP (DT the) (JJ point-to-point) (NN base) (NN case)) (, ,) (CC and) (NP (DT the) (NN pruning) (NN rule))))) (. .))
(S (NP (PRP We)) (VP (VBP provide) (NP (NP (DT a) (NN meta-algorithm)) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (NP (NP (NP (NN development)) (PP (IN of) (NP (JJ dual-tree) (NN algorithms))) (PP (IN in) (NP (DT a) (JJ tree-independent) (NN manner)))) (CC and) (NP (NP (JJ easy) (NN extension)) (PP (TO to) (NP (NP (RB entirely) (JJ new) (NNS types)) (PP (IN of) (NP (NNS trees)))))))))))) (. .))
(S (S (NP (NNS Representations)) (VP (VBP are) (VP (VBN provided) (PP (IN for) (NP (CD five) (JJ common) (NN algorithms)))))) (: ;) (S (PP (IN for) (NP (JJS k-nearest) (NN neighbor) (NN search))) (, ,) (NP (DT this)) (VP (VBZ leads) (PP (TO to) (NP (DT a) (NN novel) (, ,) (JJR tighter) (VBG pruning) (NN bound))))) (. .))
(S (NP (DT The) (NN meta-algorithm)) (ADVP (RB also)) (VP (VBZ allows) (NP (NP (JJ straightforward) (NNS extensions)) (PP (TO to) (NP (ADJP (RB massively) (JJ parallel)) (NNS settings))))) (. .))
