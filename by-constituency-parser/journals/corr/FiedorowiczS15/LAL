(S (S (PP (IN In) (NP (DT the) (NN paper))) (NP (PRP we)) (VP (VBP consider) (NP (DT some) (VBD generalised) (JJ acyclic) ($ $) (JJ k) ($ $) (NNS -colourings)))) (, ,) (S (ADVP (RB namely)) (, ,) (S (NP (PRP we)) (VP (VBP require) (SBAR (IN that) (S (NP (DT each) (NN colour) (NN class)) (VP (VBZ induces) (NP (DT an) (ADJP (JJ acyclic) (CC or) (VBD bounded)) (JJ degree) (NN graph)))))))) (. .))
(S (ADVP (RB Mainly)) (NP (PRP we)) (VP (VBP focus) (PP (IN on) (NP (NP (NN graphs)) (PP (IN with) (NP (JJ maximum) (JJ degree) (CD 5)))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (DT any) (JJ such) (NN graph)) (VP (VBZ has) (NP (DT an) (JJ acyclic) (ADJP (ADJP ($ $) (CD 5)) ($ $)) (VBG -colouring)) (SBAR (JJ such) (IN that) (S (NP (DT each) (NN colour) (NN class)) (VP (VBZ induces) (NP (NP (DT an) (JJ acyclic) (NN graph)) (PP (IN with) (NP (JJ maximum) (NN degree)) (ADVP (ADVP (IN at) (JJS most)) (CD 4))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP prove) (SBAR (IN that) (S (NP (NP (DT the) (NN problem)) (PP (IN of) (S (VP (VBG deciding) (SBAR (IN whether) (S (NP (NP (DT a) (JJ graph)) (NP ($ $) (NNP G) ($ $))) (VBZ has) (NP (NP (DT an) (JJ acyclic) (NN 2-colouring)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (DT each) (NN colour) (NN class)) (VP (VBZ induces) (NP (NP (DT a) (NN graph)) (PP (IN with) (NP (NP (JJ maximum) (NN degree)) (NP (ADVP (IN at) (JJS most)) (CD 3))))))))))))))) (VP (VBZ is) (ADJP (NNP NP-complete)) (, ,) (PP (ADVP (RB even)) (IN for) (NP (NP (NN graphs)) (PP (IN with) (NP (JJ maximum) (JJ degree) (CD 5))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP give) (NP (NP (DT a) (JJ linear-time) (NN algorithm)) (PP (IN for) (NP (NP (DT an) (JJ acyclic) (ADJP ($ $) (JJ t) ($ $) (IN -improper)) (NN colouring)) (PP (IN of) (NP (DT any) (NN graph))) (PP (IN with) (NP (JJ maximum) (JJ degree) ($ $) (JJ d) ($ $)))))) (S (VP (VBG assuming) (SBAR (IN that) (S (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NNS colors)))) (VP (VBZ is) (ADJP (JJ large) (RB enough)))))))) (. .))
