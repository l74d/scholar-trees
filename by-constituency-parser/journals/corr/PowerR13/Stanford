(S (NP (NN Python)) (VP (VBZ is) (NP (NP (DT a) (JJ popular) (JJ dynamic) (NN language)) (PP (IN with) (NP (NP (DT a) (JJ large) (NN part)) (PP (IN of) (NP (NP (PRP$ its) (NN appeal)) (VP (VBG coming) (PP (IN from) (NP (JJ powerful) (NML (NNS libraries) (CC and) (NN extension)) (NNS modules)))))))))) (. .))
(S (NP (DT These)) (VP (VP (VBP augment) (NP (DT the) (NN language))) (CC and) (VP (VB make) (S (NP (PRP it)) (NP (NP (DT a) (JJ productive) (NN environment)) (PP (IN for) (NP (NP (DT a) (JJ wide) (NN variety)) (PP (IN of) (NP (NNS tasks)))))) (, ,) (S (VP (VBG ranging) (PP (IN from) (NP (NN web) (NN development) (PRN (-LRB- -LRB-) (NP (NNP Django)) (-RRB- -RRB-)))) (PP (IN to) (NP (JJ numerical) (NN analysis) (PRN (-LRB- -LRB-) (NP (NN NumPy)) (-RRB- -RRB-))))))))) (. .))
(S (ADVP (RB Unfortunately)) (, ,) (NP (NP (NNP Python) (POS 's)) (NN performance)) (VP (VBZ is) (ADJP (RB quite) (JJ poor)) (SBAR (WHADVP (WRB when)) (S (VP (VBN compared) (PP (IN to) (NP (NP (JJ modern) (NNS implementations)) (PP (IN of) (NP (NP (NNS languages)) (PP (JJ such) (IN as) (NP (NNP Lua) (CC and) (NNP JavaScript))))))))))) (. .))
(SBARQ (WHADVP (WRB Why)) (SQ (VP (VBZ does) (NP (NNP Python) (NN lag)) (ADVP (RB so) (RB far)) (PP (IN behind) (NP (DT these) (JJ other) (NNS languages))))) (. ?))
(S (SBAR (IN As) (S (NP (PRP we)) (VP (VBP show)))) (, ,) (NP (NP (DT the) (ADJP (RB very) (JJ same)) (NN API)) (CC and) (NP (NP (NN extension) (NNS libraries)) (SBAR (WHNP (WDT that)) (S (VP (VBP make) (NP (NN Python)) (NP (DT a) (JJ powerful) (NN language))))))) (ADVP (RB also)) (VP (VBP make) (S (NP (PRP it)) (ADJP (RB very) (JJ difficult) (S (VP (TO to) (ADVP (RB efficiently)) (VP (VB execute))))))) (. .))
(SBARQ (PP (VBN Given) (SBAR (IN that) (S (NP (PRP we)) (VP (VBP want) (S (VP (TO to) (VP (VB retain) (NP (NN access)) (PP (IN to) (NP (NP (DT the) (JJ great) (NN extension) (NNS libraries)) (SBAR (WHNP (WDT that)) (S (ADVP (RB already)) (VP (VBP exist) (PP (IN for) (NP (NN Python))))))))))))))) (, ,) (WHADVP (WRB how) (RB fast)) (SQ (MD can) (NP (PRP we)) (VP (VB make) (NP (PRP it)))) (. ?))
(S (S (VP (TO To) (VP (VB evaluate) (NP (DT this))))) (, ,) (NP (PRP we)) (VP (VP (VBD designed)) (CC and) (VP (VBD implemented) (NP (NP (NNP Falcon)) (, ,) (NP (NP (DT a) (NML (JJ high) (HYPH -) (NN performance)) (NN bytecode) (NN interpreter)) (ADJP (RB fully) (JJ compatible)))) (PP (IN with) (NP (DT the) (JJ standard) (NNP CPython) (NN interpreter))))) (. .))
(S (NP (NNP Falcon)) (VP (VP (VBZ applies) (NP (NP (DT a) (NN number)) (PP (IN of) (NP (ADJP (RB well) (VBN known)) (NNS optimizations))))) (CC and) (VP (VBZ introduces) (NP (JJ several) (JJ new) (NNS techniques)) (S (VP (TO to) (VP (VB speed) (PRT (RP up)) (NP (NP (NN execution)) (PP (IN of) (NP (NN Python) (NN bytecode))))))))) (. .))
(S (PP (IN In) (NP (PRP$ our) (NN evaluation))) (, ,) (NP (PRP we)) (VP (VBD found) (NP (NNP Falcon)) (NP (NP (DT an) (NN average)) (PP (IN of) (UCP (ADJP (NP (CD 25) (NN %)) (JJR faster) (PP (IN than) (NP (NP (DT the) (JJ standard) (NNP Python) (NN interpreter)) (PP (IN on) (NP (JJS most) (NNS benchmarks)))))) (CC and) (PP (IN in) (NP (DT some) (NNS cases)))))) (PP (IN about) (ADVP (NP (CD 2.5) (NN X)) (RBR faster)))) (. .))
