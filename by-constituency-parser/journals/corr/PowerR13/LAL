(S (NP (NNP Python)) (VP (VBZ is) (NP (DT a) (JJ popular) (JJ dynamic) (NN language)) (PP (IN with) (S (NP (NP (DT a) (JJ large) (NN part)) (PP (IN of) (NP (PRP$ its) (NN appeal)))) (VP (VBG coming) (PP (IN from) (NP (JJ powerful) (NX (NX (NNS libraries)) (CC and) (NX (NN extension) (NNS modules))))))))) (. .))
(S (NP (DT These)) (VP (VP (VBD augment) (NP (DT the) (NN language))) (CC and) (VP (VB make) (S (NP (PRP it)) (NP (NP (DT a) (JJ productive) (NN environment)) (PP (IN for) (NP (NP (DT a) (JJ wide) (NN variety)) (PP (IN of) (NP (NNS tasks))) (, ,) (VP (VBG ranging) (PP (PP (IN from) (NP (NP (NN web) (NN development)) (PRN (-LRB- -LRB-) (NP (NNP Django)) (-RRB- -RRB-)))) (PP (TO to) (NP (NP (JJ numerical) (NN analysis)) (PRN (-LRB- -LRB-) (NP (NNP NumPy)) (-RRB- -RRB-)))))))))))) (. .))
(S (ADVP (RB Unfortunately)) (, ,) (NP (NP (NNP Python) (POS 's)) (NN performance)) (VP (VBZ is) (ADJP (RB quite) (JJ poor)) (SBAR (WHADVP (WRB when)) (S (VP (VBN compared) (PP (TO to) (NP (NP (JJ modern) (NNS implementations)) (PP (IN of) (NP (NP (NNS languages)) (PP (JJ such) (IN as) (NP (NP (NNP Lua)) (CC and) (NP (NNP JavaScript)))))))))))) (. .))
(SBARQ (WHADVP (WRB Why)) (SQ (VBZ does) (NP (NNP Python)) (VP (NN lag) (PP (ADVP (RB so) (RB far)) (IN behind) (NP (DT these) (JJ other) (NNS languages))))) (. ?))
(S (SBAR (IN As) (S (NP (PRP we)) (VP (VBP show)))) (, ,) (NP (NP (DT the) (ADJP (RB very) (JJ same)) (NNP API) (CC and) (NN extension) (NNS libraries)) (SBAR (WHNP (WDT that)) (S (VP (VBP make) (S (NP (VB Python)) (NP (DT a) (JJ powerful) (NN language))))))) (ADVP (RB also)) (VP (VBP make) (S (NP (PRP it)) (ADJP (RB very) (JJ difficult) (SBAR (S (VP (TO to) (VP (ADVP (RB efficiently)) (VB execute)))))))) (. .))
(SQ (PP (VBN Given) (SBAR (IN that) (S (NP (PRP we)) (VP (VBP want) (S (VP (TO to) (VP (VB retain) (NP (NP (NN access)) (PP (TO to) (NP (NP (DT the) (JJ great) (NN extension) (NNS libraries)) (SBAR (WHNP (WDT that)) (S (ADVP (RB already)) (VP (VBP exist) (PP (IN for) (NP (NNP Python)))))))))))))))) (, ,) (WHADVP (WRB how) (RB fast)) (SQ (MD can) (NP (PRP we)) (VP (VB make) (NP (PRP it)))) (. ?))
(S (S (VP (TO To) (VP (VB evaluate) (NP (DT this))))) (, ,) (NP (PRP we)) (VP (VBD designed) (CC and) (JJ implemented) (NP (NP (NNP Falcon)) (, ,) (NP (NP (DT a) (NN high-performance) (NN bytecode) (NN interpreter)) (ADJP (RB fully) (JJ compatible) (PP (IN with) (NP (DT the) (JJ standard) (NNP CPython) (NN interpreter))))))) (. .))
(S (NP (NNP Falcon)) (VP (VP (VBZ applies) (NP (NP (DT a) (NN number)) (PP (IN of) (NP (ADJP (RB well) (VBN known)) (NNS optimizations))))) (CC and) (VP (NNS introduces) (NP (JJ several) (JJ new) (NNS techniques)) (SBAR (S (VP (TO to) (VP (VB speed) (PRT (RP up)) (NP (NP (NN execution)) (PP (IN of) (NP (NNP Python) (NN bytecode)))))))))) (. .))
(S (PP (IN In) (NP (PRP$ our) (NN evaluation))) (, ,) (NP (PRP we)) (VP (VBD found) (S (NP (NNP Falcon)) (ADJP (ADJP (ADJP (NP (NP (DT an) (NN average)) (PP (IN of) (NP (CD 25) (NN %)))) (JJR faster)) (PP (IN than) (NP (DT the) (JJ standard) (NNP Python) (NN interpreter))) (PP (IN on) (NP (JJS most) (NNS benchmarks)))) (CC and) (VP (PP (IN in) (NP (DT some) (NNS cases))) (ADJP (QP (IN about) (CD 2.5X)) (NN faster)))))) (. .))
