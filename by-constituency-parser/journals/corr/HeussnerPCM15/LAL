(S (S (VP (VP (TO To) (VP (VB harness) (NP (NP (DT the) (NN power)) (PP (IN of) (NP (ADJP (NN multi-core) (CC and) (JJ distributed)) (NNS platforms)))))) (, ,) (CC and) (VP (TO to) (VP (VB make) (S (NP (NP (DT the) (NN development)) (PP (IN of) (NP (NN concurrent) (NN software)))) (ADJP (RBR more) (JJ accessible) (PP (TO to) (NP (NN software) (NNS engineers))))))))) (, ,) (NP (NP (JJ different) (JJ object-oriented) (NN concurrency) (NNS models)) (PP (JJ such) (IN as) (NP (NNP SCOOP)))) (VP (VBP have) (VP (VBN been) (VP (VBN proposed)))) (. .))
(S (PP (IN Despite) (NP (NP (DT the) (JJ practical) (NN importance)) (PP (IN of) (S (VP (VBG analysing) (NP (NNP SCOOP) (NNS programs))))))) (, ,) (NP (EX there)) (VP (VBP are) (ADVP (RB currently)) (NP (NP (DT no) (JJ general) (NN verification) (NNS approaches)) (SBAR (WHNP (WDT that)) (S (VP (VBP operate) (ADVP (RB directly)) (PP (IN on) (NP (NN program) (NN code))) (PP (IN without) (NP (JJ additional) (NNS annotations)))))))) (. .))
(S (NP (NP (CD One) (NN reason)) (PP (IN for) (NP (DT this)))) (VP (VBZ is) (NP (NP (DT the) (NN multitude)) (PP (IN of) (NP (NP (ADJP (RB partially) (VBG conflicting)) (JJ semantic) (NNS formalisations)) (PP (IN for) (NP (NNP SCOOP))) (PRN (-LRB- -LRB-) (PP (CC either) (IN in) (NP (NN theory) (CC or) (NP (NN by-implementation)))) (-RRB- -RRB-)))))) (. .))
(S (ADVP (RB Here)) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (NP (DT a) (NX (NX (JJ simple) (NN graph) (NN transformation) (NN system) (PRN (-LRB- -LRB-) (NP (NNP GTS)) (-RRB- -RRB-)))) (VBN based) (JJ run-time) (NNS semantics)) (PP (IN for) (NP (NNP SCOOP))) (SBAR (WHNP (WDT that)) (S (VP (VBP grasps) (NP (NP (DT the) (ADJP (RBS most) (JJ common)) (NNS features)) (PP (IN of) (NP (NP (DT all) (VBN known) (NNS semantics)) (PP (IN of) (NP (DT the) (NN language))))))))))) (. .))
(S (NP (DT This) (JJ run-time) (NN model)) (VP (VBZ is) (VP (VBN implemented) (PP (IN in) (NP (NP (NP (DT the) (JJ state-of-the-art) (NNP GTS) (NN tool)) (NP (NNP GROOVE))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (VP (VB simulate) (, ,) (NN analyse) (, ,) (CC and) (VB verify) (NP (NP (DT a) (NN subset)) (PP (IN of) (NP (NNP SCOOP) (NNS programs)))) (PP (IN with) (NP (NP (NN respect)) (PP (TO to) (NP (NP (NNS deadlocks)) (CC and) (NP (JJ other) (JJ behavioural) (NNS properties)))))))))))))))) (. .))
(S (PP (IN Besides) (S (VP (VBG proposing) (NP (NP (DT the) (JJ first) (NN approach)) (SBAR (S (VP (TO to) (VP (VB verify) (NP (NNP SCOOP) (NNS programs)) (PP (IN by) (NP (NP (JJ automatic) (NN translation)) (PP (TO to) (NP (NNP GTS))))))))))))) (, ,) (NP (PRP we)) (ADVP (RB also)) (VP (VBD highlight) (NP (NP (PRP$ our) (NNS experiences)) (PP (IN of) (S (VP (VBG applying) (NP (NP (NNP GTS)) (PRN (-LRB- -LRB-) (CC and) (ADVP (RB especially)) (NP (NNP GROOVE)) (-RRB- -RRB-))) (PP (IN for) (S (VP (VBG specifying) (NP (NNS semantics)) (PP (IN in) (NP (NP (DT the) (NN form)) (PP (IN of) (NP (NP (DT a) (JJ run-time) (NN model)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (MD should) (VP (VB be) (ADJP (JJ transferable) (PP (TO to) (NP (NP (NNP GTS) (NNS models)) (PP (IN for) (NP (JJ other) (NN concurrent) (NNS languages) (CC and) (NNS libraries)))))))))))))))))))))) (. .))
