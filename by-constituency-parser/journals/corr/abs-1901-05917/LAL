(S (VP (VB Assume) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP are) (VP (VBN given) (NP (NP (DT a) (JJ graph)) (NP ($ $) (NNP G=) (PRN (-LRB- -LRB-) (NNP V) (, ,) (NNP E) (-RRB- -RRB-)) ($ $)) (PP (IN with) (NP (DT an) (JJ initial) (NN coloring))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (DT each) (NN node)) (VP (VBZ is) (ADJP (JJ black) (CC or) (JJ white))))))))))) (. .))
(S (ADVP (RB Then)) (, ,) (PP (IN in) (NP (JJ discrete-time) (NNS rounds))) (NP (DT all) (NNS nodes)) (VP (ADVP (RB simultaneously)) (VBP update) (NP (PRP$ their) (NN color)) (S (VP (VBG following) (NP (DT a) (VBN predefined) (JJ deterministic) (NN rule))))) (. .))
(S (NP (DT This) (NN process)) (VP (VBZ is) (VP (VBN called) (S (NP (RB two-way) ($ $) (VB r) ($ $) (CD -bootstrap) (NN percolation))) (, ,) (PP (IN for) (NP (DT some) (JJ integer) ($ $) (JJ r) ($ $))) (, ,) (SBAR (IN if) (S (NP (NP (DT a) (NN node)) (PP (IN with) (NP (QP (IN at) (JJS least) ($ $) (JJ r) ($ $)) (JJ black) (NNS neighbors)))) (VP (VBZ gets) (ADJP (JJ black) (CC and) (JJ white)) (ADVP (NN otherwise))))))) (. .))
(S (PP (IN For) (NP (NP (DT each)) (PP (IN of) (NP (DT these) (NNS processes))))) (, ,) (NP (PRP we)) (VP (VBP say) (SBAR (S (NP (NP (DT a) (NN node)) (VP (VBN set) (NP ($ $) (NNP D) ($ $)))) (VP (VBZ is) (NP (DT a) (JJ dynamic) (NN monopoly)) (SBAR (WHADVP (WRB whenever)) (S (S (NP (DT the) (JJ following)) (VP (VBZ holds))) (: :) (S (SBAR (IN If) (S (NP (NP (DT all) (NNS nodes)) (PP (IN in) (NP ($ $) (NNP D) ($ $)))) (VP (VBP are) (ADJP (JJ black))))) (ADVP (RB then)) (NP (DT the) (NN graph)) (VP (VBZ gets) (ADJP (RB fully) (JJ black)) (ADVP (RB eventually)))))))))) (. .))
(S (NP (PRP We)) (VP (VBP provide) (NP (NP (JJ tight) (UCP (NN upper) (CC and) (JJR lower)) (NNS bounds)) (PP (IN on) (NP (NP (DT the) (JJ minimum) (NN size)) (PP (IN of) (NP (DT a) (JJ dynamic) (NN monopoly))))))) (. .))
