(S (NP (JJ Static) (NN analysis)) (VP (VP (VBZ is) (NP (NP (DT a) (JJ powerful) (NN technique)) (PP (IN for) (NP (NP (JJ automatic) (NN verification)) (PP (IN of) (NP (NNS programs))))))) (CC but) (VP (VBZ raises) (NP (JJ major) (NN engineering) (NNS challenges)) (SBAR (WHADVP (WRB when)) (S (VP (VBG developing) (NP (NP (DT a) (JJ full-fledged) (NN analyzer)) (PP (IN for) (NP (NP (DT a) (JJ realistic) (NN language)) (PP (JJ such) (IN as) (NP (NNP Java))))))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ describes) (NP (NP (DT the) (NNP Sawja) (NN library)) (: :) (NP (NP (DT a) (JJ static) (NN analysis) (NN framework)) (ADJP (RB fully) (JJ compliant) (PP (IN with) (NP (NNP Java) (CD 6)))) (SBAR (WHNP (WDT which)) (S (VP (VBZ provides) (NP (NP (NNP OCaml) (NNS modules)) (PP (IN for) (S (VP (ADVP (RB efficiently)) (VBG manipulating) (NP (NNP Java) (NN bytecode) (NNS programs)))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (DT the) (JJ main) (NNS features)) (PP (IN of) (NP (DT the) (NN library))) (, ,) (PP (VBG including) (NP (NP (PRN (-LRB- -LRB-) (NN i) (-RRB- -RRB-)) (NP (NP (JJ efficient) (JJ functional) (NNS data-structures)) (PP (IN for) (S (VP (VBG representing) (NP (NN program)) (PP (IN with) (NP (NP (JJ implicit) (NN sharing)) (CC and) (NP (JJ lazy) (NN parsing))))))))) (, ,) (NP (PRN (-LRB- -LRB-) (NN ii) (-RRB- -RRB-)) (NP (DT an) (JJ intermediate) (JJ stack-less) (NN representation))) (, ,) (CC and) (NP (PRN (-LRB- -LRB-) (NN iii) (-RRB- -RRB-)) (NP (NP (NN fast) (NN computation) (CC and) (NN manipulation)) (PP (IN of) (NP (JJ complete) (NNS programs))))))))) (. .))
