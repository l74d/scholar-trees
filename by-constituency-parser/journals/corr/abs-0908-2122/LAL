(S (S (VP (VBN Motivated) (PP (IN by) (NP (NP (DT the) (NN result) (SBAR (IN that) (S (NP (NP (DT an) (`` `) (NN approximate) ('' â€º) (NN evaluation)) (PP (IN of) (NP (NP (DT the) (NNP Jones) (NN polynomial)) (PP (IN of) (NP (DT a) (NN braid))))) (PP (IN at) (NP (NP (DT a) (ADJP ($ $) (CD 5^)) (PRN (-LRB- -LCB-) (NN th) (-RRB- -RCB-)) ($ $) (NN root)) (PP (IN of) (NP (NN unity)))))) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB simulate) (NP (NP (DT the) (JJ quantum) (NN part)) (PP (IN of) (NP (NP (DT any) (NN algorithm)) (PP (IN in) (NP (DT the) (JJ quantum) (NN complexity) (NN class) (NNP BQP))))))))))))))) (, ,) (CC and) (NP (NP (NNS results)) (VP (VBG relating) (NP (NNP BQP)) (PP (TO to) (NP (DT the) (VBG counting) (NN class) (NNP GapP))))))))) (, ,) (NP (PRP we)) (VP (VBP introduce) (NP (NP (DT a) (NN form)) (PP (IN of) (NP (JJ additive) (NN approximation))) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB simulate) (NP (NP (DT a) (NN function)) (PP (IN in) (NP (NNP BQP)))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (DT all) (NNS functions)) (PP (IN in) (NP (DT the) (NNS classes) (# #) (NNP P) (CC and) (NX (NNP GapP))))) (VP (VBP have) (NP (PDT such) (DT an) (NN approximation) (NN scheme)) (PP (IN under) (NP (JJ certain) (JJ natural) (NNS normalisations))))))) (. .))
(S (ADVP (RB However)) (NP (PRP we)) (VP (VBP are) (ADJP (JJ unable) (S (VP (TO to) (VP (VB determine) (SBAR (IN whether) (S (NP (NP (NP (DT the) (JJ particular) (NNS functions)) (SBAR (S (NP (PRP we)) (VP (VBP are) (VP (VBN motivated) (PP (IN by))))))) (, ,) (PP (JJ such) (IN as) (NP (NP (DT the) (JJ above) (NN evaluation)) (PP (IN of) (NP (DT the) (NNP Jones) (NN polynomial))))) (, ,)) (VP (MD can) (VP (VB be) (VP (VBN approximated) (PP (IN in) (NP (DT this) (NN way))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP close) (PP (IN with) (NP (NP (DT some) (JJ open) (NNS problems)) (VP (VBN motivated) (PP (IN by) (NP (DT this) (NN work))))))) (. .))
