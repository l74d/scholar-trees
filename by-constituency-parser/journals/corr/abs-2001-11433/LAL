(S (NP (NP (NNP Maximal) (NNP Clique) (NNP Enumeration)) (PRN (-LRB- -LRB-) (NP (NNP MCE)) (-RRB- -RRB-))) (VP (VP (VBZ is) (NP (DT a) (JJ fundamental) (NN graph) (NN mining) (NN problem))) (, ,) (CC and) (VP (VBZ is) (ADJP (JJ useful) (PP (IN as) (NP (DT a) (NN primitive))) (PP (IN in) (S (VP (VBG identifying) (NP (NP (JJ dense) (NNS structures)) (PP (IN in) (NP (DT a) (NN graph)))))))))) (. .))
(S (PP (JJ Due) (TO to) (NP (NP (DT the) (JJ high) (JJ computational) (NN cost)) (PP (IN of) (NP (NNP MCE))))) (, ,) (NP (JJ parallel) (NNS methods)) (VP (VBP are) (ADJP (JJ imperative)) (PP (IN for) (S (VP (VBG dealing) (PP (IN with) (NP (JJ large) (NNS graphs))))))) (. .))
(S (NP (PRP We)) (VP (VBP present) (NP (NP (JJ shared-memory) (NN parallel) (NN algorithms)) (PP (IN for) (NP (NNP MCE))) (, ,) (PP (IN with) (NP (NP (DT the) (VBG following) (NNS properties)) (: :) (S (S (PRN (-LRB- -LRB-) (CD 1) (-RRB- -RRB-)) (NP (DT the) (JJ parallel) (NN algorithms)) (VP (VP (VBP are) (ADJP (RB provably) (JJ work-efficient)) (ADVP (NN relative) (PP (TO to) (NP (DT a) (JJ state-of-the-art) (JJ sequential) (NN algorithm)))) (PRN (PRN (-LRB- -LRB-) (CD 2) (-RRB- -RRB-)) (NP (DT the) (NN algorithms)) (VP (VBP have) (NP (DT a) (ADJP (RB provably) (JJ small)) (JJ parallel) (NN depth)) (, ,) (S (VP (VBG showing) (SBAR (S (NP (PRP they)) (VP (MD can) (VP (VB scale) (PP (TO to) (NP (NP (DT a) (JJ large) (NN number)) (PP (IN of) (NP (NNS processors)))))))))))))) (, ,) (CC and) (S (PRN (-LRB- -LRB-) (CD 3) (-RRB- -RRB-)) (NP (NP (PRP$ our) (NNS implementations)) (PP (IN on) (NP (DT a) (NN multicore) (NN machine)))) (VP (VP (NN show) (NP (JJ good) (NN speedup) (CC and) (VBG scaling) (NN behavior)) (PP (IN with) (NP (NP (VBG increasing) (NN number)) (PP (IN of) (NP (NNS cores)))))) (, ,) (CC and) (VP (VBP are) (ADJP (ADJP (RB substantially) (JJR faster)) (PP (IN than) (NP (NP (JJ prior) (JJ shared-memory) (NN parallel) (NN algorithms)) (PP (IN for) (NP (NNP MCE))))))))))) (: ;) (S (PP (IN for) (NP (NN instance))) (, ,) (PP (IN on) (NP (JJ certain) (NN input) (NNS graphs))) (, ,) (SBAR (IN while) (S (NP (JJ prior) (NNS works)) (VP (CC either) (VP (VBD ran) (PP (IN out) (PP (IN of) (NP (NN memory))))) (CC or) (VP (VBD did) (RB not) (VP (VB complete) (PP (IN in) (NP (CD 5) (NNS hours)))))))) (, ,) (NP (PRP$ our) (NN implementation)) (VP (VBN finished) (PP (IN within) (NP (DT a) (NN minute))) (S (VP (VBG using) (NP (CD 32) (NNS cores))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBD present) (NP (NP (JJ work-efficient) (JJ parallel) (NN algorithms)) (PP (IN for) (S (VP (VBG maintaining) (NP (NP (DT the) (NN set)) (PP (IN of) (NP (DT all) (JJ maximal) (NNS cliques))) (PP (IN in) (NP (NP (DT a) (JJ dynamic) (NN graph)) (SBAR (WHNP (WDT that)) (S (VP (VBZ is) (VP (VBG changing) (PP (IN through) (NP (NP (DT the) (NN addition)) (PP (IN of) (NP (NNS edges))))))))))))))))) (. .))
