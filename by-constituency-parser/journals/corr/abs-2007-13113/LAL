(S (NP (JJS Most) (NN memory) (NNS sanitizers)) (VP (VBP work) (PP (IN by) (S (VP (VBG instrumenting) (NP (DT the) (NN program)) (PP (IN at) (NP (JJ compile) (NN time))))))) (. .))
(S (NP (EX There)) (VP (VBP are) (NP (NP (RB only) (DT a) (NN handful)) (PP (IN of) (NP (NN memory) (NNS sanitizers))) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB sanitize) (NP (DT a) (JJ binary) (NN program)) (PP (IN without) (NP (NN source) (NN code))))))))) (. .))
(S (NP (JJS Most)) (VP (VP (VBP are) (ADJP (JJ location-based))) (, ,) (CC and) (VP (VBP are) (ADVP (RB therefore)) (ADJP (JJ unable) (S (VP (TO to) (VP (VB detect) (NP (NP (NNS overflows)) (PP (IN of) (NP (NP (JJ global) (NNS variables)) (CC or) (NP (NP (NNS variables)) (PP (IN on) (NP (DT the) (NN stack))))))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP introduce) (NP (NP (DT an) (JJ identity-based) (NN memory) (NN sanitizer)) (PP (IN for) (NP (JJ binary) (NNP AArch64) (NNS programs))) (SBAR (WHNP (WDT which)) (S (VP (VBZ does) (RB not) (VP (VB need) (NP (NP (NN access)) (PP (TO to) (NP (DT the) (NN source) (NN code)))))))))) (. .))
(S (NP (PRP It)) (VP (VBZ is) (ADJP (JJ able) (S (VP (TO to) (VP (VB detect) (NP (NP (NNS overflows)) (PP (IN of) (NP (ADJP (JJ stack-) (CC and) (JJ global)) (NNS variables)))) (SBAR (SBAR (IN if) (S (S (NP (DT the) (NN user)) (VP (VBZ provides) (NP (DT some) (NNS annotations)))) (CC or) (S (NP (NNP DWARF) (VBG debugging) (NN information)) (VP (VBZ is) (ADJP (JJ available)))))) (, ,) (CONJP (RB as) (RB well) (IN as)) (NP (ADJP (RB dynamically) (JJ allocated)) (NN memory)))))))) (. .))
