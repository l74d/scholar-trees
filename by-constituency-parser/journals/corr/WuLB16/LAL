(S (NP (NNP GPUs)) (VP (VBP have) (VP (VBN been) (VP (ADVP (RB widely)) (VBN used) (S (VP (TO to) (VP (VB accelerate) (NP (NP (NNS computations)) (VP (VBG exhibiting) (NP (NP (NP (JJ simple) (NNS patterns)) (PP (IN of) (NP (NN parallelism))) (: -) (PP (JJ such) (IN as) (NP (ADJP (JJ flat) (CC or) (JJ two-level)) (NN parallelism))) (: -)) (CC and) (NP (NP (DT a) (NN degree)) (PP (IN of) (NP (NN parallelism))) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB be) (ADVP (RB statically)) (VP (VBN determined) (PP (VBN based) (PP (IN on) (NP (NP (DT the) (NN size)) (PP (IN of) (NP (DT the) (NN input) (NN dataset))))))))))))))))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (NP (DT the) (JJ effective) (NN use)) (PP (IN of) (NP (NNP GPUs))) (PP (IN for) (NP (NP (NP (JJ algorithms)) (VP (VBG exhibiting) (NP (NP (JJ complex) (NNS patterns)) (PP (IN of) (NP (NN parallelism)))))) (, ,) (VP (ADVP (RB possibly)) (VBN known) (PP (ADVP (RB only)) (IN at) (NP (NN runtime)))) (, ,)))) (VP (VBZ is) (ADVP (RB still)) (NP (DT an) (JJ open) (NN problem))) (. .))
(S (ADVP (RB Recently)) (, ,) (NP (NNP Nvidia)) (VP (VBZ has) (VP (VBN introduced) (NP (NP (NNP Dynamic) (NNP Parallelism)) (PRN (-LRB- -LRB-) (NP (NNP DP)) (-RRB- -RRB-))) (PP (IN in) (NP (PRP$ its) (NNP GPUs))))) (. .))
(S (PP (IN By) (S (VP (VBG making) (S (NP (NP (PRP it))) (ADJP (JJ possible)) (S (VP (TO to) (VP (JJ launch) (NP (NNS kernels)) (ADVP (RB directly)) (PP (IN from) (NP (NNP GPU) (NNS threads)))))))))) (, ,) (NP (DT this) (NN feature)) (VP (VBZ enables) (NP (JJ nested) (NN parallelism)) (PP (IN at) (NP (NN runtime)))) (. .))
(S (S (ADVP (RB However)) (, ,) (NP (NP (DT the) (JJ effective) (NN use)) (PP (IN of) (NP (NNP DP)))) (VP (MD must) (ADVP (RB still)) (VP (VB be) (VP (JJ understood))))) (: :) (S (NP (NP (DT a) (JJ naive) (NN use)) (PP (IN of) (NP (DT this) (NN feature)))) (VP (MD may) (VP (VP (VB suffer) (PP (IN from) (NP (JJ significant) (JJ runtime) (NN overhead)))) (CC and) (VP (NN lead) (PP (TO to) (NP (NNP GPU) (NN underutilization))) (, ,) (S (VP (VBG resulting) (PP (IN in) (NP (JJ poor) (NN performance))))))))) (. .))
(S (PP (IN In) (NP (DT this) (NN work))) (, ,) (NP (PRP we)) (VP (VBP target) (NP (DT this) (NN problem))) (. .))
(S (ADVP (RB First)) (, ,) (NP (PRP we)) (VP (VBP demonstrate) (SBAR (WHADVP (WRB how)) (S (NP (NP (DT a) (JJ naive) (NN use)) (PP (IN of) (NP (NNP DP)))) (VP (MD can) (VP (VB result) (PP (IN in) (NP (JJ poor) (NN performance)))))))) (. .))
(S (ADVP (JJ Second)) (, ,) (S (NP (PRP we)) (VP (VBP propose) (NP (NP (CD three) (NN workload) (NN consolidation) (VBZ schemes)) (SBAR (S (VP (TO to) (VP (VB improve) (NP (NP (NP (NN performance)) (CC and) (NP (JJ hardware) (NN utilization))) (PP (IN of) (NP (JJ DP-based) (NNS codes))))))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP implement) (NP (DT these) (NN code) (NNS transformations)) (PP (IN in) (NP (DT a) (JJ directive-based) (NN compiler))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP evaluate) (NP (PRP$ our) (NN framework)) (PP (IN on) (NP (NP (NP (CD two) (NNS categories)) (PP (IN of) (NP (NNS applications)))) (: :) (NP (NP (NP (NN algorithms)) (PP (VBG including) (NP (JJ irregular) (NNS loops)))) (CC and) (NP (NP (JJ algorithms)) (VP (VBG exhibiting) (NP (JJ parallel) (NN recursion)))))))) (. .))
(S (NP (PRP$ Our) (NNS experiments)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NN approach)) (VP (VP (ADVP (RB significantly)) (VBZ reduces) (NP (JJ runtime) (NN overhead))) (CC and) (VP (VBZ improves) (NP (NNP GPU) (NN utilization))) (, ,) (S (VP (VBG leading) (PP (TO to) (NP (NP (NP (VB speedup) (NNS factors)) (PP (PP (IN from) (NP (CD 90x))) (PP (TO to) (NP (CD 3300x)))) (PP (IN over) (NP (JJ basic) (JJ DP-based) (NNS solutions)))) (CC and) (NP (NP (NNS speedups)) (PP (PP (IN from) (NP (CD 2x))) (PP (TO to) (NP (CD 6x)))) (PP (IN over) (NP (JJ flat) (NNS implementations)))))))))))) (. .))
