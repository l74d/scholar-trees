(NP (NP (NN Context)) (: :) (S (NP (NNP Developers)) (VP (VBP design) (NP (NN test) (NNS suites)) (S (VP (TO to) (VP (ADVP (RB automatically)) (VB verify) (SBAR (DT that) (S (NP (NN software)) (VP (VBZ meets) (NP (PRP$ its) (JJ expected) (NNS behaviors)))))))))) (. .))
(S (NP (JJ Many) (JJ dynamic) (NN analysis) (NNS techniques)) (VP (VBP are) (VP (VBN performed) (PP (IN on) (NP (NP (DT the) (NN exploitation)) (PP (IN of) (NP (NP (NN execution) (NNS traces)) (PP (IN from) (NP (NN test) (NNS cases))))))))) (. .))
(S (ADVP (RB However)) (, ,) (PP (IN in) (NP (NN practice))) (, ,) (NP (EX there)) (VP (VBZ is) (NP (NP (QP (RB only) (CD one)) (NN trace)) (SBAR (WHNP (WDT that)) (S (VP (NNS results) (PP (IN from) (NP (NP (DT the) (NN execution)) (PP (IN of) (NP (CD one) (JJ manually-written) (NN test) (NN case)))))))))) (. .))
(NP (NP (NN Objective)) (: :) (S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP propose) (NP (NP (DT a) (JJ new) (NN technique)) (PP (IN of) (NP (NN test) (NN suite) (NN refactoring))) (, ,) (VP (VBN called) (S (NP (NNP B-Refactoring))))))) (. .))
(S (NP (NP (DT The) (NN idea)) (PP (IN behind) (NP (NNP B-Refactoring)))) (VP (VBZ is) (S (VP (TO to) (VP (VB split) (NP (DT a) (NN test) (NN case)) (PP (IN into) (NP (NP (JJ small) (NN test) (NNS fragments)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBP cover) (NP (NP (DT a) (JJ simpler) (NN part)) (PP (IN of) (NP (DT the) (NN control) (NN flow)))) (S (VP (TO to) (VP (VB provide) (NP (NP (JJR better) (NN support)) (PP (IN for) (NP (JJ dynamic) (NN analysis)))))))))))))))) (. .))
(NP (NP (NN Method)) (: :) (S (PP (IN For) (NP (DT a) (VBN given) (JJ dynamic) (NN analysis) (NN technique))) (, ,) (NP (PRP$ our) (NN test) (NN suite) (VBG refactoring) (NN approach)) (VP (VP (NNS monitors) (NP (NP (DT the) (NN execution)) (PP (IN of) (NP (NN test) (NNS cases))))) (CC and) (VP (NNS identifies) (NP (JJ small) (NN test) (NNS cases)) (PP (IN without) (NP (NP (NN loss)) (PP (IN of) (NP (DT the) (NN test) (NN ability)))))))) (. .))
(S (NP (PRP We)) (VP (VBP apply) (NP (JJ B-Refactoring)) (S (VP (TO to) (VP (VB assist) (NP (NP (CD two) (VBG existing) (NN analysis) (NNS tasks)) (: :) (NP (NP (NP (JJ automatic) (NN repair)) (PP (IN of) (NP (NNS if-statements) (NNS bugs)))) (CC and) (NP (NP (JJ automatic) (NN analysis)) (PP (IN of) (NP (NN exception) (NNS contracts)))))))))) (. .))
(NP (NP (NNS Results)) (: :) (S (NP (JJ Experimental) (NNS results)) (VP (VBP show) (SBAR (IN that) (S (NP (NN test) (NN suite) (NN refactoring)) (VP (MD can) (VP (ADVP (RB effectively)) (VB simplify) (NP (NP (DT the) (NN execution) (NNS traces)) (PP (IN of) (NP (DT the) (NN test) (NN suite)))))))))) (. .))
(S (S (NP (NP (CD Three) (JJ real-world) (NNS bugs)) (SBAR (WHNP (WDT that)) (S (VP (MD could) (ADVP (RB previously)) (RB not) (VP (VB be) (VP (VBN fixed) (PP (IN with) (NP (DT the) (JJ original) (NN test) (NN suite))))))))) (VP (VBP are) (VP (VBN fixed) (PP (IN after) (S (VP (VBG applying) (NP (NNP B-Refactoring)))))))) (: ;) (S (ADVP (RB meanwhile)) (, ,) (NP (NN exception) (NNS contracts)) (VP (VBP are) (ADVP (RB better)) (VP (VBN verified) (PP (IN via) (S (VP (VBG applying) (NP (NNP B-Refactoring)) (PP (TO to) (NP (JJ original) (NN test) (NNS suites))))))))) (. .))
(NP (NP (NNS Conclusions)) (: :) (S (NP (PRP We)) (VP (VBP conclude) (SBAR (IN that) (S (S (VP (VBG applying) (NP (NNP B-Refactoring)))) (VP (MD can) (VP (ADVP (RB effectively)) (VB improve) (NP (NP (DT the) (NN purity)) (PP (IN of) (NP (NN test) (NNS cases)))))))))) (. .))
(S (NP (VBG Existing) (JJ dynamic) (NN analysis) (NNS tasks)) (VP (MD can) (VP (VB be) (VP (VBN enhanced) (PP (IN by) (NP (NN test) (NN suite) (NN refactoring)))))) (. .))
