(S (NP (NP (NN Context)) (: :) (VP (VBN Embedded) (NP (NP (ADJP (NN Domain) (HYPH -) (JJ Specific)) (NNPS Languages)) (-LRB- -LRB-) (NP (NNS EDSLs)) (-RRB- -RRB-)))) (VP (VBP are) (NP (NP (DT a) (ADJP (ADJP (JJ common)) (CC and) (ADJP (RB widely) (VBN used))) (NN approach)) (PP (IN to) (NP (NP (NNS DSLs)) (PP (IN in) (NP (JJ various) (NNS languages))) (, ,) (PP (VBG including) (NP (NNP Haskell) (CC and) (NNP Scala))))))) (. .))
(S (NP (EX There)) (VP (VBP are) (NP (NP (NP (CD two) (JJ main) (NN implementation) (NNS techniques)) (PP (IN for) (NP (NNS EDSLs)))) (: :) (NP (NP (JJ shallow) (NNS embeddings)) (CC and) (NP (JJ deep) (NNS embeddings))))) (. .))
(FRAG (NP (NNP Inquiry)) (: :) (S (S (NP (JJ Shallow) (NNS embeddings)) (VP (VBP are) (ADJP (RB quite) (JJ simple)))) (, ,) (CC but) (S (NP (PRP they)) (VP (VP (VBP have) (VP (VBN been) (VP (VBN criticized) (PP (IN in) (NP (DT the) (NN past))) (PP (IN for) (S (VP (VBG being) (ADJP (RB quite) (JJ limited) (PP (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NN modularity)))))))))))) (CC and) (VP (VB reuse))))) (. .))
(S (PP (IN In) (ADJP (JJ particular))) (, ,) (NP (PRP it)) (VP (VBZ is) (ADVP (RB often)) (VP (VBN argued) (SBAR (IN that) (S (S (VP (VBG supporting) (NP (JJ multiple) (NN DSL) (NNS interpretations)) (PP (IN in) (NP (JJ shallow) (NNS embeddings))))) (VP (VBZ is) (ADJP (JJ difficult))))))) (. .))
(FRAG (NP (NNP Approach)) (: :) (S (NP (DT This) (NN paper)) (VP (VBZ argues) (SBAR (IN that) (S (NP (NP (JJ shallow) (NNS EDSLs)) (CC and) (NP (NP (ADJP (NN Object) (HYPH -) (VBN Oriented)) (NN Programming)) (-LRB- -LRB-) (NP (NN OOP)) (-RRB- -RRB-))) (VP (VBP are) (ADJP (RB closely) (JJ related))))))) (. .))
(S (NP (NNP Gibbons) (CC and) (NNP Wu)) (ADVP (RB already)) (VP (VBD discussed) (NP (NP (DT the) (NN relationship)) (PP (IN between) (NP (NP (JJ shallow) (NNS EDSLs)) (CC and) (NP (JJ procedural) (NN abstraction))))) (, ,) (SBAR (IN while) (S (NP (NNP Cook)) (VP (VBD discussed) (NP (NP (DT the) (NN connection)) (PP (IN between) (NP (JJ procedural) (NN abstraction) (CC and) (NN OOP)))))))) (. .))
(S (NP (PRP We)) (VP (VBP make) (NP (NP (DT the) (JJ transitive) (NN step)) (PP (IN in) (NP (DT this) (NN paper)))) (PP (IN by) (S (VP (VBG connecting) (NP (JJ shallow) (NNS EDSLs)) (ADVP (RB directly)) (PP (IN to) (NP (NP (NN OOP)) (PP (IN via) (NP (JJ procedural) (NN abstraction))))))))) (. .))
(S (NP (NP (DT The) (NN knowledge)) (PP (IN about) (NP (DT this) (NN relationship)))) (VP (VBZ enables) (S (NP (PRP us)) (VP (TO to) (VP (VB improve) (PP (IN on) (NP (NP (NN implementation) (NNS techniques)) (PP (IN for) (NP (NNS EDSLs))))))))) (. .))
(FRAG (NP (NN Knowledge)) (: :) (S (NP (DT This) (NN paper)) (VP (VBZ argues) (SBAR (IN that) (S (NP (NP (JJ common) (NN OOP) (NNS mechanisms)) (-LRB- -LRB-) (PP (VBG including) (NP (NML (NN inheritance) (, ,) (NN subtyping) (, ,) (CC and) (NN type)) (HYPH -) (NN refinement))) (-RRB- -RRB-)) (VP (VP (VB increase) (NP (DT the) (NN modularity))) (CC and) (VP (VB reuse) (PP (IN of) (NP (JJ shallow) (NNS EDSLs))) (SBAR (WHADVP (WRB when)) (S (VP (VBN compared) (PP (IN to) (NP (JJ classical) (JJ procedural) (NN abstraction))) (PP (IN by) (S (VP (VBG enabling) (NP (DT a) (JJ simple) (NN way)) (S (VP (TO to) (VP (VB express) (NP (JJ multiple) (, ,) (ADJP (RB possibly) (JJ dependent)) (, ,) (NNS interpretations))))))))))))))))) (. .))
(FRAG (NP (NN Grounding)) (: :) (S (NP (PRP We)) (VP (VBP make) (NP (PRP$ our) (NNS arguments)) (PP (IN by) (S (VP (VBG using) (NP (NP (NP (NNP Gibbons) (CC and) (NNP Wu) (POS 's)) (NNS examples)) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (JJ procedural) (NN abstraction)) (VP (VBZ is) (VP (VBN used) (PP (IN in) (NP (NNP Haskell))) (S (VP (TO to) (VP (VB model) (NP (DT a) (JJ simple) (JJ shallow) (NN EDSL))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP recode) (NP (DT that) (NN EDSL)) (PP (PP (IN in) (NP (NNP Scala))) (CC and) (PP (IN with) (NP (NP (DT an) (ADJP (NP (JJ improved) (NN OO)) (HYPH -) (VBN inspired)) (NNP Haskell)) (VP (VBG encoding)))))) (. .))
(S (NP (PRP We)) (ADVP (RB further)) (VP (VBP illustrate) (NP (PRP$ our) (NN approach)) (PP (IN with) (NP (DT a) (NN case) (NN study))) (PP (IN on) (S (VP (VBG refactoring) (NP (DT a) (JJ deep) (JJ external) (NN SQL) (NN query) (NN processor)) (S (VP (TO to) (VP (VB make) (S (NP (PRP it)) (ADJP (ADJP (RBR more) (JJ modular)) (, ,) (ADJP (JJ shallow)) (, ,) (CC and) (ADJP (VBN embedded))))))))))) (. .))
(FRAG (NP (NN Importance)) (: :) (S (NP (DT This) (NN work)) (VP (VBZ is) (ADJP (JJ important) (PP (IN for) (NP (CD two) (NNS reasons)))))) (. .))
(S (ADVP (RB Firstly)) (, ,) (PP (IN from) (NP (NP (DT an) (JJ intellectual) (NN point)) (PP (IN of) (NP (NN view))))) (, ,) (NP (DT this) (NN work)) (VP (VBZ establishes) (NP (NP (NP (DT the) (NN connection)) (PP (IN between) (NP (JJ shallow) (NNS embeddings) (CC and) (NN OOP)))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ enables) (NP (NP (DT a) (JJR better) (NN understanding)) (PP (IN of) (NP (DT both) (NNS concepts))))))))) (. .))
(S (ADVP (RB Secondly)) (, ,) (NP (DT this) (NN work)) (VP (VBZ illustrates) (NP (NP (NN programming) (NNS techniques)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VP (VB improve) (NP (DT the) (NN modularity))) (CC and) (VP (VB reuse) (PP (IN of) (NP (JJ shallow) (NNS EDSLs)))))))))))))) (. .))
