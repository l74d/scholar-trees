(S (NP (NP (DT The) (ADJP (RBS most) (JJ efficient)) (NN algorithms)) (PP (IN for) (S (VP (VBG finding) (NP (JJ maximum) (JJ independent) (NNS sets)) (PP (IN in) (NP (DT both) (NN theory) (CC and) (NN practice))))))) (VP (NN use) (NP (NN reduction) (NNS rules)) (S (VP (TO to) (VP (VB obtain) (NP (NP (DT a) (ADJP (RB much) (JJR smaller)) (NN problem) (NN instance)) (VP (VBD called) (S (NP (DT a) (NN kernel))))))))) (. .))
(S (NP (DT The) (NN kernel)) (VP (MD can) (ADVP (RB then)) (VP (VB be) (VP (VBN solved) (UCP (ADVP (ADVP (RB quickly)) (S (VP (VBG using) (NP (ADJP (JJ exact) (CC or) (JJ heuristic)) (NN algorithms))))) (: â€”) (JJ -or) (PP (IN by) (S (VP (ADVP (RB repeatedly)) (VBG kernelizing) (ADVP (RB recursively)) (PP (IN in) (NP (DT the) (JJ branch-and-reduce) (NN paradigm)))))))))) (. .))
(S (NP (NP (PRP It))) (VP (VBZ is) (PP (IN of) (NP (NP (JJ critical) (NN importance)) (PP (IN for) (NP (DT these) (NNS algorithms))))) (SBAR (DT that) (S (NP (NN kernelization)) (VP (VP (VBZ is) (ADJP (JJ fast))) (CC and) (VP (VBZ returns) (NP (DT a) (JJ small) (NN kernel))))))) (. .))
(S (NP (JJ Current) (NN algorithms)) (VP (VBP are) (VP (RB either) (ADJP (ADJP (JJ slow)) (CC but) (VP (VBP produce) (NP (DT a) (JJ small) (NN kernel)))) (, ,) (CC or) (ADJP (ADJP (RB fast)) (CC and) (VP (VB give) (NP (DT a) (JJ large) (NN kernel)))))) (. .))
(S (NP (PRP We)) (VP (VBP attempt) (S (VP (TO to) (VP (VB accomplish) (NP (NP (DT both)) (PP (IN of) (NP (DT these) (NNS goals)))) (ADVP (RB simultaneously)) (, ,) (PP (IN by) (S (VP (VBG giving) (NP (NP (DT an) (JJ efficient) (JJ parallel) (NN kernelization) (NNS algorithm)) (VP (VBN based) (PP (IN on) (NP (NP (NN graph) (NN partitioning)) (CC and) (NP (JJ parallel) (NN bipartite) (JJ maximum) (NN matching))))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP combine) (NP (PRP$ our) (NN parallelization) (NNS techniques)) (PP (IN with) (NP (NP (NP (CD two) (NNS techniques)) (SBAR (S (VP (TO to) (VP (VB accelerate) (NP (NN kernelization)) (ADVP (RB further))))))) (: :) (NP (NP (NP (NN dependency) (VBG checking)) (SBAR (WHNP (IN that)) (S (VP (NNS prunes) (NP (NP (NNS reductions)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (RB not) (VP (VB be) (VP (VBN applied))))))))))) (, ,) (CC and) (NP (NP (NN reduction) (NN tracking)) (SBAR (WHNP (WDT that)) (S (VP (VBZ allows) (S (NP (PRP us)) (VP (TO to) (VP (VB stop) (NP (NN kernelization)) (SBAR (WHADVP (WRB when)) (S (NP (NNS reductions)) (VP (VBP become) (ADJP (RBR less) (JJ fruitful)))))))))))))))) (. .))
(S (NP (PRP$ Our) (NN algorithm)) (VP (VBZ produces) (NP (NP (NNS kernels)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (ADJP (ADJP (NP (NP (NNS orders)) (PP (IN of) (NP (NN magnitude)))) (JJR smaller)) (PP (IN than) (NP (DT the) (JJS fastest) (NN kernelization) (NNS methods)))) (, ,) (SBAR (IN while) (S (VP (VBG having) (NP (DT a) (JJ similar) (NN execution) (NN time)))))))))) (. .))
(S (ADVP (RB Furthermore)) (, ,) (NP (PRP$ our) (NN algorithm)) (VP (VBZ is) (ADJP (JJ able) (S (VP (TO to) (VP (VB compute) (NP (NP (NNS kernels)) (PP (IN with) (NP (NP (NN size)) (ADJP (ADJP (JJ comparable) (PP (TO to) (NP (DT the) (JJS smallest) (JJ known) (NNS kernels)))) (, ,) (CC but) (ADJP (ADVP (NP (NP (QP (RB up) (TO to) (CD two)) (NNS orders)) (PP (IN of) (NP (NN magnitude)))) (RBR faster)) (SBAR (IN than) (S (ADJP (ADVP (RB previously)) (JJ possible)))))))))))))) (. .))
(S (ADVP (RB Finally)) (, ,) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NN kernelization) (NN algorithm)) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB accelerate) (NP (VBG existing) (JJ state-of-the-art) (JJ heuristic) (NN algorithms)) (, ,) (S (VP (VBG allowing) (S (NP (PRP us)) (VP (TO to) (VP (VB find) (NP (JJR larger) (JJ independent) (NNS sets)) (ADVP (RBR faster)) (PP (IN on) (NP (NP (JJ large) (JJ real-world) (NNS networks)) (CC and) (NP (JJ synthetic) (NNS instances)))))))))))))))))) (. .))
