(S (NP (EX There)) (VP (VBP are) (NP (NP (CD two) (JJ known) (JJ general) (NNS results)) (PP (IN on) (NP (NP (DT the) (JJ finite) (NN model) (NN property)) (PRN (-LRB- -LRB-) (NP (JJ fmp)) (-RRB- -RRB-)) (PP (IN of) (NP (NP (NP (NNS commutators)) (NX (NNP -LSB-) (NP (NNP L) (, ,) (NNP L) (POS ›)) (NN -RSB-))) (PRN (-LRB- -LRB-) (NP (NP (JJ bimodal) (NNS logics)) (PP (IN with) (NP (ADJP (NN commuting) (CC and) (NN confluent)) (NNS modalities)))) (-RRB- -RRB-)))))))) (. .))
(S (SBAR (IN If) (S (NP (NNP L)) (VP (VBZ is) (ADJP (RB finitely) (JJ axiomatisable) (PP (IN by) (NP (NP (JJ modal) (NNS formulas)) (VP (VBG having) (NP (JJ universal) (NNP Horn) (NN first-order) (NNS correspondents))))))))) (, ,) (ADVP (RB then)) (NP (DT both) (NP (NNP -LSB-) (NNP L) (, ,) (NNP K) (NNP -RSB-)) (CC and) (NP (NNP -LSB-) (NNP L) (, ,) (NNP S5) (NNP -RSB-))) (VP (VP (VBP are) (VP (VBN determined) (PP (IN by) (NP (NP (NNS classes)) (PP (IN of) (NP (NNS frames))) (SBAR (WHNP (WDT that)) (S (VP (VBP admit) (NP (NN filtration))))))))) (, ,) (CC and) (ADVP (RB so)) (VP (VB have) (NP (DT the) (NN fmp)))) (. .))
(S (PP (IN On) (NP (DT the) (JJ negative) (NN side))) (, ,) (SBAR (IN if) (S (NP (DT both) (NNP L) (CC and) (NNP L) (POS ›)) (VP (VP (VBP are) (VP (VBN determined) (PP (IN by) (NP (JJ transitive) (NNS frames))))) (CC and) (VP (VBP have) (NP (NP (NNS frames)) (PP (IN of) (NP (ADJP (RB arbitrarily) (JJ large)) (NN depth)))))))) (, ,) (ADVP (RB then)) (NP (NNP -LSB-) (NP (NNP L) (, ,) (NNP L) (POS ›)) (NN -RSB-)) (VP (VBZ does) (RB not) (VP (VB have) (NP (DT the) (NN fmp)))) (. .))
(S (PP (IN In) (NP (DT this) (NN paper))) (NP (PRP we)) (VP (VBP show) (SBAR (IN that) (S (NP (NP (NNS commutators)) (PP (IN with) (NP (DT a) (`` `) (ADJP (RB weakly) (VBN connected)) (POS ›) (NN component)))) (ADVP (RB often)) (VP (VBZ lack) (NP (DT the) (NN fmp)))))) (. .))
(S (NP (PRP$ Our) (NNS results)) (VP (VBP imply) (SBAR (IN that) (S (S (NP (DT the) (JJ above) (JJ positive) (NN result)) (VP (VBZ does) (RB not) (VP (VB generalise) (PP (TO to) (NP (ADJP (RB universally) (JJ axiomatisable)) (NN component) (NNS logics)))))) (, ,) (CC and) (S (NP (NP (RB even) (NNS commutators)) (PP (IN without) (NP (NP (`` `) (JJ transitive) ('' ›) (NNS components)) (PP (JJ such) (IN as) (NP (JJ -LSB-) (NNP K.3) (, ,) (NNP K) (NNP -RSB-)))))) (VP (MD can) (VP (VB lack) (NP (DT the) (NN fmp)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP generalise) (NP (DT the) (JJ above) (JJ negative) (NN result)) (PP (TO to) (NP (NP (NNS cases)) (SBAR (WHADVP (WRB where)) (S (NP (NP (CD one)) (PP (IN of) (NP (DT the) (NN component) (NN logics)))) (VP (VBZ has) (NP (NP (NNS frames)) (PP (IN of) (NP (NP (NN depth) (CD one)) (ADVP (RB only)))))))) (, ,) (PP (JJ such) (IN as) (NP (NP (JJ -LSB-) (NNP S4.3) (, ,) (NNP S5) (NNP -RSB-)) (CC and) (NP (DT the) (JJ decidable) (NN product) (JJ logic) (NNP S4.3xS5))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP show) (NP (NP (NNS cases)) (SBAR (WHADVP (WRB when)) (S (ADVP (RB already)) (NP (NP (NN half)) (PP (IN of) (NP (NN commutativity)))) (VP (VBZ is) (ADJP (JJ enough) (S (VP (TO to) (VP (VB force) (NP (JJ infinite) (NNS frames))))))))))) (. .))
