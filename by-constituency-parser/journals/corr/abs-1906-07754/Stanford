(S (NP (PRP We)) (VP (VBP introduce) (S (NP (NP (DT the) (VBN Constrained) (NML (JJS Least) (HYPH -) (NN cost)) (NML (NNP Tour) (-LRB- -LRB-) (NNP CLT) (-RRB- -RRB-)) (NN problem)) (: :) (VP (VBN given) (NP (NP (DT an) (JJ undirected) (NN graph)) (PP (IN with) (NP (NML (NN weight) (CC and) (NN cost)) (NNS functions)))) (PP (IN on) (NP (DT the) (NNS edges)))) (, ,)) (VP (VB minimise) (NP (NP (DT the) (JJ total) (NN cost)) (PP (IN of) (NP (NP (DT a) (NN tour)) (VP (VBN rooted) (PP (IN at) (NP (DT a) (NN start) (NN vertex))) (SBAR (JJ such) (IN that) (S (NP (DT the) (JJ total) (NN weight)) (VP (VBZ lies) (PP (IN within) (NP (DT a) (VBN given) (NN range))))))))))))) (. .))
(S (NP (NNP CLT)) (VP (VP (VBZ is) (VP (VBN related) (PP (IN to) (NP (NP (DT the) (NN family)) (PP (IN of) (S (VP (VBG Travelling) (NP (NN Salesman) (NNS Problems)) (PP (IN with) (NP (NNS Profits)))))))))) (, ,) (CC but) (VP (VBZ differs) (PP (PP (IN by) (S (VP (VBG defining) (NP (DT the) (NN weight) (NN function)) (PP (IN on) (NP (NP (NNS edges)) (PP (RB instead) (IN of) (NP (NNS vertices)))))))) (, ,) (CC and) (PP (IN by) (S (VP (VBG requiring) (NP (DT the) (JJ total) (NN weight)) (S (VP (TO to) (VP (VB be) (PP (IN within) (NP (NP (DT a) (NN range)) (PP (RB instead) (IN of) (S (VP (VBG being) (NP (QP (ADVP (RB at) (RBS least)) (DT some)) (NN quota)))))))))))))))) (. .))
(S (NP (PRP We)) (VP (VP (VBP derive) (NP (NP (DT an) (ADJP (JJ informative) (JJR lower))) (VP (VBN bound) (PP (IN by) (S (VP (VBG relaxing) (NP (NP (DT the) (NN integrality)) (PP (IN of) (NP (NNS edges)))))))))) (CC and) (VP (VB propose) (NP (NP (DT a) (NN heuristic)) (VP (VBN motivated) (PP (IN by) (NP (DT this) (NN relaxation))))))) (. .))
(S (PP (IN For) (NP (NP (DT the) (NN case)) (SBAR (WHNP (WDT that)) (S (VP (VBZ requires) (NP (DT the) (NN tour) (S (VP (TO to) (VP (VB be) (NP (DT a) (JJ simple) (NN cycle))))))))))) (, ,) (NP (PRP we)) (VP (VBP develop) (NP (NP (CD two) (NNS heuristics)) (SBAR (WHNP (WDT which)) (S (VP (VBP exploit) (NP (NP (NNP Suurballe) (POS 's)) (NN algorithm) (S (VP (TO to) (VP (VB find) (NP (NML (JJ low) (HYPH -) (NN cost)) (, ,) (ADJP (NP (NN weight)) (HYPH -) (JJ feasible)) (NNS cycles))))))))))) (. .))
(S (NP (PRP We)) (VP (VBP demonstrate) (NP (PRP$ our) (NNS algorithms)) (PP (IN by) (S (VP (VBG addressing) (NP (NP (DT a) (NML (JJ real) (HYPH -) (NN world)) (NN problem)) (SBAR (WHNP (WDT that)) (S (VP (VBZ affects) (NP (JJ urban) (NNS populations)))))) (: :) (S (VP (VBG finding) (NP (NP (NNS routes)) (SBAR (WHNP (WDT that)) (S (VP (VBP minimise) (NP (NP (NML (NN air) (NN pollution)) (NN exposure)) (PP (IN for) (NP (NP (VBG walking) (, ,) (VBG running) (CC and) (VBG cycling)) (PP (IN in) (NP (NP (DT the) (NN city)) (PP (IN of) (NP (NNP London)))))))))))))))))) (. .))
