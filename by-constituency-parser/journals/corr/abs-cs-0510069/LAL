(S (NP (NP (PRP It))) (VP (VBZ is) (NP (JJ common) (NN practice)) (S (VP (TO to) (VP (VB compare) (NP (NP (DT the) (JJ computational) (NN power)) (PP (IN of) (NP (NP (JJ different) (NNS models)) (PP (IN of) (NP (NN computation)))))))))) (. .))
(S (PP (IN For) (NP (NN example))) (, ,) (NP (DT the) (JJ recursive) (NNS functions)) (VP (VBP are) (ADJP (ADJP (RB strictly) (RBR more) (JJ powerful)) (PP (IN than) (NP (DT the) (JJ primitive) (JJ recursive) (NNS functions)))) (, ,) (SBAR (IN because) (S (NP (DT the) (NN latter)) (VP (VBP are) (NP (NP (DT a) (JJ proper) (NN subset)) (PP (IN of) (NP (DT the) (JJ former))) (PRN (-LRB- -LRB-) (SBAR (WHNP (WDT which)) (S (VP (VBZ includes) (NP (NP (NNP Ackermann) (POS 's)) (NN function))))) (-RRB- -RRB-))))))) (. .))
(S (ADVP (JJ Side-by-side) (PP (IN with) (NP (NP (DT this) (`` ``) (NN containment) ('' '') (NN method)) (PP (IN of) (S (VP (VBG measuring) (NP (NN power)))))))) (, ,) (NP (NP (PRP it))) (VP (VBZ is) (ADJP (JJ standard)) (S (VP (TO to) (VP (VB use) (NP (NP (DT an) (NN approach)) (VP (VBN based) (PP (IN on) (`` ``) (NP (NN simulation)) ('' '')))))))) (. .))
(S (PP (IN For) (NP (NN example))) (, ,) (NP (CD one)) (VP (VBZ says) (SBAR (IN that) (S (NP (DT the) (PRN (-LRB- -LRB-) (JJ untyped) (-RRB- -RRB-)) (NN lambda) (NN calculus)) (VP (VBZ is) (ADJP (RB as) (JJ powerful) (PRN (: —) (S (VP (ADVP (RB computationally)) (VBG speaking))) (: —)) (PP (IN as) (NP (DT the) (JJ partial) (JJ recursive) (NNS functions)))) (, ,) (SBAR (IN because) (S (NP (DT the) (JJ lambda) (NN calculus)) (VP (MD can) (VP (VB simulate) (NP (DT all) (JJ partial) (JJ recursive) (NNS functions)) (PP (IN by) (S (VP (VBG encoding) (NP (DT the) (JJ natural) (NNS numbers)) (PP (IN as) (NP (NN Church) (NNS numerals)))))))))))))) (. .))
(S (NP (DT The) (NN problem)) (VP (VBZ is) (SBAR (DT that) (S (NP (NP (JJ unbridled) (NN use)) (PP (IN of) (NP (NP (DT these) (CD two) (NNS ways)) (PP (IN of) (S (VP (VBG comparing) (NP (NN power)))))))) (VP (VBZ allows) (S (NP (CD one)) (VP (TO to) (VP (VB show) (SBAR (IN that) (S (NP (DT some) (JJ computational) (NNS models)) (VP (VBP are) (ADJP (ADJP (RB strictly) (JJR stronger)) (PP (IN than) (NP (PRP themselves)))))))))))))) (. !))
(S (NP (PRP We)) (VP (VBP argue) (SBAR (IN that) (S (NP (DT a) (JJR better) (NN definition)) (VP (VBZ is) (SBAR (IN that) (S (NP (NN model) (DT A)) (VP (VBZ is) (ADJP (RB strictly) (JJR stronger) (PP (IN than) (NP (NNP B)))) (SBAR (IN if) (S (NP (NNP A)) (VP (MD can) (VP (VB simulate) (NP (NNP B)) (PP (IN via) (NP (DT some) (NN encoding))) (, ,) (SBAR (IN whereas) (S (NP (NNP B)) (VP (MD can) (RB not) (VP (VB simulate) (NP (NNP A)) (PP (IN under) (NP (DT any) (NN encoding)))))))))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB then)) (VP (VBP show) (SBAR (IN that) (S (NP (DT the) (JJ recursive) (NNS functions)) (VP (VBP are) (ADJP (RB strictly) (JJR stronger) (PP (IN in) (NP (DT this) (NN sense))) (PP (IN than) (NP (DT the) (JJ primitive) (NN recursive)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP prove) (SBAR (IN that) (S (NP (NP (DT the) (JJ recursive) (NNS functions)) (, ,) (NP (JJ partial) (JJ recursive) (NNS functions)) (, ,) (CC and) (NP (NNP Turing) (NNS machines))) (VP (VBP are) (`` ``) (ADJP (JJ complete)) ('' '') (, ,) (PP (IN in) (NP (DT the) (NN sense) (SBAR (IN that) (S (NP (DT no) (JJ injective) (NN encoding)) (VP (MD can) (VP (VB make) (S (NP (PRP them)) (ADJP (VB equivalent) (PP (TO to) (NP (DT any) (`` ``) (JJ hypercomputational) ('' '') (NN model))))))))))))))) (. .))
