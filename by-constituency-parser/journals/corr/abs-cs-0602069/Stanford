(S (PP (IN In) (NP (DT this) (NN paper))) (, ,) (NP (PRP we)) (VP (VBP present) (NP (DT a) (JJ fast) (NN algorithm)) (PP (IN for) (S (VP (VBG constructing) (NP (NP (DT a) (NN concept) (PRN (-LRB- -LRB-) (NP (NNP Galois)) (-RRB- -RRB-)) (NN lattice)) (PP (IN of) (NP (DT a) (JJ binary) (NN relation))) (, ,) (PP (VBG including) (S (VP (VBG computing) (NP (NP (DT all) (NNS concepts)) (CC and) (NP (PRP$ their) (NN lattice) (NN order))))))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP present) (NP (NP (NP (CD two) (JJ efficient) (NNS variants)) (PP (IN of) (NP (DT the) (NN algorithm)))) (, ,) (NP (NP (CD one)) (PP (IN for) (S (VP (VBG computing) (NP (DT all) (NNS concepts)) (ADVP (RB only)))))) (, ,) (CC and) (NP (NP (CD one)) (PP (IN for) (S (VP (VBG constructing) (NP (DT a) (JJ frequent) (NML (JJ closed) (NN itemset)) (NN lattice)))))))) (. .))
(S (NP (NP (DT The) (NN running) (NN time)) (PP (IN of) (NP (PRP$ our) (NNS algorithms)))) (VP (VP (VBZ depends) (PP (IN on) (NP (DT the) (NN lattice) (NN structure)))) (CC and) (VP (VBZ is) (ADVP (RBR faster)) (PP (IN than) (NP (NP (DT all) (JJ other) (VBG existing) (NNS algorithms)) (PP (IN for) (NP (DT these) (NNS problems))))))) (. .))
