(S (S (VP (VBG Writing) (NP (JJ efficient) (JJ hybrid) (NN parallel) (NN code)))) (VP (VBZ is) (ADJP (JJ tedious)) (, ,) (ADJP (JJ error-prone)) (, ,) (CC and) (VP (VBZ requires) (NP (NP (JJ good) (NN knowledge)) (PP (IN of) (NP (DT both) (NP (JJ parallel) (NN programming)) (CC and) (NP (NP (NP (VBG multithreading)) (PP (JJ such) (IN as) (NP (NP (NNP MPI)) (CC and) (NP (NNP OpenMP))))) (, ,) (ADVP (NN resp)))))))) (. .))
(S (ADVP (RB Therefore)) (, ,) (NP (PRP we)) (VP (VBP present) (NP (NP (DT a) (NN framework)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN based) (PP (IN on) (NP (NP (DT a) (NN job) (NN model)) (SBAR (WHNP (WDT that)) (S (VP (VBZ allows) (S (NP (DT the) (NN user)) (VP (TO to) (VP (VB incorporate) (NP (PRP$ his) (JJ sequential) (NN code)) (PP (IN with) (NP (JJ manageable) (NN effort) (CC and) (NN code) (NNS modifications))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB be) (VP (VBN executed) (PP (IN in) (NP (NN parallel))) (PP (IN on) (NP (NP (NNS clusters) (CC or) (NNS supercomputers)) (VP (VBN built) (PP (IN from) (NP (JJ modern) (NN multi-core) (NNP CPUs))))))))))))))))))))))))) (. .))
(S (NP (NP (DT The) (JJ primary) (NN application) (NN domain)) (PP (IN of) (NP (DT this) (NN framework)))) (VP (VBP are) (NP (NP (NN simulation) (NNS codes)) (PP (IN from) (NP (NN engineering) (NNS disciplines)))) (SBAR (IN as) (S (NP (DT those)) (VP (VBP are) (PP (IN in) (NP (JJ many) (NNS cases))) (ADJP (ADVP (RB still)) (JJ sequential)) (CC and) (ADJP (PP (JJ due) (PP (TO to) (NP (PRP$ their) (NN memory) (CC and) (NN runtime) (NNS demands)))) (NP (NP (JJ prominent) (NNS candidates)) (PP (IN for) (NP (NN parallelisation))))))))) (. .))
