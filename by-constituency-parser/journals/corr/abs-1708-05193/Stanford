(S (SBAR (IN If) (S (S (NP (NN recursion)) (VP (VBZ is) (VP (VBN added) (PP (IN to) (NP (DT the) (NN language)))))) (CC and) (S (NP (CD one)) (VP (VBZ attempts) (S (VP (TO to) (VP (VB adapt) (NP (DT the) (NNS models)) (PP (IN from) (NP (-LRB- -LRB-) (NP (JJ nominal)) (-RRB- -RRB-) (SBAR (S (VP (VBZ sets) (PP (IN to) (NP (-LRB- -LRB-) (JJ nominal) (-RRB- -RRB-) (NNS domains))))))))))))))) (, ,) (ADVP (RB however)) (, ,) (NP (NP (DT the) (NML (JJ direct) (HYPH -) (NN style)) (NN construction)) (PP (IN of) (NP (DT the) (NN allocation)))) (VP (VP (VBD monad)) (ADVP (RB no) (RBR longer)) (VP (VBZ works))) (. .))
(S (NP (DT This) (NN issue)) (VP (VBZ has) (ADVP (RB previously)) (VP (VBN been) (VP (VBN addressed) (PP (IN by) (S (VP (VBG using) (NP (NP (DT a) (NN monad)) (SBAR (WHNP (WDT that)) (S (VP (VBZ combines) (NP (JJ dynamic) (NN allocation)) (PP (IN with) (NP (NNS continuations))) (, ,) (PP (IN at) (NP (DT some) (NN cost))) (PP (IN to) (NP (NN abstraction))))))))))))) (. .))
(S (PP (RB Apart) (IN from) (S (VP (VBG providing) (NP (DT a) (JJ fresh) (NN solution)) (PP (IN to) (NP (DT an) (JJ old) (NN problem)))))) (, ,) (NP (DT this) (NN work)) (VP (VBZ provides) (NP (NP (DT an) (JJ accessible) (NN setting)) (PP (IN in) (SBAR (WHNP (WDT which)) (S (VP (TO to) (VP (VB introduce) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (ADJP (NP (NN proof) (HYPH -) (JJ relevant)) (JJ logical)) (NNS relations)))) (, ,) (S (ADJP (JJ free) (PP (IN of) (NP (NP (DT the) (JJ additional) (NNS complexities)) (VP (VBN associated) (PP (IN with) (NP (NP (PRP$ their) (NN use)) (PP (IN for) (NP (ADJP (RBR more) (JJ sophisticated)) (NNS languages))))))))))))))))) (. .))
