(S (NP (NP (ADJP (RB Dynamically) (VBD typed)) (VBG programming) (NNS languages)) (PP (JJ such) (IN as) (NP (NNP Python) (CC and) (NNP JavaScript)))) (VP (VBP defer) (NP (NN type) (NN checking)) (PP (TO to) (NP (VB run) (NN time)))) (. .))
(S (NP (NNP VM) (NNS implementations)) (VP (MD can) (VP (VB improve) (NP (NN performance)) (PP (IN by) (S (VP (VBG eliminating) (NP (JJ redundant) (JJ dynamic) (NN type) (NNS checks))))))) (. .))
(S (ADVP (RB However)) (, ,) (NP (JJ type) (NN inference) (NNS analyses)) (VP (VP (VBP are) (ADVP (RB often)) (ADJP (JJ costly))) (CC and) (VP (JJ involve) (NP (NP (NNS tradeoffs)) (PP (IN between) (NP (NP (NN compilation) (NN time)) (CC and) (NP (VBG resulting) (NN precision))))))) (. .))
(S (NP (DT This)) (VP (VBZ has) (VP (VBN lead) (PP (TO to) (NP (NP (DT the) (NN creation)) (PP (IN of) (NP (ADJP (RB increasingly) (JJ complex)) (JJ multi-tiered) (NNP VM) (NNS architectures))))))) (. .))
(S (NP (NNP Lazy) (JJ basic) (NN block) (NN versioning)) (VP (VBZ is) (NP (NP (DT a) (JJ simple) (NNP JIT) (NN compilation) (NN technique)) (SBAR (WHNP (WDT which)) (S (VP (ADVP (RB effectively)) (VBZ removes) (NP (JJ redundant) (NN type) (NNS checks)) (PP (IN from) (NP (JJ critical) (NN code) (NNS paths)))))))) (. .))
(S (NP (DT This) (JJ novel) (NN approach)) (VP (ADVP (RB lazily)) (VBZ generates) (NP (NP (JJ type-specialized) (NNS versions)) (PP (IN of) (NP (JJ basic) (NNS blocks)))) (ADVP (VBP on-the-fly)) (SBAR (IN while) (S (VP (VBG propagating) (NP (JJ context-dependent) (NN type) (NN information)))))) (. .))
(S (NP (DT This) (NN approach)) (VP (VP (VBZ does) (RB not) (VP (VB require) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (JJ costly) (NN program) (NNS analyses)))))) (, ,) (VP (VBZ is) (RB not) (VP (VBN restricted) (PP (IN by) (NP (NP (DT the) (NN precision) (NNS limitations)) (PP (IN of) (NP (JJ traditional) (NN type) (NNS analyses)))))))) (. .))
(S (NP (DT This) (NN paper)) (VP (VBZ extends) (NP (JJ lazy) (JJ basic) (NN block) (VBG versioning)) (S (VP (TO to) (VP (VB propagate) (NP (JJ type) (NN information)) (ADVP (RB interprocedurally)) (, ,) (PP (IN across) (NP (NN function) (NN call) (NNS boundaries))))))) (. .))
(S (NP (NP (PRP$ Our) (NN implementation)) (PP (IN in) (NP (DT a) (NNP JavaScript) (NNP JIT) (NN compiler)))) (VP (VBZ shows) (SBAR (IN that) (S (PP (IN across) (NP (CD 26) (NNS benchmarks))) (, ,) (NP (JJ interprocedural) (JJ basic) (NN block) (VBG versioning)) (VP (NNS eliminates) (NP (NP (RBR more) (JJ type) (NN tag) (NNS tests))) (PP (IN on) (NP (NN average))) (PP (IN than) (SBAR (WHNP (WP what)) (S (VP (VBZ is) (ADJP (JJ achievable) (PP (IN with) (NP (JJ static) (NN type) (NN analysis))) (PP (IN without) (S (VP (VBG resorting) (PP (TO to) (NP (VB code) (NNS transformations))))))))))))))) (. .))
(S (PP (IN On) (NP (NN average))) (, ,) (NP (NP (CD 94.3) (NN %)) (PP (IN of) (NP (JJ type) (NN tag) (NNS tests)))) (VP (VBP are) (VP (VBN eliminated) (, ,) (S (VP (VBG yielding) (NP (NP (NNS speedups)) (PP (IN of) (NP (QP (IN up) (TO to) (CD 56)) (NN %)))))))) (. .))
(S (NP (PRP We)) (ADVP (RB also)) (VP (VBP show) (SBAR (IN that) (S (NP (PRP$ our) (NN implementation)) (VP (VBZ is) (ADJP (JJ able) (S (VP (TO to) (VP (VB outperform) (NP (NNP Truffle/JS)) (PP (IN on) (NP (JJ several) (NNS benchmarks))) (, ,) (PP (DT both) (IN in) (NP (NP (NNS terms)) (PP (IN of) (NP (NP (NN execution) (NN time)) (CC and) (NP (NN compilation) (NN time)))))))))))))) (. .))
